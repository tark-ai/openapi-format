{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0",
    "title": "CE Storefront APIs",
    "summary": "Customer-facing e-commerce API for building exceptional shopping experiences",
    "description": "Public-facing API for Commerce Engine storefronts, enabling seamless shopping experiences with product browsing, cart management, checkout processing, user accounts, and order tracking. Perfect for building web, mobile, and headless commerce applications.",
    "contact": {
      "name": "Support",
      "email": "support@commercengine.io",
      "url": "https://www.commercengine.io/contact-us"
    },
    "license": {
      "url": "https://www.commercengine.io/contact-us",
      "name": "All Rights Reserved"
    }
  },
  "servers": [
    {
      "url": "https://staging.api.commercengine.io/api/v1/{store_id}/storefront",
      "description": "Staging Server",
      "variables": {
        "store_id": {
          "description": "Store ID",
          "default": "store_id"
        }
      },
      "x-speakeasy-server-id": "staging"
    },
    {
      "url": "https://prod.api.commercengine.io/api/v1/{store_id}/storefront",
      "description": "Prod Server",
      "variables": {
        "store_id": {
          "description": "Store ID",
          "default": "store_id"
        }
      },
      "x-speakeasy-server-id": "prod"
    }
  ],
  "paths": {
    "/analytics/track": {
      "post": {
        "operationId": "track-analytics-event",
        "summary": "Track event",
        "description": "Track event",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyticsEvent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/track-analytics-event",
          "description": "API reference for the track-analytics-event operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Analytics"
        ],
        "x-speakeasy-group": "analytics",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "trackAnalyticsEvent"
      }
    },
    "/auth/anonymous": {
      "post": {
        "operationId": "get-anonymous-token",
        "summary": "Anonymous user",
        "description": "This APIâ€™s focus is on anonymous users who have not undergone the formal account creation process. These anonymous users are associated with a unique ID, ensuring that even in the absence of a fully realized account, there is a distinct and trackable identity for each user. \nTo interact with the system, each anonymous user is issued an access token. This access token plays a dual role in the system: it serves as a means of authenticating the user and it also acts as a tool for authorization, determining what actions the authenticated user is permitted to perform.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A string containing a descriptive message related to the success or failure of the anonymous user creation or authentication.",
                      "type": "string"
                    },
                    "success": {
                      "description": "A boolean value indicates the success or failure of the anonymous user operation.`true` for success `false` for failure.",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "user": {
                          "description": "Information about the user, including their name, email, profile image, etc.",
                          "$ref": "#/components/schemas/AnonymousUser"
                        },
                        "access_token": {
                          "description": "It is a string-based token utilized for authentication and authorization.",
                          "type": "string"
                        },
                        "refresh_token": {
                          "description": "It is a string-based token designed for refreshing the user's access token. ",
                          "type": "string"
                        }
                      },
                      "required": [
                        "user",
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-anonymous-token",
          "description": "API reference for the get-anonymous-token operation"
        },
        "security": [
          {
            "X-Api-Key": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "getAnonymousToken"
      }
    },
    "/auth/change-password": {
      "post": {
        "operationId": "change-password",
        "summary": "Change password",
        "description": "The Change Password API is a key feature designed to provide a secure and standardized method for users to update their passwords.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "old_password": {
                    "description": "The old password associated with the user's account. This parameter is crucial for verifying the user's identity before allowing a password change.",
                    "type": "string"
                  },
                  "new_password": {
                    "description": "The new password that the user intends to set for their account. This parameter is necessary for updating the password to enhance account security.",
                    "type": "string"
                  },
                  "confirm_password": {
                    "description": "A confirmation of the new password.",
                    "type": "string"
                  }
                },
                "required": [
                  "old_password",
                  "new_password",
                  "confirm_password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the change password operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "access_token": {
                          "description": "It is a string-based token utilized for authentication and authorization.",
                          "type": "string"
                        },
                        "refresh_token": {
                          "description": "It is a string-based token designed for refreshing the user's access token.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/change-password",
          "description": "API reference for the change-password operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "changePassword"
      }
    },
    "/auth/forgot-password": {
      "post": {
        "operationId": "forgot-password",
        "summary": "Forgot password",
        "description": "The Forgot Password API provides a secure mechanism for users to initiate the password recovery process. This API provides one-time password (OTP) token, which facilitas the resetting of userâ€™s account password.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "A string representing the email address.",
                    "type": "string"
                  },
                  "phone": {
                    "description": "10 digit phone number without country code.",
                    "type": "string"
                  },
                  "country_code": {
                    "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.\nUse this key along with phone. Not necessary for email.",
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "phone",
                  "country_code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "otp_token": {
                          "description": "A string representing the OTP token which facilitas the resetting of userâ€™s account password.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "otp_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/forgot-password",
          "description": "API reference for the forgot-password operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "forgotPassword"
      }
    },
    "/auth/generate-otp": {
      "post": {
        "operationId": "generate-otp",
        "summary": "Generate OTP",
        "description": "Generating a One-Time Password (OTP) typically involves creating a random code that is sent to a user for authentication or verification purposes.",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GenerateOtpWithPhone"
                  },
                  {
                    "$ref": "#/components/schemas/GenerateOtpWithEmail"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "otp_token": {
                          "description": "A string representing the OTP token.",
                          "type": "string"
                        },
                        "otp_action": {
                          "description": "This is used for verifying OTP or using subsequent APIs call.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "otp_token",
                        "otp_action"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/generate-otp",
          "description": "API reference for the generate-otp operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "generateOtp"
      }
    },
    "/auth/login/email": {
      "post": {
        "operationId": "login-with-email",
        "summary": "Login with email",
        "description": "This API enables users to authenticate into the system using their email address. It provides a secure way for users to Login by verifying their identity through a one-time password (OTP) sent to their email address.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "User's email address.",
                    "type": "string",
                    "format": "email"
                  },
                  "register_if_not_exists": {
                    "description": "This is used to send OTP to unregistered phone. By default it sends OTP to registered phone only. \nTo send OTP to unregistered phone it should be pass with true value like this,\n\"register_if_not_exists\": true",
                    "type": "boolean"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the Login process.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "otp_token": {
                          "description": "The otp token is a unique code that is used for authentication during the Login process.",
                          "type": "string"
                        },
                        "otp_action": {
                          "description": "It is used for verifying OTP and using subsequent API call.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "otp_token",
                        "otp_action"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/login-with-email",
          "description": "API reference for the login-with-email operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "loginWithEmail"
      }
    },
    "/auth/login/password": {
      "post": {
        "operationId": "login-with-password",
        "summary": "Login with password",
        "description": "This API endpoint allows users to Login using their password. It requires the following parameters: email/phone and password. Also allows users to securely Login and obtain access and refresh tokens for subsequent API calls.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "oneOf": [
                  {
                    "required": [
                      "phone",
                      "password"
                    ],
                    "title": "phone",
                    "properties": {
                      "phone": {
                        "description": "User's phone number.",
                        "type": "string"
                      },
                      "country_code": {
                        "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.\nUse this key along with phone. Not necessary for email.",
                        "type": "string",
                        "default": "+91"
                      },
                      "password": {
                        "description": "The password associated with the user's account.",
                        "type": "string"
                      }
                    }
                  },
                  {
                    "required": [
                      "email",
                      "password"
                    ],
                    "title": "email",
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the Login process.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "user": {
                          "description": "Information about the user, including their name, email, profile image, etc.",
                          "$ref": "#/components/schemas/User"
                        },
                        "access_token": {
                          "description": "It is a string-based token utilized for authentication and authorization.",
                          "type": "string"
                        },
                        "refresh_token": {
                          "description": "It is a string-based token designed for refreshing the user's access token.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "user",
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/login-with-password",
          "description": "API reference for the login-with-password operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "loginWithPassword"
      }
    },
    "/auth/login/phone": {
      "post": {
        "operationId": "login-with-phone",
        "summary": "Login with phone",
        "description": "This API enables users to authenticate into the system using their phone number. It provides a secure way for users to log in by verifying their identity through a one-time password (OTP) sent to their registered phone.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "country_code": {
                    "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.",
                    "type": "string",
                    "default": "+91",
                    "const": "+91"
                  },
                  "phone": {
                    "description": "10 digit phone number without country code.",
                    "type": "string"
                  },
                  "register_if_not_exists": {
                    "description": "This is used to send OTP to unregistered phone. By default it sends OTP to registered phone only. \nTo send OTP to unregistered phone it should be pass with true value like this,\n\"register_if_not_exists\": true",
                    "type": "boolean"
                  }
                },
                "required": [
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the Login process.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "otp_token": {
                          "description": "The otp token is a unique code that is used for authentication during the Login/Register process.",
                          "type": "string"
                        },
                        "otp_action": {
                          "description": "It is used for verifying OTP and using subsequent API call.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "otp_token",
                        "otp_action"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/login-with-phone",
          "description": "API reference for the login-with-phone operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "loginWithPhone"
      }
    },
    "/auth/login/whatsapp": {
      "post": {
        "operationId": "login-with-whatsapp",
        "summary": "Login with whatsapp",
        "description": "This API enables users to authenticate into the system using their WhatsApp Number. It provides a secure way for users to Login by verifying their identity through a one-time password (OTP) sent to their WhatsApp Number.",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "country_code": {
                    "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.",
                    "const": "+91"
                  },
                  "phone": {
                    "description": "10 digit phone number without country code linked with WhatsApp.",
                    "type": "string"
                  },
                  "register_if_not_exists": {
                    "description": "This is used to send OTP to unregistered phone. By default it sends OTP to registered phone only. \nTo send OTP to unregistered phone it should be pass with true value like this,\n\"register_if_not_exists\": true",
                    "type": "boolean"
                  }
                },
                "required": [
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the Login process.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "otp_token": {
                          "description": "The otp token is a unique code that is used for authentication during the Login process.",
                          "type": "string"
                        },
                        "otp_action": {
                          "description": "It is used for verifying OTP and using subsequent API call.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "otp_token",
                        "otp_action"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/login-with-whatsapp",
          "description": "API reference for the login-with-whatsapp operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "loginWithWhatsapp"
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "logout",
        "summary": "Logout user",
        "description": "The Logout User API initiate the logout process for a user. Upon a successful request, the API responds with a confirmation message. If the user is not found or there's an issue with the request, an error response is returned with an appropriate message.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "access_token": {
                          "description": "It is a string-based token utilized for authentication and authorization.",
                          "type": "string"
                        },
                        "refresh_token": {
                          "description": "It is a string-based token designed for refreshing the user's access token.",
                          "type": "string"
                        },
                        "user": {
                          "description": "An object representing user details.",
                          "$ref": "#/components/schemas/User"
                        }
                      },
                      "required": [
                        "access_token",
                        "refresh_token",
                        "user"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/logout",
          "description": "API reference for the logout operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "logout"
      }
    },
    "/auth/refresh-token": {
      "post": {
        "operationId": "refresh-token",
        "summary": "Refresh access token",
        "description": "The Refresh Access Token API is an integral component designed to enhance security and user experience. It enables clients to refresh their access tokens seamlessly, extending user sessions without compromising security.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": {
                    "description": "A string representing the refresh token.",
                    "type": "string"
                  }
                },
                "required": [
                  "refresh_token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "access_token": {
                          "description": "It is a string-based token utilized for authentication and authorization.",
                          "type": "string"
                        },
                        "refresh_token": {
                          "description": "It is a string-based token designed for refreshing the user's access token.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/refresh-token",
          "description": "API reference for the refresh-token operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "refreshToken"
      }
    },
    "/auth/register/email": {
      "post": {
        "operationId": "register-with-email",
        "summary": "Register with email",
        "description": "The API allows users to register with their email address. This endpoint enables the registration process by requesting the user's email, first name, last name, phone number.\nThe response will include a message indicating the success or failure of the registration process, as well as additional information such as the user's information, access token and refresh token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "A string representing the email address.",
                    "type": "string"
                  },
                  "first_name": {
                    "description": "A string representing the first name.",
                    "type": "string"
                  },
                  "last_name": {
                    "description": "A string representing the last name.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "phone": {
                    "description": "A string representing the phone number.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "required": [
                  "email",
                  "first_name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the Registration process.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "user": {
                          "description": "An object representing user details.",
                          "$ref": "#/components/schemas/User"
                        },
                        "access_token": {
                          "description": "It is a string-based token utilized for authentication and authorization.",
                          "type": "string"
                        },
                        "refresh_token": {
                          "description": "It is a string-based token designed for refreshing the user's access token.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "user",
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/register-with-email",
          "description": "API reference for the register-with-email operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "registerWithEmail"
      }
    },
    "/auth/register/password": {
      "post": {
        "operationId": "register-with-password",
        "summary": "Register with password",
        "description": "The User Registration with Password API facilitates user onboarding by allowing registration through a combination of phone number and email. API collects essential registration details, including phone number, email, password and the confirmation of the chosen password.\nThe response will include a message indicating the success or failure of the registration process, as well as additional information such as the user's information, access token and refresh token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RegisterWithEmailPassword"
                  },
                  {
                    "$ref": "#/components/schemas/RegisterWithPhonePassword"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the Registration process.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "user": {
                          "description": "An object representing user details.",
                          "$ref": "#/components/schemas/User"
                        },
                        "access_token": {
                          "description": "It is a string-based token utilized for authentication and authorization.",
                          "type": "string"
                        },
                        "refresh_token": {
                          "description": "It is a string-based token designed for refreshing the user's access token.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "user",
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/register-with-password",
          "description": "API reference for the register-with-password operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "registerWithPassword"
      }
    },
    "/auth/register/phone": {
      "post": {
        "operationId": "register-with-phone",
        "summary": "Register with phone",
        "description": "This API provides the functionality to register a user using their phone number. This allows you to securely register users and obtain access and refresh tokens for subsequent API calls.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "country_code": {
                    "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "const": "+91"
                  },
                  "phone": {
                    "description": "10 digit phone number without country code.",
                    "type": "string"
                  },
                  "first_name": {
                    "description": "A string representing the first name.",
                    "type": "string"
                  },
                  "last_name": {
                    "description": "A string representing the last name.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "email": {
                    "description": "A string representing the email address.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "required": [
                  "phone",
                  "first_name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the Registration process.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "user": {
                          "description": "An object representing user details.",
                          "$ref": "#/components/schemas/User"
                        },
                        "access_token": {
                          "description": "It is a string-based token utilized for authentication and authorization.",
                          "type": "string"
                        },
                        "refresh_token": {
                          "description": "It is a string-based token designed for refreshing the user's access token.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "user",
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/register-with-phone",
          "description": "API reference for the register-with-phone operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "registerWithPhone"
      }
    },
    "/auth/register/whatsapp": {
      "post": {
        "operationId": "register-with-whatsapp",
        "summary": "Register with whatsapp",
        "description": "The API allows users to register with their WhatsApp. This endpoint enables the registration process by requesting the user's WhatsApp number, first name, last name, email.\nThe response will include a message indicating the success or failure of the registration process, as well as additional information such as the user's information, access token and refresh token.\n",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "country_code": {
                    "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "const": "+91"
                  },
                  "phone": {
                    "description": "10 digit whatsapp number without country code.",
                    "type": "string"
                  },
                  "first_name": {
                    "description": "A string representing the first name.",
                    "type": "string"
                  },
                  "last_name": {
                    "description": "A string representing the last name.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "email": {
                    "description": "A string representing the email address.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "required": [
                  "phone",
                  "first_name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the Registration process.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "user": {
                          "description": "An object representing user details.",
                          "$ref": "#/components/schemas/User"
                        },
                        "access_token": {
                          "description": "It is a string-based token utilized for authentication and authorization.",
                          "type": "string"
                        },
                        "refresh_token": {
                          "description": "It is a string-based token designed for refreshing the user's access token.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "user",
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/register-with-whatsapp",
          "description": "API reference for the register-with-whatsapp operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "registerWithWhatsapp"
      }
    },
    "/auth/reset-password": {
      "post": {
        "operationId": "reset-password",
        "summary": "Reset password",
        "description": "Reset password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "new_password": {
                    "description": "The new password that the user wants to set for their account.",
                    "type": "string"
                  },
                  "confirm_password": {
                    "description": "A confirmation of the new password.",
                    "type": "string"
                  },
                  "otp_token": {
                    "description": "A string representing the OTP token which facilitas the resetting of userâ€™s account password.",
                    "type": "string"
                  }
                },
                "required": [
                  "new_password",
                  "confirm_password",
                  "otp_token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the reset password operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "access_token": {
                          "description": "It is a string-based token utilized for authentication and authorization.",
                          "type": "string"
                        },
                        "refresh_token": {
                          "description": "It is a string-based token designed for refreshing the user's access token.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/reset-password",
          "description": "API reference for the reset-password operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "resetPassword"
      }
    },
    "/auth/user/{id}": {
      "get": {
        "operationId": "get-user-detail",
        "summary": "Retrieve a user",
        "description": "The Retrieve User API is designed to facilitate the retrieval of comprehensive user information from the system. A required parameter is a user-id of the user whose information needs to be retrieved.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the Registration process.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "user": {
                          "description": "An object containing the response content.",
                          "$ref": "#/components/schemas/User"
                        }
                      },
                      "required": [
                        "user"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-user-detail",
          "description": "API reference for the get-user-detail operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "getUserDetail"
      },
      "put": {
        "operationId": "update-user",
        "summary": "Update a user",
        "description": "The Update User API helps to efficiently modify and enhance user information within the system, ensuring that user profiles remain accurate and up-to-date. This API provides a secure and flexible mechanism for updating specific details while maintaining adherence to established conventions.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the Registration process.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "user": {
                          "description": "An object containing the response content.",
                          "$ref": "#/components/schemas/User"
                        }
                      },
                      "required": [
                        "user"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/update-user",
          "description": "API reference for the update-user operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "updateUser"
      }
    },
    "/auth/user/{id}/deactivate": {
      "put": {
        "operationId": "deactivate-user",
        "summary": "Deactivate account",
        "description": "The Deactivate Account API providing users with a straightforward method to deactivate their accounts. Upon successful deactivation, the API responds with a confirmation message. Error responses are detailed, aiding developers in addressing issues promptly.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the deactivate account operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "message",
                    "success"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/deactivate-user",
          "description": "API reference for the deactivate-user operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "deactivateUser"
      }
    },
    "/auth/user/{id}/notification-preferences": {
      "get": {
        "operationId": "get-notification-preferences",
        "summary": "Retrieve user notification preferences",
        "description": "The Retrieve Notification Preferences API allows clients to fetch a user's notification preferences based on their unique user identifier (user_id).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "notification_preferences": {
                          "description": "An object containing the user's notification preferences.",
                          "$ref": "#/components/schemas/NotificationPreferences"
                        }
                      },
                      "required": [
                        "notification_preferences"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-notification-preferences",
          "description": "API reference for the get-notification-preferences operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "getNotificationPreferences"
      },
      "post": {
        "operationId": "create-notification-preferences",
        "summary": "Create user notification preferences",
        "description": "Create user notification preferences API allows clients to create a user's notification preferences based on their unique user identifier (user_id).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notification_preferences": {
                    "description": "An object containing the user's notification preferences.",
                    "$ref": "#/components/schemas/NotificationPreferences"
                  }
                },
                "required": [
                  "notification_preferences"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "notification_preferences": {
                          "description": "An object containing the user's notification preferences.",
                          "$ref": "#/components/schemas/NotificationPreferences"
                        }
                      },
                      "required": [
                        "notification_preferences"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/create-notification-preferences",
          "description": "API reference for the create-notification-preferences operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "createNotificationPreferences"
      },
      "put": {
        "operationId": "update-notification-preferences",
        "summary": "Update user notification preferences",
        "description": "Update Notification Preferences API allows clients to update a user's notification preferences based on their unique user identifier (user_id).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notification_preferences": {
                    "description": "An object containing the user's notification preferences.",
                    "$ref": "#/components/schemas/NotificationPreferences"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "notification_preferences": {
                          "description": "An object containing the user's notification preferences.",
                          "$ref": "#/components/schemas/NotificationPreferences"
                        }
                      },
                      "required": [
                        "notification_preferences"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/update-notification-preferences",
          "description": "API reference for the update-notification-preferences operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "updateNotificationPreferences"
      }
    },
    "/auth/user/{id}/profile-image": {
      "post": {
        "operationId": "add-profile-image",
        "summary": "Add profile image",
        "description": "The Profile Image API streamlines the process of uploading profile images associating with user accounts, offering a user-centric approach to visual identity customization. Upon success, the API responds with a confirmation message. In case of errors, clear error messages facilitate quick issue resolution. Overall, the Profile Image API enhances user engagement by seamlessly integrating personalized visual elements into digital platforms.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "contentMediaType": "application/octet-stream"
                  }
                },
                "required": [
                  "image"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the add operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "profile_image_url": {
                          "description": "A string representing the URL to a profile image.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "profile_image_url"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/add-profile-image",
          "description": "API reference for the add-profile-image operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "addProfileImage"
      },
      "put": {
        "operationId": "update-profile-image",
        "summary": "Update profile image",
        "description": "The Profile Image API streamlines the process of updating profile images associating with user accounts, offering a user-centric approach to visual identity customization. Upon success, the API responds with a confirmation message. In case of errors, clear error messages facilitate quick issue resolution. Overall, the Profile Image API enhances user engagement by seamlessly integrating personalized visual elements into digital platforms.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "contentMediaType": "application/octet-stream"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the update operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "profile_image_url": {
                          "description": "A string representing the URL to a profile image.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "profile_image_url"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/update-profile-image",
          "description": "API reference for the update-profile-image operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "updateProfileImage"
      },
      "delete": {
        "operationId": "remove-profile-image",
        "summary": "Delete profile image",
        "description": "Delete profile image API streamlines the process of removing profile images associating with user accounts. Upon success, the API responds with a confirmation message. In case of errors, clear error messages facilitate quick issue resolution.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the delete operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "message",
                    "success"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/remove-profile-image",
          "description": "API reference for the remove-profile-image operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "removeProfileImage"
      },
      "get": {
        "operationId": "get-profile-image",
        "summary": "Retrieve a profile image",
        "description": "Retrieve user profile image API streamlines the process of retriving profile images associating with user accounts. Upon success, the API responds with a confirmation message. In case of errors, clear error messages facilitate quick issue resolution.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the retrieve operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "profile_image_url": {
                          "description": "A string representing the URL to a profile image.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "profile_image_url"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-profile-image",
          "description": "API reference for the get-profile-image operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "getProfileImage"
      }
    },
    "/auth/verified-email-phone": {
      "post": {
        "operationId": "check-verification-status",
        "summary": "Check email/phone verification status",
        "description": "The Check Verification Status API allows to verify the status of email and phone number verification for a specific user. Upon a successful request, the API responds with the verification status of the provided email and phone number. If the user is not found or there's an issue with the request, an error response is returned with an appropriate message.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "description": "A string representing the phone number.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "email": {
                    "description": "A string representing the email address.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "verified_phone": {
                          "description": "An array containing verified phone numbers for the user",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "verified_email": {
                          "description": "An array containing verified email address for the user.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "verified_phone",
                        "verified_email"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/check-verification-status",
          "description": "API reference for the check-verification-status operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "checkVerificationStatus"
      }
    },
    "/auth/verify-otp": {
      "post": {
        "operationId": "verify-otp",
        "summary": "Verify OTP",
        "description": "This API endpoint allows you to verify a one-time password (OTP) for authentication purposes. By sending a request to this endpoint with the necessary parameters, you can confirm the validity of the OTP provided by the user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "otp": {
                    "description": "A string representing the one-time password.",
                    "type": "string"
                  },
                  "otp_token": {
                    "description": "A string representing the OTP token.",
                    "type": "string"
                  },
                  "otp_action": {
                    "description": "A string indicating the action to be performed.",
                    "type": "string",
                    "enum": [
                      "login",
                      "register",
                      "reset-password",
                      "verify-phone",
                      "verify-email",
                      "update-phone",
                      "update-email"
                    ]
                  }
                },
                "required": [
                  "otp",
                  "otp_token",
                  "otp_action"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A string providing additional information about the response.",
                      "type": "string"
                    },
                    "success": {
                      "description": " A boolean indicating whether the operation was successful or not.",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "user": {
                          "description": "An object representing user details.",
                          "$ref": "#/components/schemas/User"
                        },
                        "access_token": {
                          "description": "A string representing the access token.",
                          "type": "string"
                        },
                        "refresh_token": {
                          "description": "A string representing the refresh token.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "user",
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/verify-otp",
          "description": "API reference for the verify-otp operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "verifyOtp"
      }
    },
    "/campaigns/newsletter-subscribe": {
      "post": {
        "operationId": "subscribe-newsletter",
        "summary": "Subscribe to newsletter",
        "description": "Subscribe to newsletter",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/subscribe-newsletter",
          "description": "API reference for the subscribe-newsletter operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Campaigns"
        ],
        "x-speakeasy-group": "campaigns",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "subscribeNewsletter"
      }
    },
    "/carts": {
      "post": {
        "operationId": "create-cart",
        "summary": "Create cart",
        "description": "Create cart",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UpdateCartItem"
                    }
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "items"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/create-cart",
          "description": "API reference for the create-cart operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Carts"
        ],
        "x-speakeasy-group": "carts",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "createCart"
      }
    },
    "/carts/available-coupons": {
      "get": {
        "operationId": "list-coupons",
        "summary": "Retrieve all coupons",
        "description": "Retrieve active coupons",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "coupons": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Coupon"
                          }
                        }
                      },
                      "required": [
                        "coupons"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-coupons",
          "description": "API reference for the list-coupons operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Carts"
        ],
        "x-speakeasy-group": "carts",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listCoupons"
      },
      "parameters": []
    },
    "/carts/available-promotions": {
      "get": {
        "operationId": "list-promotions",
        "summary": "Retrieve all promotions",
        "description": "All active promotions",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "promotions": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Promotion"
                          }
                        }
                      },
                      "required": [
                        "promotions"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-promotions",
          "description": "API reference for the list-promotions operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Carts"
        ],
        "x-speakeasy-group": "carts",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listPromotions"
      },
      "parameters": []
    },
    "/carts/users/{user_id}": {
      "get": {
        "operationId": "get-user-cart",
        "summary": "Retrieve cart using user id",
        "description": "Retrieve cart detail using user id",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "cart details"
                      ],
                      "readOnly": true
                    },
                    "success": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-user-cart",
          "description": "API reference for the get-user-cart operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Carts"
        ],
        "x-speakeasy-group": "carts",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "getUserCart"
      },
      "delete": {
        "operationId": "delete-user-cart",
        "summary": "Delete cart using user id",
        "description": "delete all items from the cart using user id.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "All cart items are removed."
                      ],
                      "readOnly": true
                    },
                    "success": {
                      "type": "boolean",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "message",
                    "success"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/delete-user-cart",
          "description": "API reference for the delete-user-cart operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Carts"
        ],
        "x-speakeasy-group": "carts",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "removeUserCart"
      },
      "parameters": [
        {
          "name": "user_id",
          "in": "path",
          "description": "User ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/carts/{id}": {
      "get": {
        "operationId": "get-cart",
        "summary": "Retrieve cart detail",
        "description": "Retrieve cart detail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "cart details"
                      ],
                      "readOnly": true
                    },
                    "success": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-cart",
          "description": "API reference for the get-cart operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Carts"
        ],
        "x-speakeasy-group": "carts",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "getCart"
      },
      "delete": {
        "operationId": "delete-cart",
        "summary": "Delete cart",
        "description": "delete all items from the cart.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "All cart items are removed."
                      ],
                      "readOnly": true
                    },
                    "success": {
                      "type": "boolean",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "message",
                    "success"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/delete-cart",
          "description": "API reference for the delete-cart operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Carts"
        ],
        "x-speakeasy-group": "carts",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "deleteCart"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Cart ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/carts/{id}/address": {
      "post": {
        "operationId": "create-cart-address",
        "summary": "Update cart address",
        "description": "Update billing and shipping address",
        "requestBody": {
          "description": "Update billing and shipping address during checkout",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "oneOf": [
                  {
                    "title": "Registered User",
                    "description": "For registered users where address is previously added",
                    "required": [
                      "billing_address_id",
                      "shipping_address_id"
                    ],
                    "properties": {
                      "billing_address_id": {
                        "type": "string"
                      },
                      "shipping_address_id": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "Guest User",
                    "description": "For guest checkout where address is not saved",
                    "required": [
                      "billing_address",
                      "shipping_address"
                    ],
                    "properties": {
                      "billing_address": {
                        "$ref": "#/components/schemas/CustomerAddress"
                      },
                      "shipping_address": {
                        "$ref": "#/components/schemas/CustomerAddress"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "Address updated successfully"
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/create-cart-address",
          "description": "API reference for the create-cart-address operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Carts"
        ],
        "x-speakeasy-group": "carts",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "createCartAddress"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Cart ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/carts/{id}/coupon": {
      "post": {
        "operationId": "apply-coupon",
        "summary": "Apply coupon",
        "description": "Apply coupon",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "coupon_code": {
                    "type": "string",
                    "examples": [
                      "FLAT100OFF"
                    ]
                  }
                },
                "required": [
                  "coupon_code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/apply-coupon",
          "description": "API reference for the apply-coupon operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Carts"
        ],
        "x-speakeasy-group": "carts",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "applyCoupon"
      },
      "delete": {
        "operationId": "remove-coupon",
        "summary": "Remove coupon",
        "description": "remove coupon from cart",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/remove-coupon",
          "description": "API reference for the remove-coupon operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Carts"
        ],
        "x-speakeasy-group": "carts",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "removeCoupon"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Cart ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/carts/{id}/credit-balance": {
      "post": {
        "operationId": "redeem-credit-balance",
        "summary": "Use credit balance",
        "description": "Use credit balance",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "credit_balance_used": {
                    "type": "number",
                    "format": "double",
                    "examples": [
                      200
                    ]
                  }
                },
                "required": [
                  "credit_balance_used"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/redeem-credit-balance",
          "description": "API reference for the redeem-credit-balance operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Carts"
        ],
        "x-speakeasy-group": "carts",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "redeemCreditBalance"
      },
      "delete": {
        "operationId": "remove-credit-balance",
        "summary": "Remove credit balance",
        "description": "remove credit balance applied to cart",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/remove-credit-balance",
          "description": "API reference for the remove-credit-balance operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Carts"
        ],
        "x-speakeasy-group": "carts",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "removeCreditBalance"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Cart ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/carts/{id}/evaluate-coupons": {
      "get": {
        "operationId": "evaluate-coupons",
        "summary": "Evaluate coupons",
        "description": "Evaluate applicable & inapplicable coupons based on the specified cart.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "applicable_coupons": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApplicableCoupon"
                          }
                        },
                        "inapplicable_coupons": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/InapplicableCoupon"
                          }
                        }
                      },
                      "required": [
                        "applicable_coupons",
                        "inapplicable_coupons"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/evaluate-coupons",
          "description": "API reference for the evaluate-coupons operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Carts"
        ],
        "x-speakeasy-group": "carts",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listPromotions"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Cart Id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/carts/{id}/evaluate-promotions": {
      "get": {
        "operationId": "evaluate-promotions",
        "summary": "Evaluate promotions",
        "description": "Evaluate applicable & inapplicable promotions based on the specified cart.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "applicable_promotions": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApplicablePromotion"
                          }
                        },
                        "inapplicable_promotions": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/InapplicablePromotion"
                          }
                        }
                      },
                      "required": [
                        "applicable_promotions",
                        "inapplicable_promotions"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/evaluate-promotions",
          "description": "API reference for the evaluate-promotions operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Carts"
        ],
        "x-speakeasy-group": "carts",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listPromotions"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Cart Id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/carts/{id}/fulfillment-preference": {
      "post": {
        "operationId": "update-fulfillment-preference",
        "summary": "Update fulfillment preference",
        "description": "Update fulfillment preference",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CollectInStoreFulfillment"
                  },
                  {
                    "$ref": "#/components/schemas/DeliveryFulfillment"
                  },
                  {
                    "$ref": "#/components/schemas/PartialCollectAndDelivery"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "message",
                    "success"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/update-fulfillment-preference",
          "description": "API reference for the update-fulfillment-preference operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Carts"
        ],
        "x-speakeasy-group": "carts",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "updateFulfillmentPreference"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Cart ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/carts/{id}/items": {
      "post": {
        "operationId": "update-cart",
        "summary": "Add/delete cart item",
        "description": "Add Item to cart. To delete item from cart, pass quantity = 0",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "cart id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCartItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/update-cart",
          "description": "API reference for the update-cart operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Carts"
        ],
        "x-speakeasy-group": "carts",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "updateCart"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Cart ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/carts/{id}/loyalty-points": {
      "post": {
        "operationId": "redeem-loyalty-points",
        "summary": "Redeem loyalty points",
        "description": "Redeem loyalty points",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "loyalty_point_redeemed": {
                    "type": "integer",
                    "examples": [
                      1000
                    ],
                    "minimum": 1
                  }
                },
                "required": [
                  "loyalty_point_redeemed"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/redeem-loyalty-points",
          "description": "API reference for the redeem-loyalty-points operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Carts"
        ],
        "x-speakeasy-group": "carts",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "redeemLoyaltyPoints"
      },
      "delete": {
        "operationId": "remove-loyalty-points",
        "summary": "Remove loyalty points",
        "description": "Remove loyalty points applied in cart",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/remove-loyalty-points",
          "description": "API reference for the remove-loyalty-points operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Carts"
        ],
        "x-speakeasy-group": "carts",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "removeLoyaltyPoints"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Cart ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/carts/{id}/shipping-method": {
      "post": {
        "operationId": "update-shipping-method",
        "summary": "Update shipping method",
        "description": "Update preferred shipping method and courier.",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shipping_provider_id": {
                    "type": "string"
                  },
                  "courier_company_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "required": [
                  "shipping_provider_id",
                  "courier_company_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/update-shipping-method",
          "description": "API reference for the update-shipping-method operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Carts"
        ],
        "x-speakeasy-group": "carts",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "addShippingMethod"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Cart ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/wishlist/{user_id}": {
      "get": {
        "operationId": "get-wishlist",
        "summary": "Retrieve wishlist",
        "description": "Retrieve products in wishlist",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "user id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Item"
                          }
                        }
                      },
                      "required": [
                        "products"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-wishlist",
          "description": "API reference for the get-wishlist operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Carts"
        ],
        "x-speakeasy-group": "carts",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "getWishlist"
      },
      "post": {
        "operationId": "add-to-wishlist",
        "summary": "Add product to wishlist",
        "description": "wishlist",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "user id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_id": {
                    "type": "string",
                    "examples": [
                      "01F3Z7KG06J4ACWH1C4926KJEC"
                    ]
                  },
                  "variant_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "required": [
                  "product_id",
                  "variant_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Item"
                          }
                        }
                      },
                      "required": [
                        "products"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/add-to-wishlist",
          "description": "API reference for the add-to-wishlist operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Carts"
        ],
        "x-speakeasy-group": "carts",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "addToWishlist"
      },
      "delete": {
        "operationId": "delete-from-wishlist",
        "summary": "Delete product from wishlist",
        "description": "Remove product from wishlist",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "user id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_id": {
                    "type": "string",
                    "examples": [
                      "01F3Z7KG06J4ACWH1C4926KJEC"
                    ]
                  },
                  "variant_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "required": [
                  "product_id",
                  "variant_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Item"
                          }
                        }
                      },
                      "required": [
                        "products"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/delete-from-wishlist",
          "description": "API reference for the delete-from-wishlist operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Carts"
        ],
        "x-speakeasy-group": "carts",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "deleteFromWishlist"
      }
    },
    "/catalog/categories": {
      "get": {
        "operationId": "list-categories",
        "summary": "List all categories",
        "description": "Returns a list of your product categories. The categories are returned sorted by creation date, with the most recently created categories appearing first.",
        "parameters": [
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "$ref": "#/components/parameters/sortingParam"
          },
          {
            "name": "nested_level",
            "in": "query",
            "description": "return child categories up to nesting level",
            "schema": {
              "type": "integer",
              "default": 0,
              "maximum": 4,
              "minimum": 0
            }
          },
          {
            "name": "parent_category_id",
            "in": "query",
            "description": "To return child categories using category id.",
            "schema": {
              "type": "string",
              "example": "01JWZW41Y3FBKTZSP399SKANY7",
              "examples": [
                "01JWZW41Y3FBKTZSP399SKANY7"
              ]
            }
          },
          {
            "name": "parent_category_slug",
            "in": "query",
            "description": "To return child categories using category slug",
            "schema": {
              "type": "string",
              "example": "vitals"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "all categories"
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "categories": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductCategory"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "categories",
                        "pagination"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-categories",
          "description": "API reference for the list-categories operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ],
        "x-speakeasy-group": "catalog",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "listCategories"
      }
    },
    "/catalog/products": {
      "get": {
        "operationId": "list-products",
        "summary": "List all products",
        "description": "Returns a list of your products. The products are returned sorted by creation date, with the most recently created products appearing first.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/pageLimitParam"
          },
          {
            "$ref": "#/components/parameters/sortingParam"
          },
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "category_id",
            "in": "query",
            "description": "filter products by categories ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "name": "category_slug",
            "in": "query",
            "description": "filter products by categories slugs",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "inventory",
            "in": "query",
            "description": "Determines whether to include or exlude inventory details in response json",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "Products retrieved successfully."
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Product"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "products",
                        "pagination"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-products",
          "description": "API reference for the list-products operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ],
        "x-speakeasy-group": "catalog",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "listProducts"
      }
    },
    "/catalog/products/cross-sell": {
      "get": {
        "operationId": "list-crosssell-products",
        "summary": "Retrieve cross-sell products",
        "description": "Retrieves a list of products specified for cross selling. The cross-sell products are returned based on product ids specified in request param.",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "no of rows per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number in pagination",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "description": "Product ids of cart items",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "json to sort records",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Item"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "products",
                        "pagination"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-crosssell-products",
          "description": "API reference for the list-crosssell-products operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ],
        "x-speakeasy-group": "catalog",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "listCrosssellProducts"
      }
    },
    "/catalog/products/search": {
      "post": {
        "operationId": "search-products",
        "summary": "Search products",
        "description": "Search for products matching a specific words or characters given.",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchProduct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "skus": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Item"
                          }
                        },
                        "facet_distribution": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "integer"
                            }
                          }
                        },
                        "facet_stats": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "min": {
                                "type": "number"
                              },
                              "max": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "min",
                              "max"
                            ]
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "skus",
                        "facet_distribution",
                        "facet_stats",
                        "pagination"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/search-products",
          "description": "API reference for the search-products operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ],
        "x-speakeasy-group": "catalog",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "searchProducts"
      }
    },
    "/catalog/products/similar": {
      "get": {
        "operationId": "list-similar-products",
        "summary": "Retrieve similar products",
        "description": "Retrieves a list of products similar to a specified product based on their attributes and category. The similar products are returned sorted by relevance, with the most closely matching products appearing first. Useful for providing product recommendations to your customers.",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "no of rows per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number in pagination",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "description": "to retrieve similar products of specified products",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "json to sort records",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Item"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "products",
                        "pagination"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-similar-products",
          "description": "API reference for the list-similar-products operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ],
        "x-speakeasy-group": "catalog",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "listSimilarProducts"
      }
    },
    "/catalog/products/up-sell": {
      "get": {
        "operationId": "list-upsell-products",
        "summary": "Retrieve up-sell products",
        "description": "Retrieves a list of products specified for upsell. The upsell products are returned based on product ids specified in request param.",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "no of rows per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number in pagination",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "description": "Product ids of cart items",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "json to sort records",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Masssage",
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Item"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "products",
                        "pagination"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-upsell-products",
          "description": "API reference for the list-upsell-products operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ],
        "x-speakeasy-group": "catalog",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "listUpsellProducts"
      }
    },
    "/catalog/products/{product_id_or_slug}": {
      "get": {
        "operationId": "get-product-detail",
        "summary": "Retrieve a product detail",
        "description": "Retrieves the details of an existing product. Supply either the unique product ID or the unique slug, and Commerce Engine will return the corresponding product information.",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "inventory",
            "in": "query",
            "description": "Determines whether to include or exlude inventory details in response json",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "product_id_or_slug",
            "in": "path",
            "description": "The unique identifier of the product. Can be either the product ID or the slug.",
            "required": true,
            "schema": {
              "type": "string",
              "examples": [
                "01XGCYCT8CRHXW4BG91JXCMDCW",
                "detox-candy"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "Products retrieved successfully."
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "product": {
                          "$ref": "#/components/schemas/ProductDetail"
                        }
                      },
                      "required": [
                        "product"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-product-detail",
          "description": "API reference for the get-product-detail operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ],
        "x-speakeasy-group": "catalog",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "getProductDetail"
      }
    },
    "/catalog/products/{product_id}/reviews": {
      "get": {
        "operationId": "list-product-reviews",
        "summary": "List all product reviews",
        "description": "List of reviews for a specified product. The reviews are returned sorted by submission date, with the most recent reviews appearing first. You can filter the reviews by rating, reviewer, or date for more detailed analysis.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/pageLimitParam"
          },
          {
            "$ref": "#/components/parameters/sortingParam"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "name": "product_id",
            "in": "path",
            "description": "id of a particular product",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "review_tag",
            "in": "query",
            "description": "filter review with review tag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "reviews": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductReview"
                          }
                        },
                        "review_tags": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": "string"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "reviews"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-product-reviews",
          "description": "API reference for the list-product-reviews operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ],
        "x-speakeasy-group": "catalog",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "listProductReviews"
      },
      "post": {
        "operationId": "create-product-review",
        "summary": "Create product review",
        "description": "Create a product review",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "id of a particular product",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateReview"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "Review submitted successfully."
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "message",
                    "success"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/create-product-review",
          "description": "API reference for the create-product-review operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ],
        "x-speakeasy-group": "catalog",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "createProductReview"
      }
    },
    "/catalog/products/{product_id}/variants": {
      "get": {
        "operationId": "list-product-variants",
        "summary": "Retrieve product variants",
        "description": "Retrieves the variants of an existing product. Supply the unique product ID, and Commerce Engine will return the corresponding product variants information.",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "inventory",
            "in": "query",
            "description": "Determines whether to include or exlude inventory details in response json",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "product_id",
            "in": "path",
            "description": "ID of a particular product",
            "required": true,
            "schema": {
              "type": "string",
              "examples": [
                "01H7YK0C86V9PGT0HXRJVEZXJQ"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "Products retrieved successfully."
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "variants": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Variant"
                          }
                        }
                      },
                      "required": [
                        "variants"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-product-variants",
          "description": "API reference for the list-product-variants operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ],
        "x-speakeasy-group": "catalog",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "listProductVariants"
      }
    },
    "/catalog/products/{product_id}/variants/{variant_id}": {
      "get": {
        "operationId": "get-variant-detail",
        "summary": "Retrieve variant detail",
        "description": "Retrieves the details of a particular variant. Supply the unique product ID, and variant ID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "inventory",
            "in": "query",
            "description": "Determines whether to include or exlude inventory details in response json",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "product_id",
            "in": "path",
            "description": "product id",
            "required": true,
            "schema": {
              "type": "string",
              "examples": [
                "01H7YK0C86V9PGT0HXRJVEZXJQ"
              ]
            }
          },
          {
            "name": "variant_id",
            "in": "path",
            "description": "variant id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "Products retrieved successfully."
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "variant": {
                          "$ref": "#/components/schemas/VariantDetail"
                        }
                      },
                      "required": [
                        "variant"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-variant-detail",
          "description": "API reference for the get-variant-detail operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ],
        "x-speakeasy-group": "catalog",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "getVariantDetail"
      }
    },
    "/catalog/skus": {
      "get": {
        "operationId": "list-skus",
        "summary": "List all SKUs",
        "description": "Returns a list of SKUs. The SKUs are returned sorted by creation date, with the most recently created SKUs appearing first.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/pageLimitParam"
          },
          {
            "$ref": "#/components/parameters/sortingParam"
          },
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "category_id",
            "in": "query",
            "description": "filter sku by categories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "name": "inventory",
            "in": "query",
            "description": "Determines whether to include or exlude inventory details in response json",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sku",
            "in": "query",
            "description": "array of sku",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "SKUs retrieved successfully."
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "skus": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Item"
                          },
                          "readOnly": true
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "skus",
                        "pagination"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-skus",
          "description": "API reference for the list-skus operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ],
        "x-speakeasy-group": "catalog",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "listSkus"
      }
    },
    "/common/countries": {
      "get": {
        "operationId": "list-countries",
        "summary": "Retrieve all countries",
        "description": "Retrieve all countries",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "countries": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Country"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-countries",
          "description": "API reference for the list-countries operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Common"
        ],
        "x-speakeasy-group": "common",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listCountries"
      }
    },
    "/common/countries/{country_iso_code}/pincodes": {
      "get": {
        "operationId": "list-country-pincodes",
        "summary": "Retrieve pincodes",
        "description": "Retrieve pincodes",
        "parameters": [
          {
            "name": "country_iso_code",
            "in": "path",
            "description": "Country iso code with 2 chars. ex. IN for india",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "no of rows per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number of pagination list",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pincode",
            "in": "query",
            "description": "pincode. atleast 3 initial chars require to use this param",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "pincodes": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Pincode"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-country-pincodes",
          "description": "API reference for the list-country-pincodes operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Common"
        ],
        "x-speakeasy-group": "common",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "listCountryPincodes"
      }
    },
    "/common/countries/{country_iso_code}/states": {
      "get": {
        "operationId": "list-country-states",
        "summary": "Retrieve country wise states",
        "description": "Retrieve country wise states",
        "parameters": [
          {
            "name": "country_iso_code",
            "in": "path",
            "description": "country iso code in 2 chars. ex. IN for India",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "states": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CountryState"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-country-states",
          "description": "API reference for the list-country-states operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Common"
        ],
        "x-speakeasy-group": "common",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listCountryStates"
      }
    },
    "/customers": {
      "post": {
        "operationId": "create-customer",
        "summary": "Create customer",
        "description": "Create customer",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "customer_detail": {
                          "$ref": "#/components/schemas/CustomerDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/create-customer",
          "description": "API reference for the create-customer operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Customers"
        ],
        "x-speakeasy-group": "customers",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "createCustomer"
      }
    },
    "/customers/{id}": {
      "get": {
        "operationId": "get-customer-detail",
        "summary": "Retrieve customer detail",
        "description": "Retrieve customer detail.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "customer_detail": {
                          "$ref": "#/components/schemas/CustomerDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-customer-detail",
          "description": "API reference for the get-customer-detail operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Customers"
        ],
        "x-speakeasy-group": "customers",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "getCustomerDetail"
      },
      "put": {
        "operationId": "update-customer",
        "summary": "Update customer detail",
        "description": "Update customer detail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "customer_detail": {
                          "$ref": "#/components/schemas/CustomerDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/update-customer",
          "description": "API reference for the update-customer operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Customers"
        ],
        "x-speakeasy-group": "customers",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "updateCustomer"
      }
    },
    "/customers/{user_id}/addresses": {
      "get": {
        "operationId": "list-addresses",
        "summary": "Retrieve all addresses",
        "description": "Retrieve billing and shipping address of particular customer",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/pageLimitParam"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "addresses": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/CustomerAddress"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "is_default_billing": {
                                    "type": "boolean"
                                  },
                                  "is_default_shipping": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-addresses",
          "description": "API reference for the list-addresses operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Customers"
        ],
        "x-speakeasy-group": "customers",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "listAddresses"
      },
      "post": {
        "operationId": "create-address",
        "summary": "Create address",
        "description": "Add new address",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "payload for new address",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerAddress"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "is_default_billing": {
                        "type": "boolean"
                      },
                      "is_default_shipping": {
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "address": {
                          "$ref": "#/components/schemas/CustomerAddress"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/create-address",
          "description": "API reference for the create-address operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Customers"
        ],
        "x-speakeasy-group": "customers",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "createAddress"
      }
    },
    "/customers/{user_id}/addresses/{address_id}": {
      "get": {
        "operationId": "get-address-detail",
        "summary": "Retrieve particular address",
        "description": "Retrieve address",
        "parameters": [
          {
            "name": "address_id",
            "in": "path",
            "description": "address id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "user id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "address": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/CustomerAddress"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "is_default_billing": {
                                  "type": "boolean"
                                },
                                "is_default_shipping": {
                                  "type": "boolean"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-address-detail",
          "description": "API reference for the get-address-detail operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Customers"
        ],
        "x-speakeasy-group": "customers",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "getAddressDetail"
      },
      "put": {
        "operationId": "update-address-detail",
        "summary": "Update particular address",
        "description": "Update address",
        "parameters": [
          {
            "name": "address_id",
            "in": "path",
            "description": "address id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "user id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "payload for address update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerAddress"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "is_default_billing": {
                        "type": "boolean"
                      },
                      "is_default_shipping": {
                        "type": "boolean"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "address": {
                          "$ref": "#/components/schemas/CustomerAddress"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/update-address-detail",
          "description": "API reference for the update-address-detail operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Customers"
        ],
        "x-speakeasy-group": "customers",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "updateAddressDetail"
      },
      "delete": {
        "operationId": "delete-address",
        "summary": "Remove particular address",
        "description": "Delete address",
        "parameters": [
          {
            "name": "address_id",
            "in": "path",
            "description": "address id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "user id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "address removed successfully"
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/delete-address",
          "description": "API reference for the delete-address operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Customers"
        ],
        "x-speakeasy-group": "customers",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "deleteAddress"
      }
    },
    "/customers/{user_id}/loyalty": {
      "get": {
        "operationId": "get-loyalty-details",
        "summary": "Retrieve loyalty details",
        "description": "Retrieve loyalty details",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "user id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "loyalty": {
                          "$ref": "#/components/schemas/CustomerLoyalty"
                        },
                        "loyalty_point_balance": {
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-loyalty-details",
          "description": "API reference for the get-loyalty-details operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Customers"
        ],
        "x-speakeasy-group": "customers",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "getLoyaltyDetails"
      }
    },
    "/customers/{user_id}/loyalty-points-activity": {
      "get": {
        "operationId": "list-loyalty-activities",
        "summary": "List all loyalty points activity",
        "description": "List all loyalty points activity",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageLimitParam"
          },
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/sortingParam"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "user id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "loyalty_points_activity": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/LoyaltyPointActivity"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-loyalty-activities",
          "description": "API reference for the list-loyalty-activities operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Customers"
        ],
        "x-speakeasy-group": "customers",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listLoyaltyActivities"
      }
    },
    "/customers/{user_id}/reviews": {
      "get": {
        "operationId": "list-user-reviews",
        "summary": "Retrieve all reviews",
        "description": "Retrieve all reviews",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "user id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "reviews": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CustomerReview"
                          }
                        },
                        "ready_for_review": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CustomerReadyForReview"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-user-reviews",
          "description": "API reference for the list-user-reviews operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Customers"
        ],
        "x-speakeasy-group": "customers",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "listUserReviews"
      }
    },
    "/payments/juspay/create-order": {
      "post": {
        "operationId": "create-juspay-order",
        "summary": "Create order in juspay",
        "description": "Creates an order in the Juspay system and fetches the corresponding client_auth_token.\nTo be used for Express Checkout integration.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JuspayCreateOrderPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/JuspayOrder"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/create-juspay-order",
          "description": "API reference for the create-juspay-order operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Juspay"
        ],
        "x-speakeasy-group": "juspay",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "createJuspayOrder"
      }
    },
    "/payments/juspay/customers": {
      "post": {
        "operationId": "create-juspay-customer",
        "summary": "Create customer in juspay",
        "description": "Create customer in juspay.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JuspayCreateCustomerPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/JuspayCustomer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/create-juspay-customer",
          "description": "API reference for the create-juspay-customer operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Juspay"
        ],
        "x-speakeasy-group": "juspay",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "createJuspayCustomer"
      }
    },
    "/payments/juspay/customers/{user_id}": {
      "get": {
        "operationId": "get-juspay-customer",
        "summary": "Retrieve customer from juspay",
        "description": "Retrieve customer from juspay.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "Commercengine User Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/JuspayCustomer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-juspay-customer",
          "description": "API reference for the get-juspay-customer operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Juspay"
        ],
        "x-speakeasy-group": "juspay",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "getJuspayCustomer"
      }
    },
    "/customers/{id}/documents": {
      "get": {
        "operationId": "list-documents",
        "summary": "List all documents",
        "description": "List all documents added by a particular customer.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "documents": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Document"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-documents",
          "description": "API reference for the list-documents operation"
        },
        "tags": [
          "KYC"
        ],
        "x-speakeasy-group": "kyc",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listDocuments"
      },
      "post": {
        "operationId": "create-document",
        "summary": "Create document",
        "description": "Create document",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/Document"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "document": {
                          "$ref": "#/components/schemas/Document"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/create-document",
          "description": "API reference for the create-document operation"
        },
        "tags": [
          "KYC"
        ],
        "x-speakeasy-group": "kyc",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "createDocument"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "customer id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/{id}/documents/verify": {
      "post": {
        "operationId": "verify-document",
        "summary": "Verify document",
        "description": "Verify document number before saving.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "document_number": {
                    "type": "string"
                  },
                  "document_type_id": {
                    "type": "string"
                  }
                },
                "required": [
                  "document_number",
                  "document_type_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "document": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/GstinDetail"
                            },
                            {
                              "$ref": "#/components/schemas/PanDetail"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/verify-document",
          "description": "API reference for the verify-document operation"
        },
        "tags": [
          "KYC"
        ],
        "x-speakeasy-group": "kyc",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "verifyDocument"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "customer id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/{id}/documents/{document_id}": {
      "get": {
        "operationId": "get-document",
        "summary": "Retrieve document detail",
        "description": "Retrieve document detail",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "document": {
                          "$ref": "#/components/schemas/Document"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-document",
          "description": "API reference for the get-document operation"
        },
        "tags": [
          "KYC"
        ],
        "x-speakeasy-group": "kyc",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "getDocument"
      },
      "put": {
        "operationId": "update-document",
        "summary": "Update document detail",
        "description": "Update document detail",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/UpdateDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "document": {
                          "$ref": "#/components/schemas/Document"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/update-document",
          "description": "API reference for the update-document operation"
        },
        "tags": [
          "KYC"
        ],
        "x-speakeasy-group": "kyc",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "updateDocument"
      },
      "delete": {
        "operationId": "delete-document",
        "summary": "Delete document",
        "description": "Delete document",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/delete-document",
          "description": "API reference for the delete-document operation"
        },
        "tags": [
          "KYC"
        ],
        "x-speakeasy-group": "kyc",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "deleteDocument"
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "description": "document id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "id",
          "in": "path",
          "description": "customer id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/store/kyc-document": {
      "get": {
        "operationId": "list-kyc-document",
        "summary": "List all kyc documents",
        "description": "List all kyc documents added for a particular store.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "kyc_documents": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/KycDocument"
                          }
                        },
                        "is_kyc_enabled": {
                          "type": "boolean",
                          "default": false,
                          "readOnly": true
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-kyc-document",
          "description": "API reference for the list-kyc-document operation"
        },
        "tags": [
          "KYC"
        ],
        "x-speakeasy-group": "kyc",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listKycDocument"
      },
      "parameters": []
    },
    "/orders": {
      "post": {
        "operationId": "create-order",
        "summary": "Create order",
        "description": "Create new order",
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cart_id": {
                    "type": "string"
                  },
                  "payment_gateway": {
                    "$ref": "#/components/schemas/PaymentGateway"
                  },
                  "payment_gateway_params": {
                    "$ref": "#/components/schemas/PaymentGatewayParams"
                  }
                },
                "required": [
                  "cart_id",
                  "payment_gateway",
                  "payment_gateway_params"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "order": {
                          "$ref": "#/components/schemas/Order"
                        },
                        "payment_required": {
                          "type": "boolean"
                        },
                        "payment_info": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/PayuPaymentInfo"
                            },
                            {
                              "$ref": "#/components/schemas/JuspayPaymentInfo"
                            }
                          ]
                        }
                      },
                      "required": [
                        "order",
                        "payment_required",
                        "payment_info"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/create-order",
          "description": "API reference for the create-order operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "x-speakeasy-group": "orders",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "createOrder"
      },
      "get": {
        "operationId": "list-orders",
        "summary": "Retrieve all orders",
        "description": "list customers all orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/pageLimitParam"
          },
          {
            "$ref": "#/components/parameters/sortingParam"
          },
          {
            "name": "status",
            "in": "query",
            "description": "array of string",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "user id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "orders": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OrderList"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-orders",
          "description": "API reference for the list-orders operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "x-speakeasy-group": "orders",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "listOrders"
      }
    },
    "/orders/returns": {
      "get": {
        "operationId": "list-returns",
        "summary": "Retrieve all order returns",
        "description": "Retrieve all order returns",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "returns": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OrderReturn"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-returns",
          "description": "API reference for the list-returns operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "x-speakeasy-group": "orders",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listReturns"
      }
    },
    "/orders/{order_number}": {
      "get": {
        "operationId": "get-order-detail",
        "summary": "Retrieve order detail",
        "description": "view particular order details",
        "parameters": [
          {
            "name": "order_number",
            "in": "path",
            "description": "order number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "order details",
                      "readOnly": true
                    },
                    "success": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "content": {
                      "properties": {
                        "order": {
                          "$ref": "#/components/schemas/OrderDetail"
                        }
                      },
                      "required": [
                        "order"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-order-detail",
          "description": "API reference for the get-order-detail operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "x-speakeasy-group": "orders",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "getOrderDetail"
      }
    },
    "/orders/{order_number}/cancel": {
      "post": {
        "operationId": "cancel-order",
        "summary": "Cancel order",
        "description": "Order cancellation",
        "parameters": [
          {
            "name": "order_number",
            "in": "path",
            "description": "order number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cancellation_reason": {
                    "type": "string"
                  },
                  "refund_mode": {
                    "type": "string",
                    "enum": [
                      "original_payment_mode",
                      "bank_transfer"
                    ]
                  },
                  "bank_account_id": {
                    "description": "verified bank account id if refund_mode = bank_transfer",
                    "type": "string"
                  },
                  "feedback": {
                    "description": "feedback text",
                    "type": "string"
                  }
                },
                "required": [
                  "cancellation_reason",
                  "refund_mode"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "order details",
                      "readOnly": true
                    },
                    "success": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "content": {
                      "properties": {
                        "order": {
                          "$ref": "#/components/schemas/OrderDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/cancel-order",
          "description": "API reference for the cancel-order operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "x-speakeasy-group": "orders",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "cancelOrder"
      }
    },
    "/orders/{order_number}/payment-status": {
      "get": {
        "operationId": "get-payment-status",
        "summary": "Retrieve payment status",
        "description": "Retrieve payment status of a paricular order.",
        "parameters": [
          {
            "name": "order_number",
            "in": "path",
            "description": "order number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "order details",
                      "readOnly": true
                    },
                    "success": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "content": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "pending",
                            "success",
                            "failed",
                            "partially_paid"
                          ]
                        },
                        "amount_paid": {
                          "type": "number",
                          "format": "double"
                        },
                        "amount_unpaid": {
                          "type": "number",
                          "format": "double"
                        },
                        "is_retry_available": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "status",
                        "amount_paid",
                        "amount_unpaid",
                        "is_retry_available"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-payment-status",
          "description": "API reference for the get-payment-status operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "x-speakeasy-group": "orders",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "getPaymentStatus"
      }
    },
    "/orders/{order_number}/payments": {
      "get": {
        "operationId": "list-order-payments",
        "summary": "Retrieve order payments",
        "description": "Retrieve order payments",
        "parameters": [
          {
            "name": "order_number",
            "in": "path",
            "description": "order number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "order details",
                      "readOnly": true
                    },
                    "success": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "content": {
                      "properties": {
                        "payments": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OrderPayment"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-order-payments",
          "description": "API reference for the list-order-payments operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "x-speakeasy-group": "orders",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listOrderPayments"
      }
    },
    "/orders/{order_number}/refunds": {
      "get": {
        "operationId": "list-order-refunds",
        "summary": "Retrieve order refunds",
        "description": "Retrieve order refunds",
        "parameters": [
          {
            "name": "order_number",
            "in": "path",
            "description": "order number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "order details",
                      "readOnly": true
                    },
                    "success": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "content": {
                      "properties": {
                        "refunds": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OrderRefund"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-order-refunds",
          "description": "API reference for the list-order-refunds operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "x-speakeasy-group": "orders",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listOrderRefunds"
      }
    },
    "/orders/{order_number}/retry-payment": {
      "post": {
        "operationId": "retry-order-payment",
        "summary": "Retry payment",
        "description": "To generate new payment request if first payment request is failed or expired. Retry payment request can be made after 15 mins of last request or immediately after last payment request is marked as failed.",
        "parameters": [
          {
            "name": "order_number",
            "in": "path",
            "description": "order number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "payment_gateway_params": {
                    "$ref": "#/components/schemas/PaymentGatewayParams"
                  }
                },
                "required": [
                  "payment_gateway_params"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "payment_info": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/PayuPaymentInfo"
                            },
                            {
                              "$ref": "#/components/schemas/JuspayPaymentInfo"
                            }
                          ]
                        }
                      },
                      "required": [
                        "payment_info"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/retry-order-payment",
          "description": "API reference for the retry-order-payment operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "x-speakeasy-group": "orders",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "retryOrderPayment"
      }
    },
    "/orders/{order_number}/return": {
      "post": {
        "operationId": "create-order-return",
        "summary": "Create order return",
        "description": "Create order return",
        "parameters": [
          {
            "name": "order_number",
            "in": "path",
            "description": "order number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderReturn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "order details",
                      "readOnly": true
                    },
                    "success": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "content": {
                      "properties": {
                        "order_return": {
                          "$ref": "#/components/schemas/OrderReturn"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/create-order-return",
          "description": "API reference for the create-order-return operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "x-speakeasy-group": "orders",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "createOrderReturn"
      }
    },
    "/orders/{order_number}/return/{return_id}": {
      "get": {
        "operationId": "get-order-return-detail",
        "summary": "Retrieve order return detail",
        "description": "Retrieve order return detail",
        "parameters": [
          {
            "name": "order_number",
            "in": "path",
            "description": "order number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "return_id",
            "in": "path",
            "description": "return id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "order_return": {
                          "$ref": "#/components/schemas/OrderReturn"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-order-return-detail",
          "description": "API reference for the get-order-return-detail operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "x-speakeasy-group": "orders",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "getOrderReturnDetail"
      }
    },
    "/orders/{order_number}/shipments": {
      "get": {
        "operationId": "list-order-shipments",
        "summary": "Retrieve order shipments",
        "description": "Retrieve order shipments",
        "parameters": [
          {
            "name": "order_number",
            "in": "path",
            "description": "order number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "order details",
                      "readOnly": true
                    },
                    "success": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "content": {
                      "properties": {
                        "shipments": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OrderShipment"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-order-shipments",
          "description": "API reference for the list-order-shipments operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Orders"
        ],
        "x-speakeasy-group": "orders",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "listOrderShipments"
      }
    },
    "/payments/cards": {
      "get": {
        "operationId": "list-saved-cards",
        "summary": "List all saved cards",
        "description": "List all saved cards.",
        "parameters": [
          {
            "name": "payment_gateway",
            "in": "query",
            "description": "payment gateway code",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PaymentGateway"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/PayuSavedCard"
                              },
                              {
                                "$ref": "#/components/schemas/JuspaySavedCard"
                              }
                            ]
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-saved-cards",
          "description": "API reference for the list-saved-cards operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Payments"
        ],
        "x-speakeasy-group": "payments",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listSavedCards"
      },
      "post": {
        "operationId": "add-card",
        "summary": "Add card",
        "description": "Add a new card",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "card_details": {
                    "discriminator": {
                      "propertyName": "payment_gateway",
                      "mapping": {
                        "juspay": "#/components/schemas/JuspayCardPayload",
                        "payu": "#/components/schemas/PayuCardPayload"
                      }
                    },
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PayuCardPayload"
                      },
                      {
                        "$ref": "#/components/schemas/JuspayCardPayload"
                      }
                    ]
                  }
                },
                "required": [
                  "card_details"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "discriminator": {
                        "propertyName": "payment_gateway",
                        "mapping": {
                          "juspay": "#/components/schemas/JuspayCreateCardResponse",
                          "payu": "#/components/schemas/PayuCreateCardResponse"
                        }
                      },
                      "properties": {
                        "payment_gateway": {
                          "type": "string",
                          "enum": [
                            "juspay",
                            "payu"
                          ],
                          "readOnly": true
                        },
                        "card-details": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/PayuCreateCardResponse"
                            },
                            {
                              "$ref": "#/components/schemas/JuspayCreateCardResponse"
                            }
                          ]
                        }
                      },
                      "required": [
                        "payment_gateway",
                        "card-details"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/add-card",
          "description": "API reference for the add-card operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Payments"
        ],
        "x-speakeasy-group": "payments",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "addCard"
      }
    },
    "/payments/payment-methods": {
      "get": {
        "operationId": "list-payment-methods",
        "summary": "List all payment methods",
        "description": "List all payment methods",
        "parameters": [
          {
            "name": "payment_gateway",
            "in": "query",
            "description": "payment gateway code",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PaymentGateway"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "payment_methods": {
                          "type": "array",
                          "items": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/PayuPaymentMethod"
                              },
                              {
                                "$ref": "#/components/schemas/JuspayPaymentMethod"
                              }
                            ]
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-payment-methods",
          "description": "API reference for the list-payment-methods operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Payments"
        ],
        "x-speakeasy-group": "payments",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listPaymentMethods"
      }
    },
    "/payments/payment-options": {
      "get": {
        "operationId": "list-payment-options",
        "summary": "List all payment options",
        "description": "List all payment options",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "payment_options": {
                          "type": "array",
                          "items": {
                            "enum": [
                              "CASH",
                              "UPI",
                              "CARD",
                              "PG"
                            ]
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-payment-options",
          "description": "API reference for the list-payment-options operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Payments"
        ],
        "x-speakeasy-group": "payments",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listPaymentMethods"
      },
      "parameters": []
    },
    "/payments/verify-vpa": {
      "get": {
        "operationId": "verify-vpa",
        "summary": "Verify VPA",
        "description": "The Virtual Payment Address or VPA is a unique ID given to an individual using the Unified Payment Interface (UPI) service to send or receive money. In the case of UPI collect VPA is the mandatory param and merchants are always advised to check if the VPA is valid or not.\nValidating the VPA will help in reducing the failure rate due to incorrect vpa. ",
        "parameters": [
          {
            "name": "payment_gateway",
            "in": "query",
            "description": "payment gateway code",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PaymentGateway"
            }
          },
          {
            "name": "vpa",
            "in": "query",
            "description": "The Virtual Payment Address or VPA is a unique ID given to an individual using the Unified Payment Interface (UPI) service.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "vpa": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/verify-vpa",
          "description": "API reference for the verify-vpa operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Payments"
        ],
        "x-speakeasy-group": "payments",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "verifyVpa"
      }
    },
    "/payments/generate-hash": {
      "post": {
        "operationId": "generate-hash",
        "summary": "Generate hash",
        "description": "Generate PayU hash",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "payment_gateway": {
                    "const": "payu"
                  },
                  "plain_text": {
                    "description": "Format:\nFor UPI id validation,\ncommand|{upi id}\n\nFor saving, retrieving cards,\ncommand|{user id}",
                    "type": "string"
                  }
                },
                "required": [
                  "payment_gateway",
                  "plain_text"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "hash": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/generate-hash",
          "description": "API reference for the generate-hash operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "PayU"
        ],
        "x-speakeasy-group": "payu",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "generateHash"
      }
    },
    "/pos/auth/login/email": {
      "post": {
        "operationId": "login-pos-device-with-email",
        "summary": "Login with email",
        "description": "Login to POS device using email. Login to POS device using phone.  The endpoint requires authentication with an API key that has the scope set to 'storefront' for a particular store, ensuring secure access for user login operation.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "location_id": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "location_id",
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "otp_token": {
                          "type": "string"
                        },
                        "otp_action": {
                          "type": "string",
                          "const": "login"
                        }
                      },
                      "required": [
                        "otp_token",
                        "otp_action"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/login-pos-device-with-email",
          "description": "API reference for the login-pos-device-with-email operation"
        },
        "security": [
          {
            "X-Api-Key": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "loginWithEmail"
      },
      "parameters": []
    },
    "/pos/auth/login/phone": {
      "post": {
        "operationId": "login-pos-device-with-phone",
        "summary": "Login with phone",
        "description": "Login to POS device using phone.  The endpoint requires authentication with an API key that has the scope set to 'storefront' for a particular store, ensuring secure access for user login operation.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "location_id": {
                    "type": "string"
                  },
                  "phone": {
                    "description": "10 digit phone number without country code.",
                    "type": "string"
                  },
                  "country_code": {
                    "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.",
                    "type": "string",
                    "default": "+91"
                  }
                },
                "required": [
                  "location_id",
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "otp_token": {
                          "type": "string"
                        },
                        "otp_action": {
                          "type": "string",
                          "const": "login"
                        }
                      },
                      "required": [
                        "otp_token",
                        "otp_action"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/login-pos-device-with-phone",
          "description": "API reference for the login-pos-device-with-phone operation"
        },
        "security": [
          {
            "X-Api-Key": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "loginWithPhone"
      },
      "parameters": []
    },
    "/pos/auth/login/whatsapp": {
      "post": {
        "operationId": "login-pos-device-with-whatsapp",
        "summary": "Login with whatsapp",
        "description": "Login to POS device using whatsapp. Login to POS device using phone.  The endpoint requires authentication with an API key that has the scope set to 'storefront' for a particular store, ensuring secure access for user login operation.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "location_id": {
                    "type": "string"
                  },
                  "phone": {
                    "description": "10 digit phone number without country code linked with WhatsApp.",
                    "type": "string"
                  },
                  "country_code": {
                    "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.",
                    "type": "string",
                    "default": "+91"
                  }
                },
                "required": [
                  "location_id",
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "otp_token": {
                          "type": "string"
                        },
                        "otp_action": {
                          "type": "string",
                          "const": "login"
                        }
                      },
                      "required": [
                        "otp_token",
                        "otp_action"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/login-pos-device-with-whatsapp",
          "description": "API reference for the login-pos-device-with-whatsapp operation"
        },
        "security": [
          {
            "X-Api-Key": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "loginWithWhatsapp"
      },
      "parameters": []
    },
    "/pos/auth/logout": {
      "post": {
        "operationId": "logout-from-pos-device",
        "summary": "Logout",
        "description": "This endpoint ends the current loggedin session for the POS device. This action immediately invalidates the previously issued access token(s), preventing any further use. A new login is required to regain access.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "message",
                    "success"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/logout-from-pos-device",
          "description": "API reference for the logout-from-pos-device operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "verifyOtp"
      },
      "parameters": []
    },
    "/pos/auth/pair-device": {
      "post": {
        "operationId": "pair-pos-device",
        "summary": "Pair POS device",
        "description": "This endpoint allows a POS device to be activated by submitting a valid pairing code received via phone or email. The endpoint requires authentication with an API key that has the scope set to 'storefront' for a particular store, ensuring secure access for device activation operation.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pairing_code": {
                    "type": "string"
                  }
                },
                "required": [
                  "pairing_code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "device": {
                          "$ref": "#/components/schemas/PosDevice"
                        }
                      },
                      "required": [
                        "device"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/pair-pos-device",
          "description": "API reference for the pair-pos-device operation"
        },
        "security": [
          {
            "X-Api-Key": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "pairDevice"
      }
    },
    "/pos/auth/refresh-token": {
      "post": {
        "operationId": "refresh-pos-access-token",
        "summary": "Refresh POS access token",
        "description": "Refresh POS access token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": {
                    "type": "string"
                  }
                },
                "required": [
                  "refresh_token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "access_token": {
                          "type": "string"
                        },
                        "refresh_token": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/refresh-pos-access-token",
          "description": "API reference for the refresh-pos-access-token operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "refreshAccessToken"
      },
      "parameters": []
    },
    "/pos/auth/verify-otp": {
      "post": {
        "operationId": "verify-pos-login-otp",
        "summary": "Verify OTP",
        "description": "Verify POS login otp. Login to POS device using phone.  The endpoint requires authentication with an API key that has the scope set to 'storefront' for a particular store.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "otp": {
                    "description": "A string representing the one-time password.",
                    "type": "string"
                  },
                  "otp_token": {
                    "description": "A string representing the OTP token.",
                    "type": "string"
                  },
                  "otp_action": {
                    "description": "A string indicating the action to be performed.",
                    "enum": [
                      "login"
                    ]
                  }
                },
                "required": [
                  "otp",
                  "otp_token",
                  "otp_action"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/PosUser"
                        },
                        "access_token": {
                          "type": "string"
                        },
                        "refresh_token": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "user",
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/verify-pos-login-otp",
          "description": "API reference for the verify-pos-login-otp operation"
        },
        "security": [
          {
            "X-Api-Key": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "verifyOtp"
      },
      "parameters": []
    },
    "/pos/carts": {
      "post": {
        "operationId": "pos-create-cart",
        "summary": "Create cart",
        "description": "Create cart",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UpdateCartItem"
                    }
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "items"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/create-cart",
          "description": "API reference for the create-cart operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "createCart"
      }
    },
    "/pos/carts/available-coupons": {
      "get": {
        "operationId": "pos-list-coupons",
        "summary": "Retrieve all coupons",
        "description": "Retrieve active coupons",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "coupons": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Coupon"
                          }
                        }
                      },
                      "required": [
                        "coupons"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-coupons",
          "description": "API reference for the list-coupons operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listCoupons"
      }
    },
    "/pos/carts/available-promotions": {
      "get": {
        "operationId": "pos-list-promotions",
        "summary": "Retrieve all promotions",
        "description": "All active promotions",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "promotions": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Promotion"
                          }
                        }
                      },
                      "required": [
                        "promotions"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-promotions",
          "description": "API reference for the list-promotions operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listPromotions"
      }
    },
    "/pos/carts/{id}": {
      "get": {
        "operationId": "pos-get-cart",
        "summary": "Retrieve cart detail",
        "description": "Retrieve cart detail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "cart details"
                      ],
                      "readOnly": true
                    },
                    "success": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-cart",
          "description": "API reference for the get-cart operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "getCart"
      },
      "delete": {
        "operationId": "pos-delete-cart",
        "summary": "Delete cart",
        "description": "delete all items from the cart.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "All cart items are removed."
                      ],
                      "readOnly": true
                    },
                    "success": {
                      "type": "boolean",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "message",
                    "success"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/delete-cart",
          "description": "API reference for the delete-cart operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "deleteCart"
      }
    },
    "/pos/carts/{id}/address": {
      "post": {
        "operationId": "pos-create-cart-address",
        "summary": "Update cart address",
        "description": "Update billing and shipping address",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update billing and shipping address during checkout",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "oneOf": [
                  {
                    "title": "Registered User",
                    "description": "For registered users where address is previously added",
                    "required": [
                      "billing_address_id",
                      "shipping_address_id"
                    ],
                    "properties": {
                      "billing_address_id": {
                        "type": "string"
                      },
                      "shipping_address_id": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "Guest User",
                    "description": "For guest checkout where address is not saved",
                    "required": [
                      "billing_address",
                      "shipping_address"
                    ],
                    "properties": {
                      "billing_address": {
                        "$ref": "#/components/schemas/CustomerAddress"
                      },
                      "shipping_address": {
                        "$ref": "#/components/schemas/CustomerAddress"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "Address updated successfully"
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/create-cart-address",
          "description": "API reference for the create-cart-address operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "createCartAddress"
      }
    },
    "/pos/carts/{id}/coupon": {
      "post": {
        "operationId": "pos-apply-coupon",
        "summary": "Apply coupon",
        "description": "Apply coupon",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "coupon_code": {
                    "type": "string",
                    "examples": [
                      "FLAT100OFF"
                    ]
                  }
                },
                "required": [
                  "coupon_code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/apply-coupon",
          "description": "API reference for the apply-coupon operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "applyCoupon"
      },
      "delete": {
        "operationId": "pos-remove-coupon",
        "summary": "Remove coupon",
        "description": "remove coupon from cart",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/remove-coupon",
          "description": "API reference for the remove-coupon operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "removeCoupon"
      }
    },
    "/pos/carts/{id}/credit-balance": {
      "post": {
        "operationId": "pos-redeem-credit-balance",
        "summary": "Use credit balance",
        "description": "Use credit balance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "credit_balance_used": {
                    "type": "number",
                    "format": "double",
                    "examples": [
                      200
                    ]
                  }
                },
                "required": [
                  "credit_balance_used"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/redeem-credit-balance",
          "description": "API reference for the redeem-credit-balance operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "redeemCreditBalance"
      },
      "delete": {
        "operationId": "pos-remove-credit-balance",
        "summary": "Remove credit balance",
        "description": "remove credit balance applied to cart",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/remove-credit-balance",
          "description": "API reference for the remove-credit-balance operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "removeCreditBalance"
      }
    },
    "/pos/carts/{id}/evaluate-coupons": {
      "get": {
        "operationId": "pos-evaluate-coupons",
        "summary": "Evaluate coupons",
        "description": "Evaluate applicable & inapplicable coupons based on the specified cart.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "applicable_coupons": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApplicableCoupon"
                          }
                        },
                        "inapplicable_coupons": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/InapplicableCoupon"
                          }
                        }
                      },
                      "required": [
                        "applicable_coupons",
                        "inapplicable_coupons"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/evaluate-coupons",
          "description": "API reference for the evaluate-coupons operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listPromotions"
      }
    },
    "/pos/carts/{id}/evaluate-promotions": {
      "get": {
        "operationId": "pos-evaluate-promotions",
        "summary": "Evaluate promotions",
        "description": "Evaluate applicable & inapplicable promotions based on the specified cart.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "applicable_promotions": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApplicablePromotion"
                          }
                        },
                        "inapplicable_promotions": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/InapplicablePromotion"
                          }
                        }
                      },
                      "required": [
                        "applicable_promotions",
                        "inapplicable_promotions"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/evaluate-promotions",
          "description": "API reference for the evaluate-promotions operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listPromotions"
      }
    },
    "/pos/carts/{id}/fulfillment-preference": {
      "post": {
        "operationId": "pos-update-fulfillment-preference",
        "summary": "Update fulfillment preference",
        "description": "Update fulfillment preference",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CollectInStoreFulfillment"
                  },
                  {
                    "$ref": "#/components/schemas/DeliveryFulfillment"
                  },
                  {
                    "$ref": "#/components/schemas/PartialCollectAndDelivery"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "message",
                    "success"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/update-fulfillment-preference",
          "description": "API reference for the update-fulfillment-preference operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "updateFulfillmentPreference"
      }
    },
    "/pos/carts/{id}/items": {
      "post": {
        "operationId": "pos-update-cart",
        "summary": "Add/delete cart item",
        "description": "Add Item to cart. To delete item from cart, pass quantity = 0",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "cart id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCartItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/update-cart",
          "description": "API reference for the update-cart operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "updateCart"
      }
    },
    "/pos/carts/{id}/loyalty-points": {
      "post": {
        "operationId": "pos-redeem-loyalty-points",
        "summary": "Redeem loyalty points",
        "description": "Redeem loyalty points",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "loyalty_point_redeemed": {
                    "type": "integer",
                    "examples": [
                      1000
                    ],
                    "minimum": 1
                  }
                },
                "required": [
                  "loyalty_point_redeemed"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/redeem-loyalty-points",
          "description": "API reference for the redeem-loyalty-points operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "redeemLoyaltyPoints"
      },
      "delete": {
        "operationId": "pos-remove-loyalty-points",
        "summary": "Remove loyalty points",
        "description": "Remove loyalty points applied in cart",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/remove-loyalty-points",
          "description": "API reference for the remove-loyalty-points operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "removeLoyaltyPoints"
      }
    },
    "/pos/carts/{id}/update-customer": {
      "post": {
        "operationId": "update-pos-cart-customer",
        "summary": "Update cart customer",
        "description": "Link customer to the specified cart.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "cart id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PosUpdateCustomerWithId"
                  },
                  {
                    "$ref": "#/components/schemas/PosUpdateCustomerWithPhone"
                  },
                  {
                    "$ref": "#/components/schemas/PosUpdateCustomerWithEmail"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/update-pos-cart-customer",
          "description": "API reference for the update-pos-cart-customer operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "updateCartCustomer"
      }
    },
    "/pos/catalog/categories": {
      "get": {
        "operationId": "pos-list-categories",
        "summary": "List all categories",
        "description": "Returns a list of your product categories. The categories are returned sorted by creation date, with the most recently created categories appearing first.",
        "parameters": [
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "$ref": "#/components/parameters/sortingParam"
          },
          {
            "name": "nested_level",
            "in": "query",
            "description": "return child categories up to nesting level",
            "schema": {
              "type": "integer",
              "default": 0,
              "maximum": 4,
              "minimum": 0
            }
          },
          {
            "name": "parent_category_id",
            "in": "query",
            "description": "To return child categories using category id.",
            "schema": {
              "type": "string",
              "example": "01JWZW41Y3FBKTZSP399SKANY7",
              "examples": [
                "01JWZW41Y3FBKTZSP399SKANY7"
              ]
            }
          },
          {
            "name": "parent_category_slug",
            "in": "query",
            "description": "To return child categories using category slug",
            "schema": {
              "type": "string",
              "example": "vitals"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "all categories"
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "categories": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductCategory"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "categories",
                        "pagination"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-categories",
          "description": "API reference for the list-categories operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listCategories"
      }
    },
    "/pos/catalog/products": {
      "get": {
        "operationId": "pos-list-products",
        "summary": "List all products",
        "description": "Returns a list of your products. The products are returned sorted by creation date, with the most recently created products appearing first.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/pageLimitParam"
          },
          {
            "$ref": "#/components/parameters/sortingParam"
          },
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "category_id",
            "in": "query",
            "description": "filter products by categories ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "name": "category_slug",
            "in": "query",
            "description": "filter products by categories slugs",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "inventory",
            "in": "query",
            "description": "Determines whether to include or exlude inventory details in response json",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "Products retrieved successfully."
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Product"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "products",
                        "pagination"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-products",
          "description": "API reference for the list-products operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listProducts"
      }
    },
    "/pos/catalog/products/cross-sell": {
      "get": {
        "operationId": "pos-list-crosssell-products",
        "summary": "Retrieve cross-sell products",
        "description": "Retrieves a list of products specified for cross selling. The cross-sell products are returned based on product ids specified in request param.",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "no of rows per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number in pagination",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "description": "Product ids of cart items",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "json to sort records",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Item"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "products",
                        "pagination"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-crosssell-products",
          "description": "API reference for the list-crosssell-products operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listCrosssellProducts"
      }
    },
    "/pos/catalog/products/search": {
      "post": {
        "operationId": "pos-search-products",
        "summary": "Search products",
        "description": "Search for products matching a specific words or characters given.",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchProduct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "skus": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Item"
                          }
                        },
                        "facet_distribution": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "integer"
                            }
                          }
                        },
                        "facet_stats": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "min": {
                                "type": "number"
                              },
                              "max": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "min",
                              "max"
                            ]
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "skus",
                        "facet_distribution",
                        "facet_stats",
                        "pagination"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/search-products",
          "description": "API reference for the search-products operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "searchProducts"
      }
    },
    "/pos/catalog/products/similar": {
      "get": {
        "operationId": "pos-list-similar-products",
        "summary": "Retrieve similar products",
        "description": "Retrieves a list of products similar to a specified product based on their attributes and category. The similar products are returned sorted by relevance, with the most closely matching products appearing first. Useful for providing product recommendations to your customers.",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "no of rows per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number in pagination",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "description": "to retrieve similar products of specified products",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "json to sort records",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Item"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "products",
                        "pagination"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-similar-products",
          "description": "API reference for the list-similar-products operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listSimilarProducts"
      }
    },
    "/pos/catalog/products/up-sell": {
      "get": {
        "operationId": "pos-list-upsell-products",
        "summary": "Retrieve up-sell products",
        "description": "Retrieves a list of products specified for upsell. The upsell products are returned based on product ids specified in request param.",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "no of rows per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number in pagination",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "description": "Product ids of cart items",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "json to sort records",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Masssage",
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Item"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "products",
                        "pagination"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-upsell-products",
          "description": "API reference for the list-upsell-products operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listUpsellProducts"
      }
    },
    "/pos/catalog/products/{product_id_or_slug}": {
      "get": {
        "operationId": "pos-get-product-detail",
        "summary": "Retrieve a product detail",
        "description": "Retrieves the details of an existing product. Supply either the unique product ID or the unique slug, and Commerce Engine will return the corresponding product information.",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "inventory",
            "in": "query",
            "description": "Determines whether to include or exlude inventory details in response json",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "product_id_or_slug",
            "in": "path",
            "description": "The unique identifier of the product. Can be either the product ID or the slug.",
            "required": true,
            "schema": {
              "type": "string",
              "examples": [
                "01XGCYCT8CRHXW4BG91JXCMDCW",
                "detox-candy"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "Products retrieved successfully."
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "product": {
                          "$ref": "#/components/schemas/ProductDetail"
                        }
                      },
                      "required": [
                        "product"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-product-detail",
          "description": "API reference for the get-product-detail operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "getProductDetail"
      }
    },
    "/pos/catalog/products/{product_id}/reviews": {
      "get": {
        "operationId": "pos-list-product-reviews",
        "summary": "List all product reviews",
        "description": "List of reviews for a specified product. The reviews are returned sorted by submission date, with the most recent reviews appearing first. You can filter the reviews by rating, reviewer, or date for more detailed analysis.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/pageLimitParam"
          },
          {
            "$ref": "#/components/parameters/sortingParam"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "name": "product_id",
            "in": "path",
            "description": "id of a particular product",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "review_tag",
            "in": "query",
            "description": "filter review with review tag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "reviews": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductReview"
                          }
                        },
                        "review_tags": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": "string"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "reviews"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-product-reviews",
          "description": "API reference for the list-product-reviews operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listProductReviews"
      }
    },
    "/pos/catalog/products/{product_id}/variants": {
      "get": {
        "operationId": "pos-list-product-variants",
        "summary": "Retrieve product variants",
        "description": "Retrieves the variants of an existing product. Supply the unique product ID, and Commerce Engine will return the corresponding product variants information.",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "inventory",
            "in": "query",
            "description": "Determines whether to include or exlude inventory details in response json",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "product_id",
            "in": "path",
            "description": "ID of a particular product",
            "required": true,
            "schema": {
              "type": "string",
              "examples": [
                "01H7YK0C86V9PGT0HXRJVEZXJQ"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "Products retrieved successfully."
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "variants": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Variant"
                          }
                        }
                      },
                      "required": [
                        "variants"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-product-variants",
          "description": "API reference for the list-product-variants operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listProductVariants"
      }
    },
    "/pos/catalog/products/{product_id}/variants/{variant_id}": {
      "get": {
        "operationId": "pos-get-variant-detail",
        "summary": "Retrieve variant detail",
        "description": "Retrieves the details of a particular variant. Supply the unique product ID, and variant ID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "inventory",
            "in": "query",
            "description": "Determines whether to include or exlude inventory details in response json",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "product_id",
            "in": "path",
            "description": "product id",
            "required": true,
            "schema": {
              "type": "string",
              "examples": [
                "01H7YK0C86V9PGT0HXRJVEZXJQ"
              ]
            }
          },
          {
            "name": "variant_id",
            "in": "path",
            "description": "variant id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "Products retrieved successfully."
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "variant": {
                          "$ref": "#/components/schemas/VariantDetail"
                        }
                      },
                      "required": [
                        "variant"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-variant-detail",
          "description": "API reference for the get-variant-detail operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "getVariantDetail"
      }
    },
    "/pos/catalog/skus": {
      "get": {
        "operationId": "pos-list-skus",
        "summary": "List all SKUs",
        "description": "Returns a list of SKUs. The SKUs are returned sorted by creation date, with the most recently created SKUs appearing first.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/pageLimitParam"
          },
          {
            "$ref": "#/components/parameters/sortingParam"
          },
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "category_id",
            "in": "query",
            "description": "filter sku by categories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "name": "inventory",
            "in": "query",
            "description": "Determines whether to include or exlude inventory details in response json",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sku",
            "in": "query",
            "description": "array of sku",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "SKUs retrieved successfully."
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "skus": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Item"
                          },
                          "readOnly": true
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "skus",
                        "pagination"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-skus",
          "description": "API reference for the list-skus operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listSkus"
      }
    },
    "/pos/devices": {
      "get": {
        "operationId": "list-pos-devices",
        "summary": "List all available devices",
        "description": "List all available devices.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "devices": {
                          "$ref": "#/components/schemas/PosDevice"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-pos-devices",
          "description": "API reference for the list-pos-devices operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listAvailableDevices"
      },
      "parameters": []
    },
    "/pos/devices/{id}/claim": {
      "post": {
        "operationId": "claim-pos-device",
        "summary": "Claim device",
        "description": "Claim device",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "device id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "message",
                    "success"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/claim-pos-device",
          "description": "API reference for the claim-pos-device operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "claimDevice"
      }
    },
    "/pos/devices/{id}/unclaim": {
      "post": {
        "operationId": "unclaim-pos-device",
        "summary": "Unclaim device",
        "description": "Unclaim device",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "device id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "message",
                    "success"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/unclaim-pos-device",
          "description": "API reference for the unclaim-pos-device operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "unclaimDevice"
      }
    },
    "/pos/fulfillment-options": {
      "post": {
        "operationId": "get-pos-fulfillment-options",
        "summary": "Retrieve fulfillment options",
        "description": "This endpoint returns the available fulfillment options for a given cart and delivery pincode. It provides both delivery options and collect-in-store (Click & Collect) options, including details of store locations where the item can be collected.",
        "parameters": [],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartBasedServiceabilityCheck"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "summary": {
                          "type": "object",
                          "properties": {
                            "collect_available": {
                              "type": "boolean"
                            },
                            "deliver_available": {
                              "type": "boolean"
                            },
                            "recommended_fulfillment_type": {
                              "enum": [
                                "collect-in-store",
                                "delivery"
                              ]
                            },
                            "recommended_store": {
                              "$ref": "#/components/schemas/CollectInStore"
                            }
                          },
                          "required": [
                            "collect_available",
                            "deliver_available",
                            "recommended_fulfillment_type"
                          ]
                        },
                        "collect": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CollectInStore"
                          }
                        },
                        "deliver": {
                          "$ref": "#/components/schemas/PincodeServiceability"
                        }
                      },
                      "required": [
                        "summary"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-pos-fulfillment-options",
          "description": "API reference for the get-pos-fulfillment-options operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "fulfillmentOptions"
      },
      "parameters": []
    },
    "/pos/locations": {
      "get": {
        "operationId": "list-pos-locations",
        "summary": "List all locations",
        "description": "List all locations.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PosLocation"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-pos-locations",
          "description": "API reference for the list-pos-locations operation"
        },
        "security": [
          {
            "X-Api-Key": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listLocations"
      },
      "parameters": []
    },
    "/pos/orders": {
      "post": {
        "operationId": "create-pos-order",
        "summary": "Create order",
        "description": "Creates a new order from a POS device.",
        "parameters": [],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cart_id"
                    ],
                    "properties": {
                      "cart_id": {
                        "type": "string"
                      },
                      "device_id": {
                        "description": "Optional. if provided, this device will be used for the payment of this order. Otherwise, already claimed device will be used for the payment purpose.",
                        "type": "string"
                      }
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PayWithCash"
                      },
                      {
                        "$ref": "#/components/schemas/PayWithUpi"
                      },
                      {
                        "$ref": "#/components/schemas/PayWithCard"
                      },
                      {
                        "$ref": "#/components/schemas/PayWithPaymentGateway"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "order": {
                          "$ref": "#/components/schemas/Order"
                        },
                        "payment_required": {
                          "description": "true if to_be_paid > 0, otherwise false for zero value order.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "order",
                        "payment_required"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/create-pos-order",
          "description": "API reference for the create-pos-order operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "createPosOrder"
      },
      "parameters": []
    },
    "/pos/orders/{order_number}/payment-status": {
      "get": {
        "operationId": "pos-get-payment-status",
        "summary": "Retrieve payment status",
        "description": "Retrieve payment status of a paricular order.",
        "parameters": [
          {
            "name": "order_number",
            "in": "path",
            "description": "order number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "order details",
                      "readOnly": true
                    },
                    "success": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "content": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "pending",
                            "success",
                            "failed",
                            "partially_paid"
                          ]
                        },
                        "amount_paid": {
                          "type": "number",
                          "format": "double"
                        },
                        "amount_unpaid": {
                          "type": "number",
                          "format": "double"
                        },
                        "is_retry_available": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "status",
                        "amount_paid",
                        "amount_unpaid",
                        "is_retry_available"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-payment-status",
          "description": "API reference for the get-payment-status operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "getPaymentStatus"
      }
    },
    "/pos/payments/payment-options": {
      "get": {
        "operationId": "pos-list-payment-options",
        "summary": "List all payment options",
        "description": "List all payment options",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "payment_options": {
                          "type": "array",
                          "items": {
                            "enum": [
                              "CASH",
                              "UPI",
                              "CARD",
                              "PG"
                            ]
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-payment-options",
          "description": "API reference for the list-payment-options operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listPaymentMethods"
      }
    },
    "/pos/users/{id}": {
      "get": {
        "operationId": "get-pos-user",
        "summary": "Get POS User",
        "description": "Get POS User",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/PosUser"
                        }
                      },
                      "required": [
                        "user"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-pos-user",
          "description": "API reference for the get-pos-user operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "getUserDetail"
      }
    },
    "/shipping/fulfillment-options": {
      "post": {
        "operationId": "get-fulfillment-options",
        "summary": "Retrieve fulfillment options",
        "description": "This endpoint returns the available fulfillment options for a given cart and delivery pincode. It provides both delivery options and collect-in-store (Click & Collect) options, including details of store locations where the item can be collected.",
        "parameters": [],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartBasedServiceabilityCheck"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "summary": {
                          "type": "object",
                          "properties": {
                            "collect_available": {
                              "type": "boolean"
                            },
                            "deliver_available": {
                              "type": "boolean"
                            },
                            "recommended_fulfillment_type": {
                              "$ref": "#/components/schemas/FulfillmentPreference"
                            },
                            "recommended_store": {
                              "$ref": "#/components/schemas/CollectInStore"
                            }
                          },
                          "required": [
                            "collect_available",
                            "deliver_available",
                            "recommended_fulfillment_type"
                          ]
                        },
                        "collect": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CollectInStore"
                          }
                        },
                        "deliver": {
                          "$ref": "#/components/schemas/PincodeServiceability"
                        }
                      },
                      "required": [
                        "summary"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-fulfillment-options",
          "description": "API reference for the get-fulfillment-options operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Shipping"
        ],
        "x-speakeasy-group": "shipping",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "fulfillmentOptions"
      },
      "parameters": []
    },
    "/shipping/serviceability/{pincode}": {
      "get": {
        "operationId": "check-pincode-serviceability",
        "summary": "Check serviceability",
        "description": "Checking if delivery is available to the entered pincode based on shipping zones.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "is_serviceable": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "is_serviceable"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/check-pincode-serviceability",
          "description": "API reference for the check-pincode-serviceability operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Shipping"
        ],
        "x-speakeasy-group": "shipping",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "checkServiceability"
      },
      "parameters": [
        {
          "name": "pincode",
          "in": "path",
          "description": "delivery pincode",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/shipping/shipping-methods": {
      "post": {
        "operationId": "get-shipping-methods",
        "summary": "List available shipping methods",
        "description": "Checks whether a given pincode is serviceable and returns all available shipping methods based on delivery address",
        "parameters": [],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartBasedServiceabilityCheck"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "$ref": "#/components/schemas/PincodeServiceability"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-shipping-methods",
          "description": "API reference for the get-shipping-methods operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Shipping"
        ],
        "x-speakeasy-group": "shipping",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "shippingMethods"
      },
      "parameters": []
    },
    "/store/config": {
      "get": {
        "operationId": "get-config",
        "summary": "Retrieve store config",
        "description": "Retrieve store config detail",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "store_config": {
                          "$ref": "#/components/schemas/StoreConfig"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-config",
          "description": "API reference for the get-config operation"
        },
        "tags": [
          "Store"
        ],
        "x-speakeasy-group": "config",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "getConfig"
      },
      "parameters": []
    },
    "/subscriptions": {
      "post": {
        "operationId": "create-subscription",
        "summary": "Create subscription",
        "description": "List all subscriptions",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "subscription": {
                          "$ref": "#/components/schemas/SubscriptionDetail"
                        }
                      },
                      "required": [
                        "subscription"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/create-subscription",
          "description": "API reference for the create-subscription operation"
        },
        "tags": [
          "Subscriptions"
        ],
        "x-speakeasy-group": "subscriptions",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "createSubscription"
      },
      "get": {
        "operationId": "list-subscriptions",
        "summary": "List all subscriptions",
        "description": "List all subscriptions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "subscriptions": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Subscription"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "subscriptions",
                        "pagination"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-subscriptions",
          "description": "API reference for the list-subscriptions operation"
        },
        "tags": [
          "Subscriptions"
        ],
        "x-speakeasy-group": "subscriptions",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listSubscriptions"
      }
    },
    "/subscriptions/{id}": {
      "get": {
        "operationId": "get-subscription",
        "summary": "Retrieve subscription details",
        "description": "Retrieve subscription details",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "subscription": {
                          "$ref": "#/components/schemas/SubscriptionDetail"
                        }
                      },
                      "required": [
                        "subscription"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-subscription",
          "description": "API reference for the get-subscription operation"
        },
        "tags": [
          "Subscriptions"
        ],
        "x-speakeasy-group": "subscriptions",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "getSubscription"
      },
      "put": {
        "operationId": "update-subscription",
        "summary": "Update a specific subscription",
        "description": "Update a specific subscription",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UpdatePhysicalProductSubscription"
                  },
                  {
                    "$ref": "#/components/schemas/UpdateDigitalProductSubscription"
                  },
                  {
                    "$ref": "#/components/schemas/PauseSubscription"
                  },
                  {
                    "$ref": "#/components/schemas/RevokeSubscription"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "subscription": {
                          "$ref": "#/components/schemas/SubscriptionDetail"
                        }
                      },
                      "required": [
                        "subscription"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/update-subscription",
          "description": "API reference for the update-subscription operation"
        },
        "tags": [
          "Subscriptions"
        ],
        "x-speakeasy-group": "subscriptions",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "updateSubscription"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "subscription id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "AcceleratedRewardCouponPromotion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CouponPromotionCommonDetail"
          },
          {
            "type": "object",
            "required": [
              "details",
              "applies_to_product"
            ],
            "properties": {
              "details": {
                "$ref": "#/components/schemas/AcceleratedRewardRule"
              },
              "applies_to_product": {
                "enum": [
                  "product",
                  "category"
                ]
              }
            }
          }
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/AcceleratedRewardCouponPromotion",
          "description": "API reference for the AcceleratedRewardCouponPromotion schema"
        },
        "title": "AcceleratedRewardCouponPromotion"
      },
      "AcceleratedRewardRule": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "product_id",
                "variant_id",
                "minimum_quantity",
                "minimum_value"
              ],
              "properties": {
                "product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "minimum_quantity": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "minimum_value": {
                  "type": [
                    "number",
                    "null"
                  ]
                }
              }
            }
          },
          "category_id": {
            "description": "Array of category ids.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bonus_loyalty_point": {
            "type": "integer"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/AcceleratedRewardRule",
          "description": "API reference for the AcceleratedRewardRule schema"
        },
        "required": [
          "products",
          "category_id",
          "bonus_loyalty_point"
        ],
        "title": "AcceleratedRewardRule"
      },
      "AdditionalProductDetails": {
        "type": "object",
        "properties": {
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "hsn_code": {
            "type": [
              "string",
              "null"
            ]
          },
          "videos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVideo"
            }
          },
          "shipping": {
            "$ref": "#/components/schemas/ProductShipping"
          },
          "upselling_product_ids": {
            "description": "An array of product IDs",
            "type": "array",
            "items": {
              "type": [
                "string",
                "null"
              ],
              "pattern": "^[a-zA-Z0-9]{26}$",
              "examples": [
                "01F3Z7KG06J4ACWH1C4926KJEB"
              ]
            }
          },
          "crossselling_product_ids": {
            "description": "An array of product IDs",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[A-Za-z0-9]{26}$",
              "examples": [
                "01F3Z7KG06J4ACWH1C4926KJEB"
              ]
            }
          },
          "seo": {
            "$ref": "#/components/schemas/Seo"
          },
          "metadata": {
            "type": [
              "object",
              "null"
            ],
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/AdditionalProductDetails",
          "description": "API reference for the AdditionalProductDetails schema"
        },
        "required": [
          "description",
          "hsn_code",
          "videos",
          "shipping",
          "upselling_product_ids",
          "crossselling_product_ids",
          "seo",
          "metadata"
        ],
        "title": "AdditionalProductDetails"
      },
      "AnalyticsEvent": {
        "description": "Model for analytics event",
        "type": "object",
        "properties": {
          "event": {
            "description": "event name",
            "type": "string"
          },
          "type": {
            "const": "track"
          },
          "userId": {
            "description": "commercengine user id",
            "type": "string"
          },
          "channel": {
            "const": "website"
          },
          "context": {
            "type": "object",
            "properties": {
              "ip": {
                "type": "string"
              },
              "userAgent": {
                "type": "string"
              }
            },
            "required": [
              "ip",
              "userAgent"
            ]
          },
          "properties": {
            "description": "properties of the event",
            "type": "object"
          },
          "messageId": {
            "description": "unique hash string.",
            "type": "string"
          },
          "timestamp": {
            "description": "timestamp when event occured",
            "type": "string",
            "format": "date-time"
          },
          "sentAt": {
            "description": "time when event sent to server",
            "type": "string",
            "format": "date-time"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/AnalyticsEvent",
          "description": "API reference for the AnalyticsEvent schema"
        },
        "required": [
          "event",
          "type",
          "userId",
          "channel",
          "context",
          "properties",
          "messageId",
          "timestamp",
          "sentAt"
        ],
        "title": "AnalyticsEvent"
      },
      "AnonymousUser": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique ID of the user.",
            "type": "string",
            "readOnly": true
          },
          "is_anonymous": {
            "description": "Indicates whether the user is anonymous.",
            "type": "boolean",
            "readOnly": true
          },
          "is_logged_in": {
            "description": "Indicates whether the user is currently logged in.",
            "type": "boolean",
            "readOnly": true
          },
          "first_name": {
            "description": "Userâ€™s first name.",
            "type": [
              "string",
              "null"
            ]
          },
          "last_name": {
            "description": "Userâ€™s last name.",
            "type": [
              "string",
              "null"
            ]
          },
          "phone": {
            "description": "10 digit phone number without country code.",
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "description": "Userâ€™s email Iâ€™d.",
            "type": [
              "string",
              "null"
            ]
          },
          "is_email_verified": {
            "description": "Boolean indicating whether the email is verified.",
            "type": "boolean",
            "default": false,
            "readOnly": true
          },
          "is_phone_verified": {
            "description": "Boolean indicating whether the phone is verified.",
            "type": "boolean",
            "default": false,
            "readOnly": true
          },
          "profile_image_url": {
            "description": "URL to the user's profile image.",
            "type": [
              "string",
              "null"
            ]
          },
          "created_at": {
            "description": "Timestamps indicate when the user's account was created.",
            "type": "string",
            "format": "datetime",
            "readOnly": true
          },
          "modified_at": {
            "description": "Timestamps indicating when the user account was last modified.",
            "type": "string",
            "format": "datetime",
            "readOnly": true
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/AnonymousUser",
          "description": "API reference for the AnonymousUser schema"
        },
        "required": [
          "id",
          "is_anonymous",
          "is_logged_in",
          "first_name",
          "last_name",
          "phone",
          "email",
          "is_email_verified",
          "is_phone_verified",
          "profile_image_url"
        ],
        "title": "AnonymousUser"
      },
      "ApplicableCoupon": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "coupon_type": {
            "$ref": "#/components/schemas/CouponType"
          },
          "coupon_code": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "estimated_discount": {
            "type": "number"
          },
          "savings_message": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/ApplicableCoupon",
          "description": "API reference for the ApplicableCoupon schema"
        }
      },
      "ApplicablePromotion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "promotion_type": {
            "$ref": "#/components/schemas/PromotionType"
          },
          "estimated_discount": {
            "type": "number"
          },
          "savings_message": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/ApplicablePromotion",
          "description": "API reference for the ApplicablePromotion schema"
        }
      },
      "AppliedCoupon": {
        "description": "Details about an active coupon applied to a cart/order",
        "type": "object",
        "properties": {
          "coupon_id": {
            "type": "string"
          },
          "coupon_type": {
            "enum": [
              "discount",
              "free-goods",
              "fixed-price",
              "free-shipping",
              "buy-x-get-y",
              "volume-based",
              "accelerated-rewards"
            ]
          },
          "savings": {
            "type": "number"
          },
          "product_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "variant_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "product_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "variant_name": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/AppliedCoupon",
          "description": "API reference for the AppliedCoupon schema"
        },
        "required": [
          "coupon_id",
          "coupon_type",
          "savings",
          "product_id",
          "variant_id",
          "product_name",
          "variant_name"
        ],
        "title": "AppliedPromotion"
      },
      "AppliedPromotion": {
        "description": "Details about an active promotion applied to a cart/order",
        "type": "object",
        "properties": {
          "promotion_id": {
            "type": "string"
          },
          "promotion_type": {
            "enum": [
              "discount",
              "free-goods",
              "free-shipping",
              "buy-x-get-y",
              "volume-based"
            ]
          },
          "savings": {
            "type": "number"
          },
          "product_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "variant_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "product_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "variant_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "applied_sequence": {
            "type": "number"
          },
          "scope": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/AppliedPromotion",
          "description": "API reference for the AppliedPromotion schema"
        },
        "required": [
          "promotion_id",
          "promotion_type",
          "savings",
          "product_id",
          "variant_id",
          "product_name",
          "variant_name",
          "applied_sequence",
          "scope"
        ],
        "title": "AppliedPromotion"
      },
      "AssociatedOption": {
        "description": "An object where each key is an option name, and the value describes the option details.",
        "type": "object",
        "additionalProperties": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/ColorOption"
            },
            {
              "$ref": "#/components/schemas/SingleSelectOption"
            }
          ]
        },
        "examples": [
          {
            "background_color": {
              "name": "Background Color",
              "value": {
                "name": "Blue",
                "hexcode": "#0000FF"
              },
              "type": "color"
            },
            "size": {
              "name": "Size",
              "value": "Large",
              "type": "single-select"
            }
          }
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/AssociatedOption",
          "description": "API reference for the AssociatedOption schema"
        },
        "title": "AssociatedOption"
      },
      "AutoScaleBasedOnAmount": {
        "type": "object",
        "properties": {
          "spending_criteria_type": {
            "type": "string",
            "const": "minimum-purchase-amount"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "product_id",
                "variant_id",
                "auto_scale",
                "slab"
              ],
              "properties": {
                "product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "auto_scale": {
                  "type": "boolean",
                  "const": true
                },
                "slab": {
                  "type": "object",
                  "properties": {
                    "minimum_purchase_amount": {
                      "type": "number"
                    },
                    "get_quantity": {
                      "type": "integer"
                    },
                    "condition": {
                      "enum": [
                        "greater-or-equal"
                      ]
                    }
                  },
                  "required": [
                    "minimum_purchase_amount",
                    "get_quantity",
                    "condition"
                  ]
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/AutoScaleBasedOnAmount",
          "description": "API reference for the AutoScaleBasedOnAmount schema"
        },
        "required": [
          "spending_criteria_type",
          "products"
        ],
        "title": "AutoScaleBasedOnAmount"
      },
      "AutoScaleBasedOnQuantity": {
        "type": "object",
        "properties": {
          "spending_criteria_type": {
            "type": "string",
            "const": "minimum-quantity"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "product_id",
                "variant_id",
                "auto_scale",
                "slab"
              ],
              "properties": {
                "product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "auto_scale": {
                  "type": "boolean",
                  "const": true
                },
                "slab": {
                  "type": "object",
                  "properties": {
                    "buy_quantity": {
                      "type": "integer"
                    },
                    "get_quantity": {
                      "type": "integer"
                    },
                    "condition": {
                      "enum": [
                        "greater-or-equal"
                      ]
                    }
                  },
                  "required": [
                    "buy_quantity",
                    "get_quantity",
                    "condition"
                  ]
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/AutoScaleBasedOnQuantity",
          "description": "API reference for the AutoScaleBasedOnQuantity schema"
        },
        "required": [
          "spending_criteria_type",
          "products"
        ],
        "title": "AutoScaleBasedOnQuantity"
      },
      "BankTransfer": {
        "description": "Bank transfer payment - IMPS, NEFT, RTGS",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentInfo"
          },
          {
            "type": "object",
            "properties": {
              "bank_account_number": {
                "description": "masked account number\r\ne.g. ************1234",
                "type": "string"
              },
              "bank_name": {
                "type": "string"
              }
            }
          }
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/BankTransfer",
          "description": "API reference for the BankTransfer schema"
        },
        "title": "BankTransfer"
      },
      "BooleanAttribute": {
        "description": "Attribute for boolean values",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "key": {
            "description": "A lookup safe version of the name that is lowercased and spaces are replaced with underscores. For instance, if name is `Product Type`, key will be `product_type`",
            "type": "string"
          },
          "type": {
            "type": "string",
            "example": "boolean"
          },
          "value": {
            "description": "For boolean attributes",
            "type": "boolean"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/BooleanAttribute",
          "description": "API reference for the BooleanAttribute schema"
        },
        "readOnly": true,
        "required": [
          "id",
          "name",
          "key",
          "type",
          "value"
        ],
        "title": "BooleanAttribute"
      },
      "Brand": {
        "type": "object",
        "properties": {
          "name": {
            "description": "brand name. it will be used in emails and other communications.",
            "type": "string"
          },
          "logo_url": {
            "type": [
              "string",
              "null"
            ]
          },
          "social_media_links": {
            "description": "json object having key - value pair.\r\n\r\nexample - {\"facebook\": \"www.facebook.com/commecengine\"}",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/Brand",
          "description": "API reference for the Brand schema"
        },
        "required": [
          "name",
          "logo_url",
          "social_media_links"
        ],
        "title": "Brand"
      },
      "Business": {
        "type": "object",
        "properties": {
          "business_type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "pan_number": {
            "type": "string"
          },
          "gstin": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "examples": [],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/Business",
          "description": "API reference for the Business schema"
        },
        "required": [
          "business_type",
          "name",
          "pan_number"
        ],
        "title": "Business"
      },
      "BuyXGetYCouponPromotion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CouponPromotionCommonDetail"
          },
          {
            "type": "object",
            "required": [
              "details",
              "applies_to_product"
            ],
            "properties": {
              "details": {
                "$ref": "#/components/schemas/BuyXGetYRule"
              },
              "applies_to_product": {
                "enum": [
                  "product"
                ]
              }
            }
          }
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/BuyXGetYCouponPromotion",
          "description": "API reference for the BuyXGetYCouponPromotion schema"
        },
        "title": "BuyXGetYCouponPromotion"
      },
      "BuyXGetYRule": {
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/BuyXGetYRule",
          "description": "API reference for the BuyXGetYRule schema"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/BuyXGetYRuleBasedOnQuantity"
          },
          {
            "$ref": "#/components/schemas/BuyXGetYRuleBasedOnAmount"
          }
        ],
        "title": "BuyXGetYRule"
      },
      "BuyXGetYRuleBasedOnAmount": {
        "description": "Additional fields required in addition to marked as required.\n1) buy_product_id or buy_variant_id or buy_from_category_id\n2) get_product_id or get_variant_id or get_from_category_id\n3) get_free_quantity or get_discount_percent",
        "type": "object",
        "properties": {
          "spending_criteria_type": {
            "type": "string",
            "const": "minimum-purchase-amount"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "minimum_purchase_amount",
                "buy_product_id",
                "buy_variant_id",
                "buy_from_category_id",
                "get_product_id",
                "get_variant_id",
                "get_from_category_id",
                "get_quantity",
                "get_offer_type",
                "get_discount_percent"
              ],
              "properties": {
                "minimum_purchase_amount": {
                  "type": "number",
                  "minimum": 1
                },
                "buy_product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "buy_variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "buy_from_category_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "get_product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "get_variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "get_from_category_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "get_quantity": {
                  "type": "integer",
                  "minimum": 1
                },
                "get_offer_type": {
                  "enum": [
                    "discount",
                    "free"
                  ]
                },
                "get_discount_percent": {
                  "description": "It can be null for get_offer_type = free",
                  "type": [
                    "number",
                    "null"
                  ]
                }
              }
            }
          },
          "maximum_discount_amount": {
            "description": "It can be null for get_offer_type = free",
            "type": [
              "number",
              "null"
            ]
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/BuyXGetYRuleBasedOnAmount",
          "description": "API reference for the BuyXGetYRuleBasedOnAmount schema"
        },
        "required": [
          "spending_criteria_type",
          "products",
          "maximum_discount_amount"
        ],
        "title": "BuyXGetYRuleBasedOnAmount"
      },
      "BuyXGetYRuleBasedOnQuantity": {
        "description": "Additional fields required in addition to marked as required.\n1) buy_product_id or buy_variant_id or buy_from_category_id\n2) get_product_id or get_variant_id or get_from_category_id\n3) get_free_quantity or get_discount_percent",
        "type": "object",
        "properties": {
          "spending_criteria_type": {
            "type": "string",
            "const": "minimum-quantity"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "minimum_quantity",
                "buy_product_id",
                "buy_variant_id",
                "buy_from_category_id",
                "get_product_id",
                "get_variant_id",
                "get_from_category_id",
                "get_quantity",
                "get_offer_type",
                "get_discount_percent"
              ],
              "properties": {
                "minimum_quantity": {
                  "type": "integer",
                  "minimum": 1
                },
                "buy_product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "buy_variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "buy_from_category_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "get_product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "get_variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "get_from_category_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "get_quantity": {
                  "type": "integer",
                  "minimum": 1
                },
                "get_offer_type": {
                  "enum": [
                    "discount",
                    "free"
                  ]
                },
                "get_discount_percent": {
                  "description": "It can be null for get_offer_type = free",
                  "type": [
                    "number",
                    "null"
                  ]
                }
              }
            }
          },
          "maximum_discount_amount": {
            "description": "It can be null for get_offer_type = free",
            "type": [
              "number",
              "null"
            ]
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/BuyXGetYRuleBasedOnQuantity",
          "description": "API reference for the BuyXGetYRuleBasedOnQuantity schema"
        },
        "required": [
          "spending_criteria_type",
          "products",
          "maximum_discount_amount"
        ],
        "title": "BuyXGetYRuleBasedOnQuantity"
      },
      "CardPayment": {
        "description": "Payments using credit card, debit card",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentInfo"
          },
          {
            "type": "object",
            "properties": {
              "card_number": {
                "description": "masked card number\r\ne.g. ************1111",
                "type": "string"
              },
              "card_type": {
                "type": "string",
                "enum": [
                  "Visa",
                  "Master Card",
                  "Rupay",
                  "American Express"
                ]
              }
            }
          }
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/CardPayment",
          "description": "API reference for the CardPayment schema"
        },
        "title": "CardPayment"
      },
      "Cart": {
        "description": "This cart model is structured to capture a wide range of details, facilitating accurate representation and management of user shopping carts in an e-commerce platform.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the cart.",
            "type": "string",
            "pattern": "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{26}$"
          },
          "active": {
            "description": "Indicates whether the cart is currently active or inactive.",
            "type": "boolean"
          },
          "customer_note": {
            "description": "customer note for shipping or product customization.",
            "type": [
              "string",
              "null"
            ]
          },
          "is_promotion_applied": {
            "description": "Indicates if a promotion is applied or not.",
            "type": "boolean"
          },
          "is_coupon_applied": {
            "description": "Indicates if a coupon is applied or not.",
            "type": "boolean"
          },
          "coupon_code": {
            "description": "Code of the applied coupon.",
            "type": [
              "string",
              "null"
            ]
          },
          "coupon_discount_amount": {
            "description": "Discount amount due to the coupon.",
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "coupon_discount_percent": {
            "description": "Discount amount due to the coupon.",
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "promotion_discount_amount": {
            "description": "Discount amount due to promotions(If Applied).",
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "promotion_discount_percent": {
            "description": "Discount amount due to promotions(If Applied).",
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "subtotal": {
            "description": "Subtotal amount for items in the cart.",
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "items_tax_amount": {
            "description": "Total tax amount for items.",
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "subtotal_including_tax": {
            "description": "Subtotal including tax.",
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "shipping_estimated_cost": {
            "description": "Estimated cost of shipping.",
            "type": [
              "number",
              "null"
            ]
          },
          "shipping_discount_amount": {
            "description": "Discount applied on estimated shipping cost.",
            "type": [
              "number",
              "null"
            ]
          },
          "shipping_amount": {
            "description": "Shipping amount chargable to customer.",
            "type": [
              "number",
              "null"
            ]
          },
          "shipping_tax_rate": {
            "description": "Shipping tax rate applied on shipping amount.",
            "type": [
              "number",
              "null"
            ]
          },
          "shipping_tax_amount": {
            "description": "Tax applied on shipping_amount.",
            "type": [
              "number",
              "null"
            ]
          },
          "shipping_amount_including_tax": {
            "description": "Shipping amount including shipping tax.",
            "type": [
              "number",
              "null"
            ]
          },
          "shipping_provider_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "shipping_provider_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "courier_company_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "courier_company_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "estimated_delivery_days": {
            "type": [
              "integer",
              "null"
            ]
          },
          "handling_charge_excluding_tax": {
            "description": "The additional charge applied to cover the costs associated with processing, packaging, and handling an order. This fee is separate from shipping charges and may include materials, or special handling requirements.",
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "handling_charge_tax_amount": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "handling_charge_including_tax": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "total_tax": {
            "description": "Total tax amount for the entire cart.",
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "grand_total": {
            "description": "Grand total amount for the cart.",
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "credit_balance_used": {
            "description": "Amount of credit balance used.",
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "to_be_paid": {
            "description": "Amount to be paid by the customer.",
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "loyalty_points_redeemed": {
            "description": "Number of loyalty points redeemed.",
            "type": "integer",
            "minimum": 0
          },
          "loyalty_points_earned": {
            "description": "Number of loyalty points earned.",
            "type": "integer",
            "minimum": 0
          },
          "cart_items_count": {
            "description": "Number of items in the cart.",
            "type": "integer",
            "minimum": 0
          },
          "cart_items": {
            "description": "List containing detailed information about each item in the cart. ",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItem"
            }
          },
          "billing_address": {
            "description": "Details of the billing address.",
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "shipping_address": {
            "description": "Details of the shipping address.",
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "currency": {
            "description": "Details about the currency being used, including `name`, `code`, and `symbol`.",
            "$ref": "#/components/schemas/Currency"
          },
          "metadata": {
            "description": "Additional metadata associated with the cart.",
            "type": [
              "object",
              "null"
            ],
            "additionalProperties": {
              "type": "string"
            }
          },
          "expires_at": {
            "description": "the expiration timestamp of the shopping cart. .\n",
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "applied_promotions": {
            "description": "Information about the promotional offers that have been applied to the cart.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppliedPromotion"
            }
          },
          "applied_coupons": {
            "description": "This key provides details about the savings in cart after coupon have been applied to the cart.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppliedCoupon"
            }
          },
          "promotion_savings": {
            "type": "number",
            "minimum": 0
          },
          "coupon_savings": {
            "type": "number",
            "minimum": 0
          },
          "other_savings": {
            "type": "number",
            "minimum": 0
          },
          "total_savings": {
            "type": "number",
            "minimum": 0
          }
        },
        "examples": [],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/Cart",
          "description": "API reference for the Cart schema"
        },
        "required": [
          "id",
          "active",
          "customer_note",
          "is_promotion_applied",
          "is_coupon_applied",
          "coupon_code",
          "coupon_discount_amount",
          "coupon_discount_percent",
          "promotion_discount_amount",
          "subtotal",
          "items_tax_amount",
          "subtotal_including_tax",
          "shipping_estimated_cost",
          "shipping_discount_amount",
          "shipping_amount",
          "shipping_tax_rate",
          "shipping_tax_amount",
          "shipping_amount_including_tax",
          "shipping_provider_id",
          "shipping_provider_name",
          "courier_company_id",
          "courier_company_name",
          "estimated_delivery_days",
          "handling_charge_excluding_tax",
          "handling_charge_tax_amount",
          "handling_charge_including_tax",
          "total_tax",
          "grand_total",
          "credit_balance_used",
          "to_be_paid",
          "loyalty_points_redeemed",
          "loyalty_points_earned",
          "cart_items_count",
          "cart_items",
          "billing_address",
          "shipping_address",
          "currency",
          "metadata",
          "expires_at",
          "applied_promotions",
          "applied_coupons",
          "promotion_savings",
          "coupon_savings",
          "other_savings",
          "total_savings"
        ],
        "title": "Cart"
      },
      "CartBasedServiceabilityCheck": {
        "type": "object",
        "properties": {
          "delivery_pincode": {
            "type": "string"
          },
          "cart_id": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/CartBasedServiceabilityCheck",
          "description": "API reference for the CartBasedServiceabilityCheck schema"
        },
        "required": [
          "delivery_pincode",
          "cart_id"
        ],
        "title": "CartBasedServiceabilityCheck"
      },
      "CartItem": {
        "description": "This Cart Item model captures the attributes of a cart item, including product details, pricing information, subscription details, and other relevant information related to Cart Item.",
        "type": "object",
        "properties": {
          "product_id": {
            "description": "Unique identifier for the product.",
            "type": "string",
            "pattern": "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{26}$"
          },
          "variant_id": {
            "description": "Unique identifier for the product.",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{26}$"
          },
          "sku": {
            "description": "Stock Keeping Unit, a unique identifier for the product within inventory.",
            "type": [
              "string",
              "null"
            ],
            "examples": [
              "SKU1254"
            ]
          },
          "slug": {
            "description": "Unique slug for the product",
            "type": "string"
          },
          "product_name": {
            "description": "Name of the product.",
            "type": "string"
          },
          "variant_name": {
            "description": "Name of the variant.",
            "type": [
              "string",
              "null"
            ]
          },
          "product_type": {
            "type": "string",
            "enum": [
              "physical",
              "digital",
              "bundle"
            ],
            "examples": [
              "physical"
            ]
          },
          "product_image_url": {
            "description": "URL pointing to the product image.",
            "type": "string"
          },
          "stock_available": {
            "description": "Indicates whether the product is currently in stock.",
            "type": "boolean"
          },
          "backorder": {
            "description": "Indicates whether the item is being fulfilled as a backorder. When true, the item is not currently in stock and will ship later once inventory is available. This may result in the order being split into multiple shipments, with delays for the backordered portion.",
            "type": "boolean"
          },
          "on_offer": {
            "description": "Indicates whether the product is currently on offer.",
            "type": "boolean"
          },
          "on_subscription": {
            "description": "Indicates whether the product is currently on a subscription.",
            "type": "boolean"
          },
          "on_promotion": {
            "description": "Indicates whether the product is part of a promotion.",
            "type": "boolean"
          },
          "quantity": {
            "description": "The quantity of the product in the cart.",
            "type": "integer"
          },
          "is_free_item": {
            "description": "Indicates if the product is offered for free.",
            "type": "boolean"
          },
          "free_quantity": {
            "description": "Quantity of the product that is free.",
            "type": "integer"
          },
          "promotion_discount_amount": {
            "description": "Discount amount due to promotions.",
            "type": "number",
            "format": "double"
          },
          "coupon_discount_amount": {
            "description": "Discount amount due to applied coupons.",
            "type": "number",
            "format": "double"
          },
          "price_including_tax": {
            "type": "boolean",
            "format": "double",
            "examples": [
              false
            ]
          },
          "listing_price": {
            "type": "number",
            "format": "double",
            "example": 200
          },
          "selling_price": {
            "type": "number",
            "format": "double",
            "example": 199
          },
          "selling_price_excluding_tax": {
            "type": "number",
            "format": "double"
          },
          "min_order_quantity": {
            "type": "integer",
            "default": 1
          },
          "max_order_quantity": {
            "type": [
              "integer",
              "null"
            ]
          },
          "incremental_quantity": {
            "type": "integer",
            "default": 1
          },
          "handling_charge_excluding_tax": {
            "description": "Additional cost for shipping associated with the product.",
            "type": "number",
            "minimum": 0,
            "readOnly": true
          },
          "handling_charge_tax_rate": {
            "description": "Additional cost for shipping associated with the product.",
            "type": "number",
            "minimum": 0,
            "readOnly": true
          },
          "handling_charge_including_tax": {
            "description": "Additional cost for shipping associated with the product.",
            "type": "number",
            "minimum": 0,
            "readOnly": true
          },
          "tax_type": {
            "description": "Type of tax applied (e.g., GST).",
            "type": "string",
            "default": "GST",
            "const": "GST"
          },
          "tax_rate": {
            "description": "The rate of tax applied to the product.",
            "type": "number",
            "format": "double"
          },
          "tax_amount": {
            "description": "The total tax amount for the product.",
            "type": "number",
            "format": "double"
          },
          "associated_options": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AssociatedOption",
                "description": "Used when `variant_id` is not null."
              },
              {
                "type": "null",
                "description": "Null when `variant_id` is null."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAttribute"
            }
          },
          "subscriptions": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/ProductSubscription"
            }
          }
        },
        "examples": [],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/CartItem",
          "description": "API reference for the CartItem schema"
        },
        "required": [
          "product_id",
          "variant_id",
          "sku",
          "slug",
          "product_name",
          "variant_name",
          "product_type",
          "product_image_url",
          "stock_available",
          "backorder",
          "on_offer",
          "on_subscription",
          "on_promotion",
          "quantity",
          "is_free_item",
          "free_quantity",
          "promotion_discount_amount",
          "coupon_discount_amount",
          "price_including_tax",
          "listing_price",
          "selling_price",
          "selling_price_excluding_tax",
          "min_order_quantity",
          "max_order_quantity",
          "incremental_quantity",
          "handling_charge_excluding_tax",
          "handling_charge_tax_rate",
          "handling_charge_including_tax",
          "tax_type",
          "tax_rate",
          "tax_amount",
          "associated_options",
          "attributes",
          "subscriptions"
        ]
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "slug": {
            "type": "string",
            "readOnly": true
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "parent_category_id": {
            "type": [
              "string",
              "null"
            ],
            "readOnly": true
          },
          "product_count": {
            "type": "integer"
          },
          "active": {
            "type": "boolean"
          }
        },
        "examples": [],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/Category",
          "description": "API reference for the Category schema"
        },
        "required": [
          "id",
          "name",
          "slug",
          "description",
          "parent_category_id",
          "product_count",
          "active"
        ],
        "title": "Category"
      },
      "CollectInStore": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "distance_km": {
            "type": "number"
          },
          "collect_eta_minutes": {
            "type": "integer"
          },
          "is_recommended": {
            "type": "boolean"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/CollectInStore",
          "description": "API reference for the CollectInStore schema"
        },
        "title": "CollectInStore"
      },
      "CollectInStoreFulfillment": {
        "type": "object",
        "properties": {
          "fulfillment_type": {
            "type": "string",
            "const": "collect-in-store"
          },
          "pickup_location_id": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/CollectInStoreFulfillment",
          "description": "API reference for the CollectInStoreFulfillment schema"
        },
        "required": [
          "fulfillment_type",
          "pickup_location_id"
        ],
        "title": "CollectInStoreFulfillment"
      },
      "ColorAttribute": {
        "description": "Attribute for colors",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "key": {
            "description": "A lookup safe version of the name that is lowercased and spaces are replaced with underscores. For instance, if name is `Product Type`, key will be `product_type`",
            "type": "string"
          },
          "type": {
            "type": "string",
            "example": "color"
          },
          "value": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "name",
                "hexcode"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "hexcode": {
                  "description": "The hex code of the color (e.g., #000000).",
                  "type": "string",
                  "format": "color-hex",
                  "pattern": "^#(?:[0-9a-fA-F]{3}){1,2}$"
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/ColorAttribute",
          "description": "API reference for the ColorAttribute schema"
        },
        "readOnly": true,
        "required": [
          "id",
          "name",
          "key",
          "type",
          "value"
        ],
        "title": "ColorAttribute"
      },
      "ColorOption": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the associated option.",
            "type": "string"
          },
          "type": {
            "description": "The type of the associated option.",
            "const": "color"
          },
          "value": {
            "type": "object",
            "properties": {
              "hexcode": {
                "type": "string",
                "description": "The hex code of the color (e.g., #000000).",
                "format": "color-hex",
                "pattern": "^#(?:[0-9a-fA-F]{3}){1,2}$"
              },
              "name": {
                "type": "string",
                "description": "The name of the color."
              }
            },
            "required": [
              "name",
              "hexcode"
            ]
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/ColorOption",
          "description": "API reference for the ColorOption schema"
        },
        "required": [
          "name",
          "type",
          "value"
        ],
        "title": "ColorOption"
      },
      "Country": {
        "description": "Country list model",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "country_name": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          },
          "country_iso_code": {
            "type": "string"
          },
          "currency_code": {
            "type": "string"
          },
          "currency_symbol": {
            "type": "string"
          },
          "currency_name": {
            "type": "string"
          },
          "flag_icon_url": {
            "type": "string"
          },
          "country_alias": {
            "type": "string"
          },
          "continent": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/Country",
          "description": "API reference for the Country schema"
        },
        "title": "Country"
      },
      "CountryState": {
        "description": "Country wise states model",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "iso_code": {
            "type": "string"
          },
          "gst_code": {
            "type": "string"
          },
          "state_alias": {
            "type": "string",
            "readOnly": true
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/CountryState",
          "description": "API reference for the CountryState schema"
        },
        "required": [
          "name",
          "iso_code"
        ],
        "title": "CountryState"
      },
      "Coupon": {
        "allOf": [
          {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DiscountCouponPromotion"
              },
              {
                "$ref": "#/components/schemas/FreeGoodCouponPromotion"
              },
              {
                "$ref": "#/components/schemas/FixedPriceCouponPromotion"
              },
              {
                "$ref": "#/components/schemas/BuyXGetYCouponPromotion"
              },
              {
                "$ref": "#/components/schemas/VolumeBasedCouponPromotion"
              },
              {
                "$ref": "#/components/schemas/FreeShipingCouponPromotion"
              },
              {
                "$ref": "#/components/schemas/AcceleratedRewardCouponPromotion"
              }
            ]
          },
          {
            "type": "object",
            "required": [
              "coupon_type",
              "coupon_code",
              "application_rules",
              "can_be_used_with_promotion"
            ],
            "properties": {
              "coupon_type": {
                "enum": [
                  "discount",
                  "free-goods",
                  "fixed-price",
                  "free-shipping",
                  "buy-x-get-y",
                  "volume-based",
                  "accelerated-rewards"
                ]
              },
              "coupon_code": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "application_rules": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "max_applicable_items": {
                    "type": "integer"
                  },
                  "application_priority": {
                    "enum": [
                      "cheapest_first",
                      "most_expensive_first",
                      "first_added"
                    ]
                  }
                },
                "required": [
                  "max_applicable_items",
                  "application_priority"
                ]
              },
              "can_be_used_with_promotion": {
                "type": "boolean"
              }
            }
          }
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/Coupon",
          "description": "API reference for the Coupon schema"
        },
        "title": "Coupon"
      },
      "CouponPromotionCommonDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "redemption_limits": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "total_redemptions": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "per_customer_redemptions": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "per_coupon_code_redemptions": {
                "type": [
                  "integer",
                  "null"
                ]
              }
            },
            "required": [
              "total_redemptions",
              "per_customer_redemptions",
              "per_coupon_code_redemptions"
            ]
          },
          "redemption_count": {
            "type": "integer",
            "readOnly": true
          },
          "minimum_order_total": {
            "type": [
              "integer",
              "null"
            ],
            "default": 0
          },
          "starts_at": {
            "type": "string",
            "format": "date-time"
          },
          "expires_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/CouponPromotionCommonDetail",
          "description": "API reference for the CouponPromotionCommonDetail schema"
        },
        "required": [
          "id",
          "name",
          "description",
          "tags",
          "redemption_limits",
          "redemption_count",
          "minimum_order_total",
          "starts_at",
          "expires_at"
        ],
        "title": "CouponPromotionCommonDetail"
      },
      "CouponType": {
        "enum": [
          "discount",
          "free-goods",
          "fixed-price",
          "free-shipping",
          "buy-x-get-y",
          "volume-based",
          "accelerated-rewards"
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/CouponType",
          "description": "API reference for the CouponType schema"
        }
      },
      "CreateCustomSubscription": {
        "type": "object",
        "properties": {
          "plan_type": {
            "type": "string",
            "const": "custom",
            "readOnly": true
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "description": "if specified, subscrition will be revoked on this date.",
            "type": [
              "string",
              "null"
            ],
            "format": "date"
          },
          "billing_frequency": {
            "enum": [
              "monthly"
            ]
          },
          "billing_interval": {
            "description": "Frequency unit multiplier. For example, `1` with `monthly` means every month; `3` with `weekly` means in every 3 weeks.",
            "type": "integer",
            "default": 1
          },
          "billing_limit": {
            "type": [
              "integer",
              "null"
            ]
          },
          "shipping_frequency": {
            "enum": [
              "monthly"
            ]
          },
          "shipping_interval": {
            "description": "Frequency unit multiplier. For example, `1` with `monthly` means every month; `3` with `weekly` means in every 3 weeks.",
            "type": [
              "integer",
              "null"
            ],
            "default": 1
          },
          "shipping_limit": {
            "type": [
              "integer",
              "null"
            ]
          },
          "coupon_code": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/CreateCustomSubscription",
          "description": "API reference for the CreateCustomSubscription schema"
        },
        "required": [
          "plan_type",
          "billing_frequency",
          "billing_interval",
          "billing_limit"
        ],
        "title": "CreateCustomSubscription",
        "x-tags": [
          "Subscriptions"
        ]
      },
      "CreateCustomer": {
        "type": "object",
        "properties": {
          "business": {
            "$ref": "#/components/schemas/Business"
          },
          "address": {
            "$ref": "#/components/schemas/CustomerAddress"
          }
        },
        "examples": [],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/CreateCustomer",
          "description": "API reference for the CreateCustomer schema"
        },
        "title": "CreateCustomer"
      },
      "CreateOrderReturn": {
        "type": "object",
        "properties": {
          "return_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderReturnItem"
            }
          },
          "shipping_address": {
            "$ref": "#/components/schemas/CustomerAddress"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/CreateOrderReturn",
          "description": "API reference for the CreateOrderReturn schema"
        },
        "title": "CreateOrderReturn"
      },
      "CreateReview": {
        "description": "Create Product Review model",
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "order_number": {
            "type": "string",
            "writeOnly": true
          },
          "rating": {
            "type": "number"
          },
          "review_text": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string",
              "contentMediaType": "application/octet-stream"
            }
          },
          "videos": {
            "type": "array",
            "items": {
              "type": "string",
              "contentMediaType": "application/octet-stream"
            }
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/CreateReview",
          "description": "API reference for the CreateReview schema"
        },
        "required": [
          "user_id",
          "order_number",
          "rating"
        ],
        "title": "CreateProductReview"
      },
      "CreateStandardSubscription": {
        "type": "object",
        "properties": {
          "plan_type": {
            "type": "string",
            "const": "standard",
            "readOnly": true
          },
          "plan_id": {
            "type": "string",
            "const": "standard",
            "readOnly": true
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "description": "if specified, subscrition will be revoked on this date.",
            "type": [
              "string",
              "null"
            ],
            "format": "date"
          },
          "coupon_code": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/CreateStandardSubscription",
          "description": "API reference for the CreateStandardSubscription schema"
        },
        "required": [
          "plan_type",
          "plan_id"
        ],
        "title": "CreateStandardSubscription",
        "x-tags": [
          "Subscriptions"
        ]
      },
      "CreateSubscription": {
        "allOf": [
          {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreateStandardSubscription"
              },
              {
                "$ref": "#/components/schemas/CreateCustomSubscription"
              }
            ]
          },
          {
            "$ref": "#/components/schemas/SubscriptionBehaviour"
          },
          {
            "type": "object",
            "required": [
              "invoice_items"
            ],
            "properties": {
              "invoice_items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubscriptionInvoiceItem"
                }
              }
            }
          }
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/CreateSubscription",
          "description": "API reference for the CreateSubscription schema"
        },
        "title": "CreateSubscription",
        "x-tags": [
          "Subscriptions"
        ]
      },
      "Currency": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "examples": [
              "Indian Rupee"
            ]
          },
          "code": {
            "type": "string",
            "examples": [
              "INR"
            ],
            "maxLength": 3,
            "minLength": 3
          },
          "symbol": {
            "type": "string",
            "examples": [
              "â‚¹"
            ]
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/Currency",
          "description": "API reference for the Currency schema"
        },
        "required": [
          "name",
          "code",
          "symbol"
        ]
      },
      "CustomSlabsBasedOnAmount": {
        "type": "object",
        "properties": {
          "spending_criteria_type": {
            "type": "string",
            "const": "minimum-purchase-amount"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "product_id",
                "variant_id",
                "slabs"
              ],
              "properties": {
                "product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "slabs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "minimum_purchase_amount",
                      "get_quantity",
                      "condition"
                    ],
                    "properties": {
                      "minimum_purchase_amount": {
                        "type": "number"
                      },
                      "get_quantity": {
                        "type": "integer"
                      },
                      "condition": {
                        "enum": [
                          "greater-or-equal"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/CustomSlabsBasedOnAmount",
          "description": "API reference for the CustomSlabsBasedOnAmount schema"
        },
        "required": [
          "spending_criteria_type",
          "products"
        ],
        "title": "CustomSlabsBasedOnAmount"
      },
      "CustomSlabsBasedOnQuantity": {
        "type": "object",
        "properties": {
          "spending_criteria_type": {
            "type": "string",
            "const": "minimum-quantity"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "product_id",
                "variant_id",
                "slabs"
              ],
              "properties": {
                "product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "slabs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "buy_quantity",
                      "get_quantity",
                      "condition"
                    ],
                    "properties": {
                      "buy_quantity": {
                        "type": "integer"
                      },
                      "get_quantity": {
                        "type": "integer"
                      },
                      "condition": {
                        "enum": [
                          "greater-or-equal"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/CustomSlabsBasedOnQuantity",
          "description": "API reference for the CustomSlabsBasedOnQuantity schema"
        },
        "required": [
          "spending_criteria_type",
          "products"
        ],
        "title": "CustomSlabsBasedOnQuantity"
      },
      "CustomerAddress": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "description": "null value for guest checkout.",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{26}$"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "country_code": {
            "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.\r\n",
            "type": "string"
          },
          "phone": {
            "description": "10 digit phone number without country code.",
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "address_line1": {
            "type": "string"
          },
          "address_line2": {
            "type": [
              "string",
              "null"
            ]
          },
          "landmark": {
            "type": [
              "string",
              "null"
            ]
          },
          "pincode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "const": "India"
          },
          "tax_identification_number": {
            "description": "Tax Identification Number (TIN/VAT/GSTIN) specific to the country of operation.",
            "type": [
              "string",
              "null"
            ],
            "examples": [
              "123456789",
              "GB123456789",
              "IN27AAEPM0111C1ZQ"
            ]
          },
          "business_name": {
            "description": "Use in billing & shipping details only.",
            "type": [
              "string",
              "null"
            ]
          },
          "is_phone_verified": {
            "type": "boolean",
            "readOnly": true
          },
          "is_email_verified": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "examples": [],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/CustomerAddress",
          "description": "API reference for the CustomerAddress schema"
        },
        "required": [
          "first_name",
          "last_name",
          "country_code",
          "phone",
          "email",
          "address_line1",
          "address_line2",
          "landmark",
          "pincode",
          "city",
          "state",
          "country",
          "tax_identification_number",
          "business_name",
          "is_phone_verified",
          "is_email_verified"
        ]
      },
      "CustomerDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{26}$",
            "readOnly": true
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "country_code": {
            "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.\r\n",
            "type": "string"
          },
          "phone": {
            "description": "10 digit phone number without country code.",
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "is_phone_verified": {
            "type": "boolean",
            "readOnly": true
          },
          "is_email_verified": {
            "type": "boolean",
            "readOnly": true
          },
          "business": {
            "$ref": "#/components/schemas/Business"
          }
        },
        "examples": [],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/CustomerDetail",
          "description": "API reference for the CustomerDetail schema"
        },
        "title": "CustomerDetail"
      },
      "CustomerGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "is_default": {
            "description": "first record will be treated as default if not changed.",
            "type": "boolean"
          },
          "active": {
            "type": "boolean",
            "default": true
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/CustomerGroup",
          "description": "API reference for the CustomerGroup schema"
        },
        "required": [
          "id",
          "name",
          "description",
          "is_default",
          "active"
        ],
        "title": "CustomerGroup"
      },
      "CustomerLoyalty": {
        "type": "object",
        "properties": {
          "membership_number": {
            "type": [
              "string",
              "null"
            ]
          },
          "loyalty_tier": {
            "type": [
              "string",
              "null"
            ]
          },
          "loyalty_point_earned": {
            "type": "integer"
          },
          "loyalty_point_redeemed": {
            "type": "integer"
          },
          "loyalty_point_balance": {
            "type": "integer"
          },
          "loyalty_point_redeemable": {
            "type": "integer"
          },
          "loyalty_point_bonus_accrued": {
            "type": "integer"
          },
          "date_of_reset": {
            "type": [
              "string",
              "null"
            ]
          },
          "total_savings": {
            "type": "integer"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/CustomerLoyalty",
          "description": "API reference for the CustomerLoyalty schema"
        },
        "title": "CustomerLoyalty"
      },
      "CustomerReadyForReview": {
        "description": "List of products and orders for which customer can write review.",
        "type": "object",
        "properties": {
          "product_id": {
            "type": "string"
          },
          "product_name": {
            "type": "string",
            "readOnly": true
          },
          "product_image_url": {
            "type": "string",
            "readOnly": true
          },
          "selling_price": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "listing_price": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "order_number": {
            "type": "string",
            "readOnly": true
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/CustomerReadyForReview",
          "description": "API reference for the CustomerReadyForReview schema"
        },
        "title": "CustomerReadyForReview"
      },
      "CustomerReview": {
        "description": "List of reviews posted by the user.",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "product_id": {
            "type": "string"
          },
          "product_name": {
            "type": "string",
            "readOnly": true
          },
          "product_image_url": {
            "type": "string",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "readOnly": true
          },
          "rating": {
            "type": "number"
          },
          "review_text": {
            "type": "string"
          },
          "review_date": {
            "type": "string",
            "format": "date-time"
          },
          "average_rating": {
            "type": "number",
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "blur_url": {
                  "type": "string",
                  "readOnly": true
                },
                "thumbnail_url": {
                  "type": "string",
                  "readOnly": true
                },
                "standard_url": {
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "readOnly": true
          },
          "videos": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "cover_image_url": {
                  "type": "string",
                  "readOnly": true
                },
                "video_preview_url": {
                  "type": "string",
                  "readOnly": true
                },
                " playback": {
                  "type": "object",
                  "properties": {
                    "hls": {
                      "type": "string"
                    },
                    "dash": {
                      "type": "string"
                    }
                  }
                },
                "duration": {
                  "type": "string",
                  "readOnly": true
                },
                "size": {
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "readOnly": true
          },
          "listing_price": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "selling_price": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "order_number": {
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/CustomerReview",
          "description": "API reference for the CustomerReview schema"
        },
        "required": [
          "product_id",
          "rating",
          "review_text",
          "order_number"
        ],
        "title": "CustomerReview"
      },
      "DateAttribute": {
        "description": "Attribute for date values",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "key": {
            "description": "A lookup safe version of the name that is lowercased and spaces are replaced with underscores. For instance, if name is `Product Type`, key will be `product_type`",
            "type": "string"
          },
          "type": {
            "type": "string",
            "example": "date"
          },
          "value": {
            "description": "For date attributes",
            "type": "string",
            "format": "date-time"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/DateAttribute",
          "description": "API reference for the DateAttribute schema"
        },
        "readOnly": true,
        "required": [
          "id",
          "name",
          "key",
          "type",
          "value"
        ],
        "title": "DateAttribute"
      },
      "DeliveryFulfillment": {
        "type": "object",
        "properties": {
          "fulfillment_type": {
            "type": "string",
            "const": "delivery"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/DeliveryFulfillment",
          "description": "API reference for the DeliveryFulfillment schema"
        },
        "required": [
          "fulfillment_type"
        ],
        "title": "DeliveryFulfillment"
      },
      "DiscountBasedPromotion": {
        "type": "object",
        "properties": {
          "promotion_type": {
            "type": "string",
            "enum": [
              "discount",
              "volume-based",
              "fixed-price",
              "free-goods"
            ],
            "const": "discount"
          },
          "discount_type": {
            "type": "string",
            "enum": [
              "percentage",
              "fixed-amount"
            ]
          },
          "discount_percent": {
            "description": "'> 0' if discount_type = percentage, otherwise set 0.",
            "type": "number"
          },
          "discount_fixed_amount": {
            "description": "'> 0' if discount_type = fixed-amount, otherwise set 0.",
            "type": "integer"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/DiscountBasedPromotion",
          "description": "API reference for the DiscountBasedPromotion schema"
        },
        "required": [
          "promotion_type",
          "discount_type"
        ],
        "title": "DiscountBasedPromotion"
      },
      "DiscountCouponPromotion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CouponPromotionCommonDetail"
          },
          {
            "type": "object",
            "required": [
              "details",
              "applies_to_product"
            ],
            "properties": {
              "details": {
                "$ref": "#/components/schemas/DiscountRule"
              },
              "applies_to_product": {
                "enum": [
                  "all",
                  "product",
                  "category"
                ]
              }
            }
          }
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/DiscountCouponPromotion",
          "description": "API reference for the DiscountCouponPromotion schema"
        },
        "title": "DiscountCouponPromotion"
      },
      "DiscountRule": {
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/DiscountRule",
          "description": "API reference for the DiscountRule schema"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/PercentageDiscountRule"
          },
          {
            "$ref": "#/components/schemas/FixedAmountDiscountRule"
          }
        ],
        "title": "DiscountRule"
      },
      "Document": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "document_number": {
            "type": "string"
          },
          "kyc_document_id": {
            "type": "string",
            "writeOnly": true
          },
          "note": {
            "type": "string"
          },
          "file": {
            "description": "file attachment will be required or optional as per store setting.",
            "type": "string",
            "format": "binary",
            "writeOnly": true
          },
          "status": {
            "enum": [
              "submitted",
              "approved",
              "rejected",
              "expired"
            ],
            "readOnly": true
          },
          "title": {
            "type": "string",
            "readOnly": true
          },
          "file_url": {
            "type": "string",
            "readOnly": true
          },
          "verification_type": {
            "enum": [
              "automatic",
              "manual"
            ],
            "readOnly": true
          },
          "is_verified": {
            "type": "boolean",
            "readOnly": true
          },
          "verified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_by": {
            "enum": [
              "customer",
              "admin"
            ],
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_by": {
            "enum": [
              "customer",
              "admin"
            ],
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_reason": {
            "type": "string",
            "readOnly": true
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/Document",
          "description": "API reference for the Document schema"
        },
        "required": [
          "document_number",
          "kyc_document_id"
        ],
        "title": "Document",
        "x-tags": [
          "KYC"
        ]
      },
      "FixedAmountDiscountRule": {
        "type": "object",
        "properties": {
          "discount_type": {
            "type": "string",
            "const": "fixed-amount"
          },
          "fixed_discount_amount": {
            "type": "number"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "product_id",
                "variant_id",
                "minimum_quantity",
                "maximum_quantity",
                "minimum_value",
                "maximum_value"
              ],
              "properties": {
                "product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "minimum_quantity": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "maximum_quantity": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "minimum_value": {
                  "type": [
                    "number",
                    "null"
                  ]
                },
                "maximum_value": {
                  "type": [
                    "number",
                    "null"
                  ]
                }
              }
            }
          },
          "category_id": {
            "description": "Array of category ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/FixedAmountDiscountRule",
          "description": "API reference for the FixedAmountDiscountRule schema"
        },
        "required": [
          "discount_type",
          "fixed_discount_amount",
          "products",
          "category_id"
        ],
        "title": "FixedAmountDiscountRule"
      },
      "FixedPriceCouponPromotion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CouponPromotionCommonDetail"
          },
          {
            "type": "object",
            "required": [
              "details",
              "applies_to_product"
            ],
            "properties": {
              "details": {
                "$ref": "#/components/schemas/FixedPriceRule"
              },
              "applies_to_product": {
                "enum": [
                  "product"
                ]
              }
            }
          }
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/FixedPriceCouponPromotion",
          "description": "API reference for the FixedPriceCouponPromotion schema"
        },
        "title": "FixedPriceCouponPromotion"
      },
      "FixedPricePromotion": {
        "type": "object",
        "properties": {
          "promotion_type": {
            "type": "string",
            "enum": [
              "discount",
              "volume-based",
              "fixed-price",
              "free-goods"
            ],
            "const": "fixed-price",
            "readOnly": true
          },
          "offer_price": {
            "type": "number"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/FixedPricePromotion",
          "description": "API reference for the FixedPricePromotion schema"
        },
        "required": [
          "promotion_type",
          "offer_price"
        ],
        "title": "FixedPricePromotion"
      },
      "FixedPriceRule": {
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/FixedPriceRule",
          "description": "API reference for the FixedPriceRule schema"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/FixedPriceRuleBasedQuantity"
          },
          {
            "$ref": "#/components/schemas/FixedPriceRuleBasedAmount"
          }
        ],
        "title": "FixedPriceRule"
      },
      "FixedPriceRuleBasedAmount": {
        "type": "object",
        "properties": {
          "spending_criteria_type": {
            "type": "string",
            "const": "minimum-purchase-amount"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "product_id",
                "variant_id",
                "minimum_purchase_amount",
                "maximum_purchase_amount",
                "offer_price"
              ],
              "properties": {
                "product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "minimum_purchase_amount": {
                  "type": "number"
                },
                "maximum_purchase_amount": {
                  "description": "null means there is no limit.",
                  "type": [
                    "number",
                    "null"
                  ]
                },
                "offer_price": {
                  "type": "number"
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/FixedPriceRuleBasedAmount",
          "description": "API reference for the FixedPriceRuleBasedAmount schema"
        },
        "required": [
          "spending_criteria_type",
          "products"
        ],
        "title": "FixedPriceRuleBasedAmount"
      },
      "FixedPriceRuleBasedQuantity": {
        "type": "object",
        "properties": {
          "spending_criteria_type": {
            "type": "string",
            "const": "minimum-quantity"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "product_id",
                "variant_id",
                "minimum_quantity",
                "maximum_quantity",
                "offer_price"
              ],
              "properties": {
                "product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "minimum_quantity": {
                  "type": "integer",
                  "minimum": 1
                },
                "maximum_quantity": {
                  "description": "null means there is no limit.",
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "offer_price": {
                  "type": "number"
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/FixedPriceRuleBasedQuantity",
          "description": "API reference for the FixedPriceRuleBasedQuantity schema"
        },
        "required": [
          "spending_criteria_type",
          "products"
        ],
        "title": "FixedPriceRuleBasedQuantity"
      },
      "FreeGoodCouponPromotion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CouponPromotionCommonDetail"
          },
          {
            "type": "object",
            "required": [
              "details",
              "applies_to_product"
            ],
            "properties": {
              "details": {
                "$ref": "#/components/schemas/FreeGoodsRule"
              },
              "applies_to_product": {
                "enum": [
                  "product"
                ]
              }
            }
          }
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/FreeGoodCouponPromotion",
          "description": "API reference for the FreeGoodCouponPromotion schema"
        },
        "title": "FreeGoodCouponPromotion"
      },
      "FreeGoodsPromotion": {
        "type": "object",
        "properties": {
          "promotion_type": {
            "type": "string",
            "enum": [
              "discount",
              "volume-based",
              "fixed-price",
              "free-goods"
            ],
            "const": "free-goods",
            "readOnly": true
          },
          "buy_quantity": {
            "description": "The quantity of items a customer must buy to receive free goods.",
            "type": "integer"
          },
          "get_quantity": {
            "description": "The quantity of free goods the customer receives.",
            "type": "integer"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/FreeGoodsPromotion",
          "description": "API reference for the FreeGoodsPromotion schema"
        },
        "required": [
          "promotion_type",
          "buy_quantity",
          "get_quantity"
        ],
        "title": "FreeGoodsPromotion"
      },
      "FreeGoodsRule": {
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/FreeGoodsRule",
          "description": "API reference for the FreeGoodsRule schema"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/AutoScaleBasedOnQuantity"
          },
          {
            "$ref": "#/components/schemas/AutoScaleBasedOnAmount"
          },
          {
            "$ref": "#/components/schemas/CustomSlabsBasedOnQuantity"
          },
          {
            "$ref": "#/components/schemas/CustomSlabsBasedOnAmount"
          }
        ],
        "title": "FreeGoodsRule"
      },
      "FreeShipingCouponPromotion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CouponPromotionCommonDetail"
          }
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/FreeShipingCouponPromotion",
          "description": "API reference for the FreeShipingCouponPromotion schema"
        },
        "title": "FreeShipingCouponPromotion"
      },
      "FulfillmentPreference": {
        "enum": [
          "collect-in-store",
          "delivery"
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/FulfillmentPreference",
          "description": "API reference for the FulfillmentPreference schema"
        }
      },
      "GenerateOtpWithEmail": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "const": "email"
          },
          "email": {
            "type": "string"
          },
          "otp_action": {
            "type": "string",
            "enum": [
              "register",
              "reset-password",
              "verify-email",
              "update-email"
            ]
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/GenerateOtpWithEmail",
          "description": "API reference for the GenerateOtpWithEmail schema"
        },
        "required": [
          "channel",
          "email",
          "otp_action"
        ],
        "title": "GenerateOtpWithEmail"
      },
      "GenerateOtpWithPhone": {
        "type": "object",
        "properties": {
          "channel": {
            "enum": [
              "sms",
              "whatsapp"
            ]
          },
          "country_code": {
            "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.",
            "type": [
              "string",
              "null"
            ]
          },
          "phone": {
            "description": "10 digit phone number without country code.",
            "type": "string"
          },
          "otp_action": {
            "type": "string",
            "enum": [
              "register",
              "reset-password",
              "verify-phone",
              "update-phone"
            ]
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/GenerateOtpWithPhone",
          "description": "API reference for the GenerateOtpWithPhone schema"
        },
        "required": [
          "channel",
          "phone",
          "otp_action"
        ],
        "title": "GenerateOtpWithPhone"
      },
      "GstinDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/GstinDetail",
          "description": "API reference for the GstinDetail schema"
        },
        "title": "GstinDetail",
        "x-tags": [
          "KYC"
        ]
      },
      "InapplicableCoupon": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "coupon_type": {
            "$ref": "#/components/schemas/CouponType"
          },
          "coupon_code": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reason": {
            "type": "string"
          },
          "suggestion": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/InapplicableCoupon",
          "description": "API reference for the InapplicableCoupon schema"
        }
      },
      "InapplicablePromotion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "promotion_type": {
            "$ref": "#/components/schemas/PromotionType"
          },
          "reason": {
            "type": "string"
          },
          "suggestion": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/InapplicablePromotion",
          "description": "API reference for the InapplicablePromotion schema"
        }
      },
      "Item": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "string"
          },
          "variant_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "sku": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "product_name": {
            "type": "string"
          },
          "variant_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "product_type": {
            "type": "string",
            "enum": [
              "physical",
              "digital",
              "bundle"
            ],
            "examples": [
              "physical"
            ]
          },
          "short_description": {
            "type": [
              "string",
              "null"
            ]
          },
          "active": {
            "type": "boolean"
          },
          "stock_available": {
            "type": "boolean"
          },
          "backorder": {
            "description": "Indicates whether the item is being fulfilled as a backorder. When true, the item is not currently in stock and will ship later once inventory is available. This may result in the order being split into multiple shipments, with delays for the backordered portion.",
            "type": "boolean"
          },
          "on_offer": {
            "description": "Indicates whether this item is associated with any active (product-specific) coupons",
            "type": "boolean"
          },
          "on_subscription": {
            "type": "boolean"
          },
          "on_promotion": {
            "type": "boolean"
          },
          "category_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "reviews_count": {
            "type": "integer"
          },
          "reviews_rating_sum": {
            "type": [
              "number",
              "null"
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAttribute"
            }
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductImage"
            }
          },
          "pricing": {
            "$ref": "#/components/schemas/ProductPricing"
          },
          "promotion": {
            "$ref": "#/components/schemas/ProductPromotion"
          },
          "subscription": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSubscription"
            }
          },
          "associated_options": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AssociatedOption",
                "description": "Used when `variant_id` is not null."
              },
              {
                "type": "null",
                "description": "Null when `variant_id` is null."
              }
            ]
          },
          "shipping": {
            "$ref": "#/components/schemas/ProductShipping"
          },
          "inventory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LotBatchDetail"
            }
          }
        },
        "examples": [],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/Item",
          "description": "API reference for the Item schema"
        },
        "required": [
          "product_id",
          "variant_id",
          "sku",
          "slug",
          "product_name",
          "variant_name",
          "product_type",
          "short_description",
          "active",
          "stock_available",
          "on_offer",
          "on_subscription",
          "on_promotion",
          "category_ids",
          "tags",
          "reviews_count",
          "reviews_rating_sum",
          "attributes",
          "images",
          "pricing",
          "promotion",
          "subscription",
          "associated_options"
        ],
        "title": "SKU"
      },
      "JuspayCardPayload": {
        "type": "object",
        "properties": {
          "payment_gateway": {
            "const": "JUSPAY"
          },
          "card_number": {
            "type": "string"
          },
          "card_exp_year": {
            "type": "string"
          },
          "card_exp_month": {
            "type": "string"
          },
          "name_on_card": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/JuspayCardPayload",
          "description": "API reference for the JuspayCardPayload schema"
        },
        "required": [
          "payment_gateway"
        ],
        "title": "JuspayCardPayload"
      },
      "JuspayCreateCardResponse": {
        "type": "object",
        "properties": {
          "payment_gateway": {
            "const": "JUSPAY"
          },
          "card_token": {
            "type": "string"
          },
          "card_reference": {
            "type": "string"
          },
          "card_fingerprint": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/JuspayCreateCardResponse",
          "description": "API reference for the JuspayCreateCardResponse schema"
        },
        "required": [
          "payment_gateway"
        ],
        "title": "JuspayCreateCardResponse"
      },
      "JuspayCreateCustomerPayload": {
        "type": "object",
        "properties": {
          "user_id": {
            "description": "commercengine user id.",
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/JuspayCreateCustomerPayload",
          "description": "API reference for the JuspayCreateCustomerPayload schema"
        },
        "title": "JuspayCreateCustomerPayload"
      },
      "JuspayCreateOrderPayload": {
        "type": "object",
        "properties": {
          "order_number": {
            "type": "string"
          },
          "return_url": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/JuspayCreateOrderPayload",
          "description": "API reference for the JuspayCreateOrderPayload schema"
        },
        "title": "JuspayCreateOrderResponse"
      },
      "JuspayCustomer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "object": {
            "const": "customer"
          },
          "object_reference_id": {
            "type": "string"
          },
          "mobile_number": {
            "type": "string"
          },
          "email_address": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "date_created": {
            "type": "string"
          },
          "last_updated": {
            "type": "string"
          },
          "mobile_country_code": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/JuspayCustomer",
          "description": "API reference for the JuspayCustomer schema"
        },
        "title": "JuspayCustomer"
      },
      "JuspayOrder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "udf10": {
            "type": "string"
          },
          "udf9": {
            "type": "string"
          },
          "udf8": {
            "type": "string"
          },
          "udf7": {
            "type": "string"
          },
          "udf6": {
            "type": "string"
          },
          "udf5": {
            "type": "string"
          },
          "udf4": {
            "type": "string"
          },
          "udf3": {
            "type": "string"
          },
          "udf2": {
            "type": "string"
          },
          "udf1": {
            "type": "string"
          },
          "status_id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "return_url": {
            "type": "string"
          },
          "refunded": {
            "type": "boolean",
            "default": false
          },
          "product_id": {
            "type": "string"
          },
          "payment_links": {
            "type": "object",
            "properties": {
              "web": {
                "type": "string"
              },
              "mobile": {
                "type": "string"
              },
              "iframe": {
                "type": "string"
              }
            }
          },
          "order_id": {
            "type": "string"
          },
          "merchant_id": {
            "type": "string"
          },
          "juspay": {
            "type": "object",
            "properties": {
              "client_auth_token": {
                "type": "string"
              },
              "client_auth_token_expiry": {
                "type": "string"
              }
            }
          },
          "date_created": {
            "type": "string"
          },
          "customer_phone": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "customer_email": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "amount_refunded": {
            "type": "number",
            "format": "double"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/JuspayOrder",
          "description": "API reference for the JuspayOrder schema"
        },
        "title": "JuspayOrder"
      },
      "JuspayPaymentGatewayParams": {
        "type": "object",
        "properties": {
          "payment_gateway": {
            "type": "string",
            "default": "JUSPAY",
            "const": "JUSPAY"
          },
          "action": {
            "description": "`paymentPage` is the default option that you should select when using hyper-checkout",
            "type": "string",
            "enum": [
              "paymentPage",
              "paymentManagement"
            ]
          },
          "integration_type": {
            "description": "Use `hyper-checkout` for Juspay hosted checkout",
            "type": "string",
            "enum": [
              "hyper-checkout",
              "express-checkout"
            ]
          },
          "return_url": {
            "description": "This is the URL that the gateway will redirect to once payment processing is complete. This will be a GET request by default",
            "type": "string"
          },
          "gateway_reference_id": {
            "description": "The exact gateway reference ID that was set up in the integration",
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/JuspayPaymentGatewayParams",
          "description": "API reference for the JuspayPaymentGatewayParams schema"
        },
        "required": [
          "payment_gateway",
          "action",
          "integration_type",
          "return_url",
          "gateway_reference_id"
        ],
        "title": "JuspayPaymentGatewayParams"
      },
      "JuspayPaymentInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "order_id": {
            "type": "string"
          },
          "payment_links": {
            "type": "object",
            "properties": {
              "web": {
                "type": "string"
              },
              "expiry": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "sdk_payload": {
            "type": "object",
            "properties": {
              "requestId": {
                "type": "string"
              },
              "service": {
                "type": "string"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "clientId": {
                    "type": "string"
                  },
                  "merchantId": {
                    "type": "string"
                  },
                  "clientAuthToken": {
                    "type": "string"
                  },
                  "clientAuthTokenExpiry": {
                    "type": "string"
                  },
                  "environment": {
                    "type": "string"
                  },
                  "orderId": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  },
                  "action": {
                    "type": "string"
                  },
                  "customerId": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "returnUrl": {
                    "type": "string"
                  },
                  "customerPhone": {
                    "type": "string"
                  },
                  "customerEmail": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "options.createMandate": {
                    "description": "Use for taking consent of subscription payments. If this key is used it will ask user to give consent for subscription payment.\n",
                    "const": "REQUIRED"
                  },
                  "mandate.maxAmount": {
                    "description": "Maximum amount that can be charged in recurring payment.",
                    "type": "string"
                  },
                  "mandate.start_date ": {
                    "description": "subscription start time",
                    "type": "string"
                  },
                  "mandate.end_date ": {
                    "description": "subscription end time",
                    "type": "string"
                  },
                  "mandate.frequency": {
                    "description": "subscription frequency",
                    "const": "MONTHLY"
                  },
                  "mandate.rule_value ": {
                    "description": "When frequency is passed as WEEKLY, FORTNIGHTLY, MONTHLY, BIMONTHLY, QUARTERLY, HALFYEARLY, or YEARLY then is it required that the exact day of the period should be passed.\n\n1-7 when frequency is WEEKLY. In weekly, serial numbers start from Monday. Monday represents 1 and Sunday represents 7.\n\n1-16 when frequency is FORTNIGHTLY. This mandate is executed twice a month. First day of the month is represented by value '1' and ends with '15' on 15th day of the month. Then again starts with '1' for 16th of the month and ends with the last day of the month.\n\n1-31 when frequency is MONTHLY, BIMONTHLY, QUARTERLY, HALFYEARLY, or YEARLY.",
                    "type": "string",
                    "enum": [
                      "1-7",
                      "1-16",
                      "1-31"
                    ]
                  }
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/JuspayPaymentInfo",
          "description": "API reference for the JuspayPaymentInfo schema"
        },
        "title": "JuspayPaymentInfo"
      },
      "JuspayPaymentMethod": {
        "type": "object",
        "properties": {
          "payment_method_type": {
            "type": "string"
          },
          "payment_method": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/JuspayPaymentMethod",
          "description": "API reference for the JuspayPaymentMethod schema"
        },
        "title": "JuspayPaymentMethod"
      },
      "JuspaySavedCard": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/JuspaySavedCard",
          "description": "API reference for the JuspaySavedCard schema"
        },
        "title": "PayuSavedCard"
      },
      "KycDocument": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "document_type": {
            "enum": [
              "gst",
              "pan",
              "tin",
              "cin",
              "other"
            ]
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "active": {
            "type": "boolean",
            "default": true
          },
          "is_mandatory": {
            "type": "boolean"
          },
          "is_attachment_required": {
            "type": "boolean"
          },
          "verification_type": {
            "enum": [
              "auto",
              "manual"
            ]
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/KycDocument",
          "description": "API reference for the KycDocument schema"
        },
        "title": "KycDocument"
      },
      "KycDocumentConfig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "document_type": {
            "enum": [
              "gst",
              "pan",
              "other"
            ]
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "active": {
            "type": "boolean",
            "default": true
          },
          "is_mandatory": {
            "type": "boolean"
          },
          "is_attachment_required": {
            "type": "boolean"
          },
          "verification_type": {
            "enum": [
              "auto",
              "manual"
            ]
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/KycDocumentConfig",
          "description": "API reference for the KycDocumentConfig schema"
        },
        "required": [
          "id",
          "document_type",
          "title",
          "description",
          "active",
          "is_mandatory",
          "is_attachment_required",
          "verification_type"
        ],
        "title": "KycDocumentConfig"
      },
      "LotBatchDetail": {
        "type": "object",
        "properties": {
          "lot_batch": {
            "type": "string"
          },
          "mfg_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date"
          },
          "exp_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date"
          },
          "manufacturer": {
            "type": [
              "string",
              "null"
            ]
          },
          "stock_quantity": {
            "type": "integer"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/LotBatchDetail",
          "description": "API reference for the LotBatchDetail schema"
        },
        "required": [
          "lot_batch",
          "mfg_date",
          "exp_date",
          "manufacturer",
          "stock_quantity"
        ],
        "title": "LotBatchDetail"
      },
      "LoyaltyPointActivity": {
        "description": "Loyalty Point Activity",
        "type": "object",
        "properties": {
          "activity_type": {
            "type": "string",
            "enum": [
              "earned",
              "redeemed"
            ]
          },
          "activity": {
            "const": "order"
          },
          "reference_number": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "loyalty_point": {
            "type": "integer"
          },
          "remarks": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/LoyaltyPointActivity",
          "description": "API reference for the LoyaltyPointActivity schema"
        },
        "title": "LoyaltyPointActivity"
      },
      "MeasurementUnit": {
        "type": "object",
        "properties": {
          "weight": {
            "enum": [
              "gm"
            ]
          },
          "dimension": {
            "enum": [
              "cm"
            ]
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/MeasurementUnit",
          "description": "API reference for the MeasurementUnit schema"
        },
        "title": "MeasurementUnit"
      },
      "MultiSelectAttribute": {
        "description": "Attribute for multi-select values",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "key": {
            "description": "A lookup safe version of the name that is lowercased and spaces are replaced with underscores. For instance, if name is `Product Type`, key will be `product_type`",
            "type": "string"
          },
          "type": {
            "type": "string",
            "example": "multi-select"
          },
          "value": {
            "description": "For multi-select attributes",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/MultiSelectAttribute",
          "description": "API reference for the MultiSelectAttribute schema"
        },
        "readOnly": true,
        "required": [
          "id",
          "name",
          "key",
          "type",
          "value"
        ],
        "title": "MultiSelectAttribute"
      },
      "NetbankingPayment": {
        "description": "Payments using payment gateway netbanking option.",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentInfo"
          },
          {
            "type": "object",
            "properties": {
              "bank_name": {
                "type": "string"
              }
            }
          }
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/NetbankingPayment",
          "description": "API reference for the NetbankingPayment schema"
        },
        "title": "NetbankingPayment"
      },
      "NotificationChannelPreferences": {
        "description": "Set specific channel preferences",
        "type": "object",
        "properties": {
          "email": {
            "description": "Indicates whether the user has opted to receive notifications via email.",
            "type": "boolean"
          },
          "sms": {
            "description": "Indicates whether the user has opted to receive notifications via SMS.",
            "type": "boolean"
          },
          "whatsapp": {
            "description": "Indicates whether the user has opted to receive notifications via WhatsApp.",
            "type": "boolean"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/NotificationChannelPreferences",
          "description": "API reference for the NotificationChannelPreferences schema"
        },
        "required": [
          "email",
          "sms",
          "whatsapp"
        ],
        "title": "NotificationChannelPreferences"
      },
      "NotificationPreferences": {
        "description": "Set channel preferences for each type of ",
        "type": "object",
        "properties": {
          "transactional": {
            "description": "These notifications are typically critical for user engagement, providing updates, confirmations, or alerts related to their account activities.",
            "$ref": "#/components/schemas/NotificationChannelPreferences"
          },
          "promotional": {
            "description": "These notifications aim to engage users with promotional content and enhance their overall experience with the platform.",
            "$ref": "#/components/schemas/NotificationChannelPreferences"
          },
          "newsletter": {
            "description": "These notifications are often sent periodically as part of a subscription service.\n",
            "$ref": "#/components/schemas/NotificationChannelPreferences"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/NotificationPreferences",
          "description": "API reference for the NotificationPreferences schema"
        },
        "required": [
          "transactional",
          "promotional",
          "newsletter"
        ],
        "title": "NotificationPreferences"
      },
      "NumberAttribute": {
        "description": "Attribute for numeric values",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "key": {
            "description": "A lookup safe version of the name that is lowercased and spaces are replaced with underscores. For instance, if name is `Product Type`, key will be `product_type`",
            "type": "string"
          },
          "type": {
            "type": "string",
            "example": "number"
          },
          "value": {
            "description": "For numeric attributes",
            "type": "number"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/NumberAttribute",
          "description": "API reference for the NumberAttribute schema"
        },
        "readOnly": true,
        "required": [
          "id",
          "name",
          "key",
          "type",
          "value"
        ],
        "title": "NumberAttribute"
      },
      "Order": {
        "type": "object",
        "properties": {
          "order_number": {
            "type": "string"
          },
          "order_date": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "awaiting_approval",
              "confirmed",
              "partially_scheduled",
              "awaiting_shipment",
              "shipped",
              "partially_shipped",
              "undelivered",
              "partially_undelivered",
              "return_to_origin",
              "partially_return_to_origin",
              "complete",
              "partially_delivered",
              "cancelled",
              "pending"
            ]
          },
          "payment_status": {
            "type": "string",
            "enum": [
              "pending",
              "success",
              "failed",
              "partially_paid"
            ]
          },
          "payment_success_date": {
            "type": [
              "string",
              "null"
            ]
          },
          "customer_note": {
            "type": [
              "string",
              "null"
            ]
          },
          "is_promotion_applied": {
            "type": "boolean"
          },
          "promotion_discount_amount": {
            "type": "number",
            "format": "double"
          },
          "promotion_discount_percent": {
            "type": "number",
            "format": "double"
          },
          "is_coupon_applied": {
            "type": "boolean"
          },
          "coupon_code": {
            "type": [
              "string",
              "null"
            ]
          },
          "coupon_discount_amount": {
            "type": "number",
            "format": "double"
          },
          "coupon_discount_percent": {
            "type": "number",
            "format": "double"
          },
          "applied_promotions": {
            "description": "Information about the promotional offers that have been applied to the cart.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppliedPromotion"
            }
          },
          "applied_coupons": {
            "description": "This key provides details about the savings in cart after coupon have been applied to the cart.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppliedCoupon"
            }
          },
          "promotion_savings": {
            "type": "number",
            "format": "float",
            "minimum": 0
          },
          "coupon_savings": {
            "type": "number",
            "format": "float",
            "minimum": 0
          },
          "other_savings": {
            "type": "number",
            "format": "float",
            "minimum": 0
          },
          "total_savings": {
            "type": "number",
            "format": "float",
            "minimum": 0
          },
          "on_subscription": {
            "type": "boolean"
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          },
          "item_total_tax": {
            "type": "number",
            "format": "double"
          },
          "subtotal_including_tax": {
            "type": "number",
            "format": "double"
          },
          "shipping_estimated_cost": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "shipping_discount_amount": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "shipping_amount": {
            "type": "number",
            "format": "double"
          },
          "shipping_tax_rate": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "shipping_tax_amount": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "shipping_amount_including_tax": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "shipping_provider_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "shipping_provider_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "courier_company_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "courier_company_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "estimated_delivery_days": {
            "type": [
              "integer",
              "null"
            ]
          },
          "handling_charge_excluding_tax": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "handling_charge_tax_amount": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "handling_charge_including_tax": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "total_tax": {
            "type": "number",
            "format": "double"
          },
          "grand_total": {
            "type": "number",
            "format": "double"
          },
          "loyalty_points_earned": {
            "type": "integer",
            "minimum": 0
          },
          "loyalty_points_redeemed": {
            "type": "integer",
            "minimum": 0
          },
          "credit_balance_used": {
            "type": "integer"
          },
          "to_be_paid": {
            "type": "number",
            "format": "double"
          },
          "order_items_count": {
            "type": "integer"
          },
          "order_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          },
          "billing_address": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "shipping_address": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "currency": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "code": {
                "type": "string"
              },
              "symbol": {
                "type": "string"
              }
            }
          },
          "metadata": {
            "description": "Additional metadata associated with the order.",
            "type": [
              "object",
              "null"
            ],
            "additionalProperties": {
              "type": "string"
            }
          },
          "is_cancellation_allowed": {
            "description": "order cancellation option should be visible only if this flag is true.",
            "type": "boolean"
          },
          "cancellation_refund_details": {
            "description": "to show refundable details in order cancellation ui.",
            "type": "object",
            "properties": {
              "loyalty_point": {
                "description": "loyalty point redeemed will be rollbacked and credited to user account.",
                "type": "integer"
              },
              "refundable_amount": {
                "description": "amount that will be refunded to customer.",
                "type": "number"
              },
              "cancellation_charges": {
                "description": "amount deducted from paid amount.",
                "type": "number"
              },
              "cancellation_charges_reason": {
                "description": "reason for cancellation charges.",
                "type": "string"
              },
              "payment_mode": {
                "description": "payment mode for refund.",
                "type": "string",
                "enum": [
                  "original-payment-mode",
                  "bank-transfer"
                ]
              }
            }
          },
          "feedback": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/Order",
          "description": "API reference for the Order schema"
        },
        "required": [
          "applied_promotions",
          "applied_coupons"
        ],
        "title": "Order"
      },
      "OrderDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Order"
          },
          {
            "type": "object",
            "properties": {
              "payments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrderPayment"
                }
              }
            }
          }
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/OrderDetail",
          "description": "API reference for the OrderDetail schema"
        },
        "title": "OrderDetail"
      },
      "OrderItem": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "string"
          },
          "product_name": {
            "type": "string"
          },
          "product_image_url": {
            "type": [
              "string",
              "null"
            ]
          },
          "product_type": {
            "enum": [
              "physical",
              "digital",
              "bundle"
            ]
          },
          "sku": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "variant_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "variant_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "backorder": {
            "description": "\nbackorder\n\nIndicates whether the item is being fulfilled as a backorder. When true, the item is not currently in stock and will ship later once inventory is available. This may result in the order being split into multiple shipments, with delays for the backordered portion.",
            "type": "boolean"
          },
          "on_offer": {
            "type": "boolean"
          },
          "on_promotion": {
            "type": "boolean"
          },
          "on_subscription": {
            "type": "boolean"
          },
          "subscription_plan": {
            "type": [
              "string",
              "null"
            ]
          },
          "subscription_interval": {
            "type": [
              "integer",
              "null"
            ]
          },
          "subscription_frequency": {
            "type": [
              "string",
              "null"
            ]
          },
          "quantity": {
            "type": "integer",
            "minimum": 0
          },
          "free_quantity": {
            "type": "integer",
            "minimum": 0
          },
          "is_free_item": {
            "type": "boolean"
          },
          "price_including_tax": {
            "type": "boolean"
          },
          "selling_price": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "listing_price": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "selling_price_excluding_tax": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "promotion_discount_amount": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "coupon_discount_amount": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "tax_type": {
            "type": "string",
            "default": "GST",
            "const": "GST",
            "examples": [
              "GST"
            ]
          },
          "tax_rate": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "tax_amount": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "handling_charge_excluding_tax": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "handling_charge_tax_rate": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "handling_charge_including_tax": {
            "type": "number",
            "format": "double",
            "minimum": 0
          },
          "associated_options": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AssociatedOption",
                "description": "Used when `variant_id` is not null."
              },
              {
                "type": "null",
                "description": "Null when `variant_id` is null."
              }
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAttribute"
            }
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/OrderItem",
          "description": "API reference for the OrderItem schema"
        },
        "required": [
          "product_id",
          "product_name",
          "product_image_url",
          "product_type",
          "sku",
          "slug",
          "variant_id",
          "variant_name",
          "backorder",
          "on_offer",
          "on_promotion",
          "on_subscription",
          "subscription_plan",
          "subscription_interval",
          "subscription_frequency",
          "quantity",
          "free_quantity",
          "is_free_item",
          "price_including_tax",
          "selling_price",
          "listing_price",
          "selling_price_excluding_tax",
          "promotion_discount_amount",
          "coupon_discount_amount",
          "tax_type",
          "tax_rate",
          "tax_amount",
          "handling_charge_excluding_tax",
          "handling_charge_tax_rate",
          "handling_charge_including_tax"
        ]
      },
      "OrderList": {
        "description": "order list model",
        "type": "object",
        "properties": {
          "order_number": {
            "description": "Unique number associated with the order.",
            "type": "string"
          },
          "order_date": {
            "description": "Date and time when the order was placed.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "Current status of the order (e.g., \"pending,\" \"processing,\" \"shipped,\" etc.).",
            "type": "string",
            "enum": [
              "draft",
              "awaiting_approval",
              "confirmed",
              "partially_scheduled",
              "awaiting_shipment",
              "shipped",
              "partially_shipped",
              "undelivered",
              "partially_undelivered",
              "return_to_origin",
              "partially_return_to_origin",
              "complete",
              "partially_delivered",
              "cancelled"
            ]
          },
          "payment_status": {
            "description": "Current payment status of the order (e.g., \"pending,\" \"success,\" \"failed\").",
            "type": "string",
            "enum": [
              "pending",
              "success",
              "failed",
              "partially_paid"
            ]
          },
          "payment_success_date": {
            "description": "Date and time when the payment for the order was successfully processed.",
            "type": "string",
            "format": "date-time"
          },
          "has_refund": {
            "description": "Indicates whether the order has a refund associated with it or not.",
            "type": "boolean"
          },
          "on_subscription": {
            "description": "Indicates whether the order includes subscription items.",
            "type": "boolean"
          },
          "grand_total": {
            "description": "Total amount for the order, including all items, taxes, and discounts.",
            "type": "number",
            "format": "double"
          },
          "loyalty_point_redeemed": {
            "description": "Number of loyalty points redeemed in the order.",
            "type": "integer"
          },
          "credit_balance_used": {
            "description": "Amount of credit balance used in the order.",
            "type": "integer"
          },
          "to_be_paid": {
            "description": "Amount remaining to be paid for the order.",
            "type": "number",
            "format": "double"
          },
          "order_items_count": {
            "description": "Total count of items included in the order.",
            "type": "integer"
          },
          "order_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          },
          "customer_note": {
            "type": [
              "string",
              "null"
            ]
          },
          "loyalty_point_earned": {
            "type": "integer"
          },
          "currency": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "code": {
                "type": "string"
              },
              "symbol": {
                "type": "string"
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/OrderList",
          "description": "API reference for the OrderList schema"
        },
        "title": "OrderList"
      },
      "OrderPayment": {
        "description": "Order Payment",
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/OrderPayment",
          "description": "API reference for the OrderPayment schema"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/CardPayment"
          },
          {
            "$ref": "#/components/schemas/NetbankingPayment"
          },
          {
            "$ref": "#/components/schemas/UpiPayment"
          },
          {
            "$ref": "#/components/schemas/WalletPayment"
          },
          {
            "$ref": "#/components/schemas/BankTransfer"
          }
        ],
        "title": "OrderPayment"
      },
      "OrderRefund": {
        "description": "Order refund model",
        "type": "object",
        "properties": {
          "request_number": {
            "type": "string"
          },
          "refund_amount": {
            "type": "number",
            "format": "double"
          },
          "refund_date": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "approved",
              "success",
              "failed"
            ]
          },
          "payment_mode": {
            "type": "string",
            "enum": [
              "PaymentGateway",
              "ClubAI",
              "BankTransfer"
            ]
          },
          "payment_method": {
            "type": "string"
          },
          "payment_reference_number": {
            "type": "string"
          },
          "bank_account_number": {
            "type": "string"
          },
          "bank_name": {
            "type": "string"
          },
          "refund_remarks": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/OrderRefund",
          "description": "API reference for the OrderRefund schema"
        },
        "title": "OrderRefund"
      },
      "OrderReturn": {
        "type": "object",
        "properties": {
          "request_number": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "return_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderReturnItem"
            }
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          },
          "shipping_amount": {
            "type": "number",
            "format": "double"
          },
          "total_tax": {
            "type": "number",
            "format": "double"
          },
          "grand_total": {
            "type": "number",
            "format": "double"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "approved_at": {
            "type": "string",
            "format": "date-time"
          },
          "shipped_at": {
            "type": "string",
            "format": "date-time"
          },
          "received_at": {
            "type": "string",
            "format": "date-time"
          },
          "original_order_number": {
            "type": "string"
          },
          "original_order_delivered_at": {
            "type": "string",
            "format": "date-time"
          },
          "replacement_order_number": {
            "type": "string"
          },
          "replacement_order_date": {
            "type": "string",
            "format": "date-time"
          },
          "replacement_order_amount": {
            "type": "number",
            "format": "double"
          },
          "refund": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderRefund"
            }
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/OrderReturn",
          "description": "API reference for the OrderReturn schema"
        },
        "title": "OrderReturn"
      },
      "OrderReturnItem": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "string"
          },
          "product_name": {
            "type": "string",
            "readOnly": true
          },
          "product_image_url": {
            "type": "string",
            "readOnly": true
          },
          "sku": {
            "type": "string"
          },
          "selling_price": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "tax_type": {
            "type": "string",
            "const": "GST",
            "readOnly": true
          },
          "tax_rate": {
            "type": "number",
            "readOnly": true
          },
          "quantity": {
            "type": "integer"
          },
          "resolution": {
            "type": "string",
            "enum": [
              "refund",
              "replacement"
            ]
          },
          "return_reason": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/OrderReturnItem",
          "description": "API reference for the OrderReturnItem schema"
        },
        "required": [
          "product_id",
          "sku",
          "quantity",
          "resolution",
          "return_reason"
        ],
        "title": "OrderReturnItem"
      },
      "OrderShipment": {
        "description": "Order shipment model",
        "type": "object",
        "properties": {
          "reference_number": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "unscheduled",
              "schedule_requested",
              "scheduled",
              "packed",
              "shipped",
              "in_transit",
              "out_for_delivery",
              "delivery_attempted",
              "undelivered",
              "return_to_origin",
              "delivered",
              "cancelled"
            ]
          },
          "total_weight": {
            "type": "number"
          },
          "total_boxes": {
            "type": "integer"
          },
          "shipment_items_count": {
            "type": "integer"
          },
          "shipment_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentItem"
            }
          },
          "shipping_amount": {
            "type": "number",
            "format": "double"
          },
          "shipping_tax_amount": {
            "type": "number",
            "format": "double"
          },
          "shipping_amount_including_tax": {
            "type": "number",
            "format": "double"
          },
          "courier_company_name": {
            "type": "string"
          },
          "shipping_label_url": {
            "type": "string"
          },
          "awb_no": {
            "type": "string"
          },
          "tracking_url": {
            "type": "string"
          },
          "eta_delivery": {
            "type": "string"
          },
          "shipped_date": {
            "type": "string",
            "format": "date-time"
          },
          "delivered_date": {
            "type": "string",
            "format": "date-time"
          },
          "cancellation_reason": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/OrderShipment",
          "description": "API reference for the OrderShipment schema"
        },
        "title": "OrderShipment"
      },
      "Pagination": {
        "description": "pagination metadata structure",
        "type": "object",
        "properties": {
          "total_records": {
            "type": "integer"
          },
          "total_pages": {
            "type": "integer"
          },
          "previous_page": {
            "type": [
              "integer",
              "null"
            ]
          },
          "limit": {
            "type": "integer"
          },
          "next_page": {
            "type": [
              "integer",
              "null"
            ]
          }
        },
        "examples": [
          {
            "total_records": 252,
            "total_pages": 26,
            "previous_page": null,
            "next_page": 2,
            "limit": 10
          }
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/Pagination",
          "description": "API reference for the Pagination schema"
        },
        "required": [
          "total_records",
          "total_pages",
          "limit",
          "next_page"
        ]
      },
      "PanDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PanDetail",
          "description": "API reference for the PanDetail schema"
        },
        "title": "PanDetail",
        "x-tags": [
          "KYC"
        ]
      },
      "PartialCollectAndDelivery": {
        "type": "object",
        "properties": {
          "fulfillment_type": {
            "type": "string",
            "const": "partial-collect-and-delivery"
          },
          "preferences": {
            "type": "object",
            "properties": {
              "pickup": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "product_id",
                    "product_name",
                    "variant_id",
                    "variant_name",
                    "quantity"
                  ],
                  "properties": {
                    "product_id": {
                      "type": "string"
                    },
                    "product_name": {
                      "type": "string",
                      "readOnly": true
                    },
                    "variant_id": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "variant_name": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "readOnly": true
                    },
                    "quantity": {
                      "type": "integer"
                    }
                  }
                }
              },
              "delivery": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "product_id",
                    "product_name",
                    "variant_id",
                    "variant_name",
                    "quantity"
                  ],
                  "properties": {
                    "product_id": {
                      "type": "string"
                    },
                    "product_name": {
                      "type": "string",
                      "readOnly": true
                    },
                    "variant_id": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "variant_name": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "readOnly": true
                    },
                    "quantity": {
                      "type": "integer"
                    }
                  }
                }
              },
              "shipping_address": {
                "$ref": "#/components/schemas/CustomerAddress"
              }
            },
            "required": [
              "pickup",
              "delivery",
              "shipping_address"
            ]
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PartialCollectAndDelivery",
          "description": "API reference for the PartialCollectAndDelivery schema"
        },
        "required": [
          "fulfillment_type",
          "preferences"
        ],
        "title": "PartialCollectAndDelivery"
      },
      "PauseSubscription": {
        "type": "object",
        "properties": {
          "command": {
            "description": "To pause an active subscription.",
            "type": "string",
            "const": "pause"
          },
          "pause_start_date": {
            "description": "optional. if specified, subscription will be paused from this date & time. If not specified, subscription will be paused immediately. datetime value should be greater than current time.",
            "type": "string",
            "format": "date-time"
          },
          "pause_end_date": {
            "description": "optional. if specified, subscription will be activated automatically from this date & time. If not specified, subscription will remain paused. datetime value should be greater than current time.",
            "type": "string",
            "format": "date-time"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PauseSubscription",
          "description": "API reference for the PauseSubscription schema"
        },
        "required": [
          "command"
        ],
        "title": "PauseSubscription",
        "x-tags": [
          "Subscriptions"
        ]
      },
      "PayWithCard": {
        "type": "object",
        "properties": {
          "payment_mode": {
            "type": "string",
            "const": "CARD"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PayWithCard",
          "description": "API reference for the PayWithCard schema"
        },
        "required": [
          "payment_mode"
        ],
        "title": "PayWithCard"
      },
      "PayWithCash": {
        "type": "object",
        "properties": {
          "payment_mode": {
            "type": "string",
            "const": "CASH"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PayWithCash",
          "description": "API reference for the PayWithCash schema"
        },
        "required": [
          "payment_mode"
        ],
        "title": "PayWithCash"
      },
      "PayWithPaymentGateway": {
        "type": "object",
        "properties": {
          "payment_mode": {
            "type": "string",
            "const": "PG"
          },
          "payment_gateway": {
            "$ref": "#/components/schemas/PaymentGateway"
          },
          "payment_gateway_params": {
            "$ref": "#/components/schemas/PaymentGatewayParams"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PayWithPaymentGateway",
          "description": "API reference for the PayWithPaymentGateway schema"
        },
        "required": [
          "payment_mode",
          "payment_gateway",
          "payment_gateway_params"
        ],
        "title": "PayWithPaymentGateway"
      },
      "PayWithUpi": {
        "type": "object",
        "properties": {
          "payment_mode": {
            "type": "string",
            "const": "UPI"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PayWithUPI",
          "description": "API reference for the PayWithUPI schema"
        },
        "required": [
          "payment_mode"
        ],
        "title": "PayWithUPI"
      },
      "PaymentGateway": {
        "type": "string",
        "enum": [
          "PAYU",
          "JUSPAY"
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PaymentGateway",
          "description": "API reference for the PaymentGateway schema"
        }
      },
      "PaymentGatewayParams": {
        "discriminator": {
          "propertyName": "payment_gateway",
          "mapping": {
            "PAYU": "#/components/schemas/PayuPaymentGatewayParams",
            "JUSPAY": "#/components/schemas/JuspayPaymentGatewayParams"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PaymentGatewayParams",
          "description": "API reference for the PaymentGatewayParams schema"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/PayuPaymentGatewayParams"
          },
          {
            "$ref": "#/components/schemas/JuspayPaymentGatewayParams"
          }
        ]
      },
      "PaymentInfo": {
        "description": "Common fields in all types of payments.",
        "type": "object",
        "properties": {
          "transaction_type": {
            "type": "string",
            "enum": [
              "payment",
              "refund"
            ]
          },
          "request_number": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "payment_status": {
            "type": "string",
            "enum": [
              "pending",
              "success",
              "failed",
              "partially_paid",
              "refund_initiated"
            ]
          },
          "payment_date": {
            "type": "string",
            "format": "date-time"
          },
          "payment_reference_number": {
            "type": [
              "string",
              "null"
            ]
          },
          "payment_method": {
            "type": [
              "string",
              "null"
            ]
          },
          "icon_url": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PaymentInfo",
          "description": "API reference for the PaymentInfo schema"
        },
        "title": "PaymentInfo"
      },
      "PayuCardPayload": {
        "type": "object",
        "properties": {
          "payment_gateway": {
            "const": "PAYU"
          },
          "card_number": {
            "type": "string"
          },
          "card_exp_year": {
            "type": "string"
          },
          "card_exp_month": {
            "type": "string"
          },
          "name_on_card": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "card_mode": {
            "type": "string",
            "enum": [
              "CC",
              "DC"
            ]
          },
          "card_type": {
            "type": "string",
            "enum": [
              "VISA",
              "MAST",
              "RUPAY"
            ]
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PayuCardPayload",
          "description": "API reference for the PayuCardPayload schema"
        },
        "required": [
          "payment_gateway"
        ],
        "title": "PayuCardPayload"
      },
      "PayuCreateCardResponse": {
        "type": "object",
        "properties": {
          "payment_gateway": {
            "const": "PAYU"
          },
          "status": {
            "type": "string"
          },
          "msg": {
            "type": "string"
          },
          "cardToken": {
            "type": "string"
          },
          "card_number": {
            "type": "string"
          },
          "card_label": {
            "type": "string"
          },
          "network_token": {
            "type": "string"
          },
          "issuer_token": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PayuCreateCardResponse",
          "description": "API reference for the PayuCreateCardResponse schema"
        },
        "required": [
          "payment_gateway"
        ],
        "title": "PayuCreateCardResponse"
      },
      "PayuPaymentGatewayParams": {
        "type": "object",
        "properties": {
          "payment_gateway": {
            "type": "string",
            "default": "PAYU",
            "const": "PAYU"
          },
          "furl": {
            "type": "string"
          },
          "surl": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PayuPaymentGatewayParams",
          "description": "API reference for the PayuPaymentGatewayParams schema"
        },
        "required": [
          "payment_gateway",
          "furl",
          "surl"
        ],
        "title": "PayuPaymentGatewayParams"
      },
      "PayuPaymentInfo": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "txnid": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "productinfo": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "si": {
            "description": "To be used in case we want to take consent for subscription payment.\nTo create consent for subscription, value of this parameter must be 1.",
            "const": 1
          },
          "si_details": {
            "description": "Send this json object for creating subscription consent.",
            "type": "object",
            "properties": {
              "billingAmount": {
                "description": "Maximum amount that can be charged in recurring payment.",
                "type": "number",
                "format": "double"
              },
              "billingCurrency": {
                "const": "INR"
              },
              "billingCycle": {
                "description": "Subscription frequency.",
                "const": "MONTHLY"
              },
              "billingInterval": {
                "description": "Billing Interval is closely coupled with the billingCycle field and denotes at what frequency, the subscription plan needs to be executed. For monthly subscriptions, parameter values need to be sent in the request are:\nbillingCycle = MONTHLY\nbillingInterval = 1\nSimilarly, by keeping the following values, customer will be charged once in every 3 days:\nbillingCycle = DAILY\nbillingInterval = 3",
                "type": "integer"
              },
              "paymentStartDate": {
                "description": "subscription start date",
                "type": "string",
                "format": "date"
              },
              "paymentEndDate": {
                "description": "subscription end date",
                "type": "string",
                "format": "date"
              }
            }
          },
          "furl": {
            "description": "return url in case of payment failure.",
            "type": "string"
          },
          "surl": {
            "description": "return url in case of payment success.",
            "type": "string"
          },
          "hash": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PayuPaymentInfo",
          "description": "API reference for the PayuPaymentInfo schema"
        },
        "title": "PayuPaymentInfo"
      },
      "PayuPaymentMethod": {
        "type": "object",
        "properties": {
          "payment_method": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "is_subscription_enabled": {
            "type": "boolean"
          },
          "options": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "icon_url": {
                  "type": "string"
                },
                "pg": {
                  "type": "string"
                },
                "bankcode": {
                  "type": "string"
                },
                "is_subscription_enabled": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PayuPaymentMethod",
          "description": "API reference for the PayuPaymentMethod schema"
        },
        "title": "PayuPaymentMethod"
      },
      "PayuSavedCard": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PayuSavedCard",
          "description": "API reference for the PayuSavedCard schema"
        },
        "title": "JuspaySavedCard"
      },
      "PercentageDiscountRule": {
        "type": "object",
        "properties": {
          "discount_type": {
            "type": "string",
            "const": "percentage"
          },
          "discount_percent": {
            "type": "number"
          },
          "maximum_discount_amount": {
            "type": [
              "number",
              "null"
            ]
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "product_id",
                "variant_id",
                "minimum_quantity",
                "maximum_quantity",
                "minimum_value",
                "maximum_value"
              ],
              "properties": {
                "product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "minimum_quantity": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "maximum_quantity": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "minimum_value": {
                  "type": [
                    "number",
                    "null"
                  ]
                },
                "maximum_value": {
                  "type": [
                    "number",
                    "null"
                  ]
                }
              }
            }
          },
          "category_id": {
            "description": "Array of category ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PercentageDiscountRule",
          "description": "API reference for the PercentageDiscountRule schema"
        },
        "required": [
          "discount_type",
          "discount_percent",
          "maximum_discount_amount",
          "products",
          "category_id"
        ],
        "title": "PercentageDiscountRule"
      },
      "Pincode": {
        "description": "Pincode model",
        "type": "object",
        "properties": {
          "pincode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state_name": {
            "type": "string"
          },
          "country_name": {
            "type": "string"
          },
          "country_iso_code": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/Pincode",
          "description": "API reference for the Pincode schema"
        },
        "title": "Pincode"
      },
      "PincodeServiceability": {
        "type": "object",
        "properties": {
          "is_serviceable": {
            "type": "boolean"
          },
          "shipping_methods": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "shipping_type": {
                  "enum": [
                    "auto",
                    "manual"
                  ]
                },
                "shipping_amount": {
                  "description": "shipping amount of manual method or as per recommened courier or range of min-max shipping amount.",
                  "type": "string"
                },
                "estimated_delivery_days": {
                  "description": "estimated delivery days of manual method or as per recommened courier or range of min-max estimated delivery days.",
                  "type": "string"
                },
                "courier_companies": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": [
                          "string",
                          "number"
                        ]
                      },
                      "name": {
                        "type": "string"
                      },
                      "shipping_amount": {
                        "type": "number"
                      },
                      "estimated_delivery_days": {
                        "type": "string"
                      },
                      "is_recommended": {
                        "type": "boolean"
                      },
                      "is_hyperlocal": {
                        "type": "boolean"
                      },
                      "mode": {
                        "enum": [
                          "air",
                          "surface"
                        ]
                      },
                      "rating": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PincodeServiceability",
          "description": "API reference for the PincodeServiceability schema"
        },
        "required": [
          "is_serviceable",
          "shipping_methods"
        ],
        "title": "PincodeServiceability"
      },
      "PosDevice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "device_type": {
            "enum": [
              "pos-terminal"
            ]
          },
          "external_device_id": {
            "description": "A Device ID shared by POS device provider.",
            "type": "string",
            "readOnly": true
          },
          "vendor": {
            "type": "string"
          },
          "model_number": {
            "type": "string"
          },
          "mac_address": {
            "type": [
              "string",
              "null"
            ]
          },
          "location_id": {
            "type": "string"
          },
          "location_name": {
            "type": "string",
            "readOnly": true
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PosDevice",
          "description": "API reference for the PosDevice schema"
        },
        "title": "PosDevice"
      },
      "PosLocation": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "description": "warehouse id",
            "type": "string",
            "readOnly": true
          },
          "name": {
            "description": "legal name",
            "type": "string"
          },
          "warehouse_type": {
            "enum": [
              "retail-store",
              "distribution-center"
            ]
          },
          "active": {
            "type": "boolean",
            "default": true
          },
          "gstin": {
            "type": [
              "string",
              "null"
            ]
          },
          "city": {
            "type": "string"
          },
          "address_line1": {
            "type": "string"
          },
          "address_line2": {
            "type": [
              "string",
              "null"
            ]
          },
          "landmark": {
            "type": [
              "string",
              "null"
            ]
          },
          "pincode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "country_code": {
            "type": "string",
            "default": "+91"
          },
          "contact_phone": {
            "description": "10 digit number without country code.",
            "type": "number"
          },
          "contact_email": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "image_url": {
            "type": [
              "string",
              "null"
            ]
          },
          "seller_warehouse_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "can_receive_stock": {
            "type": "boolean"
          },
          "can_ship_parcel": {
            "type": "boolean"
          },
          "can_collect": {
            "type": "boolean"
          },
          "is_checkout_point": {
            "description": "this field will be always true for warehouse_type = retail-store.",
            "type": "boolean"
          },
          "accepts_returns": {
            "type": "boolean"
          },
          "opening_hours": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PosLocation",
          "description": "API reference for the PosLocation schema"
        },
        "required": [
          "name",
          "warehouse_type",
          "city",
          "address_line1",
          "pincode",
          "state",
          "country",
          "contact_phone",
          "contact_email",
          "can_receive_stock",
          "can_ship_parcel",
          "can_collect",
          "is_checkout_point",
          "accepts_returns"
        ],
        "title": "PosLocation",
        "x-tags": [
          "Store"
        ]
      },
      "PosUpdateCustomerWithEmail": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "description": "10 digit phone number without country code.",
            "type": [
              "string",
              "null"
            ]
          },
          "country_code": {
            "description": "Two-letter code begin with a plus sign prefix that identifies different countries.",
            "type": [
              "string",
              "null"
            ],
            "example": "+91"
          },
          "first_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "last_name": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PosUpdateCustomerWithEmail",
          "description": "API reference for the PosUpdateCustomerWithEmail schema"
        },
        "required": [
          "email"
        ],
        "title": "UpdateCustomerWithEmail"
      },
      "PosUpdateCustomerWithId": {
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PosUpdateCustomerWithId",
          "description": "API reference for the PosUpdateCustomerWithId schema"
        },
        "required": [
          "customer_id"
        ],
        "title": "UpdateCustomerWithId"
      },
      "PosUpdateCustomerWithPhone": {
        "type": "object",
        "properties": {
          "country_code": {
            "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.",
            "type": [
              "string",
              "null"
            ],
            "default": "+91"
          },
          "phone": {
            "description": "10 digit phone number without country code.",
            "type": "string"
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "format": "email"
          },
          "first_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "last_name": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PosUpdateCustomerWithPhone",
          "description": "API reference for the PosUpdateCustomerWithPhone schema"
        },
        "required": [
          "phone"
        ],
        "title": "UpdateCustomerWithPhone"
      },
      "PosUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "channel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name"
            ]
          },
          "device": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name"
            ]
          },
          "location": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name"
            ]
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "location_id",
                "location_name"
              ],
              "properties": {
                "location_id": {
                  "type": "string"
                },
                "location_name": {
                  "type": "string"
                },
                "role_id": {
                  "type": "string"
                },
                "role_name": {
                  "type": "string"
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PosUser",
          "description": "API reference for the PosUser schema"
        },
        "required": [
          "id",
          "first_name",
          "last_name",
          "phone",
          "email",
          "channel",
          "device",
          "location",
          "roles"
        ],
        "title": "PosUser"
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The ID of the product",
            "type": "string"
          },
          "sku": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "short_description": {
            "type": [
              "string",
              "null"
            ]
          },
          "product_type": {
            "type": "string",
            "enum": [
              "physical",
              "digital",
              "bundle"
            ],
            "examples": [
              "physical"
            ]
          },
          "active": {
            "type": "boolean",
            "readOnly": true
          },
          "stock_available": {
            "description": "Indicates whether the product has stock available",
            "type": "boolean",
            "readOnly": true
          },
          "backorder": {
            "description": "Indicates whether the item is being fulfilled as a backorder. When true, the item is not currently in stock and will ship later once inventory is available. This may result in the order being split into multiple shipments, with delays for the backordered portion.",
            "type": "boolean"
          },
          "on_offer": {
            "description": "Indicates whether this item is associated with any active (product-specific) coupons",
            "type": "boolean",
            "readOnly": true
          },
          "on_subscription": {
            "description": "Indicates whether the product has any subscription plans avaialble",
            "type": "boolean",
            "readOnly": true
          },
          "on_promotion": {
            "description": "Indicates whether the product is currently on promotion. When true, the `ProductPromotion` object will contain details of the promotion",
            "type": "boolean",
            "readOnly": true
          },
          "has_variant": {
            "description": "Indicates whether the product has variants",
            "type": "boolean",
            "readOnly": true
          },
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "category_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          },
          "reviews_rating_sum": {
            "type": "number",
            "format": "double"
          },
          "reviews_count": {
            "type": "integer"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAttribute"
            }
          },
          "pricing": {
            "$ref": "#/components/schemas/ProductPricing"
          },
          "variant_options": {
            "description": "this will be used if has_variant is true, to auto set default values.",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/VariantOption"
            }
          },
          "promotion": {
            "$ref": "#/components/schemas/ProductPromotion"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductImage"
            }
          },
          "subscription": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSubscription"
            }
          },
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Variant"
            }
          },
          "bundle_items": {
            "$ref": "#/components/schemas/ProductBundleItem"
          },
          "inventory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LotBatchDetail"
            }
          }
        },
        "examples": [],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/Product",
          "description": "API reference for the Product schema"
        },
        "required": [
          "id",
          "sku",
          "name",
          "slug",
          "short_description",
          "product_type",
          "active",
          "stock_available",
          "on_offer",
          "on_subscription",
          "on_promotion",
          "has_variant",
          "tags",
          "category_ids",
          "categories",
          "reviews_rating_sum",
          "reviews_count",
          "attributes",
          "pricing",
          "variant_options",
          "promotion",
          "images",
          "subscription",
          "variants",
          "bundle_items"
        ],
        "title": "Product"
      },
      "ProductAttribute": {
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "color": "#/components/schemas/ColorAttribute",
            "single-select": "#/components/schemas/SingleSelectAttribute",
            "multi-select": "#/components/schemas/MultiSelectAttribute",
            "text": "#/components/schemas/TextAttribute",
            "date": "#/components/schemas/DateAttribute",
            "number": "#/components/schemas/NumberAttribute",
            "boolean": "#/components/schemas/BooleanAttribute"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/ProductAttribute",
          "description": "API reference for the ProductAttribute schema"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/ColorAttribute",
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/SingleSelectAttribute",
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/MultiSelectAttribute",
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/TextAttribute",
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/DateAttribute",
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/NumberAttribute",
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/BooleanAttribute",
            "type": "object"
          }
        ]
      },
      "ProductBundleItem": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "quantity": {
                  "type": "integer",
                  "format": "int32",
                  "readOnly": true
                }
              },
              "required": [
                "quantity"
              ]
            },
            {
              "$ref": "#/components/schemas/Item"
            }
          ]
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/ProductBundleItem",
          "description": "API reference for the ProductBundleItem schema"
        }
      },
      "ProductCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Category"
          },
          {
            "type": "object",
            "properties": {
              "child_categories": {
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "required": [
              "child_categories"
            ]
          }
        ],
        "examples": [],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/ProductCategory",
          "description": "API reference for the ProductCategory schema"
        },
        "title": "ProductCategory"
      },
      "ProductDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Product"
          },
          {
            "$ref": "#/components/schemas/AdditionalProductDetails"
          }
        ],
        "examples": [],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/ProductDetail",
          "description": "API reference for the ProductDetail schema"
        }
      },
      "ProductImage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": [
              "string",
              "null"
            ]
          },
          "alternate_text": {
            "type": [
              "string",
              "null"
            ]
          },
          "sort_order": {
            "type": "integer"
          },
          "url_tiny": {
            "type": "string"
          },
          "url_thumbnail": {
            "type": "string"
          },
          "url_standard": {
            "type": "string"
          },
          "url_zoom": {
            "type": "string"
          }
        },
        "examples": [],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/ProductImage",
          "description": "API reference for the ProductImage schema"
        },
        "required": [
          "id",
          "title",
          "alternate_text",
          "sort_order",
          "url_tiny",
          "url_thumbnail",
          "url_standard",
          "url_zoom"
        ],
        "title": "ProductImage"
      },
      "ProductPricing": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "tax_type": {
            "type": "string",
            "default": "GST",
            "const": "GST",
            "examples": [
              "GST"
            ]
          },
          "tax_rate": {
            "type": "number",
            "format": "double"
          },
          "price_including_tax": {
            "type": "boolean",
            "format": "double",
            "examples": [
              false
            ]
          },
          "listing_price": {
            "type": "number",
            "format": "double"
          },
          "selling_price": {
            "type": "number",
            "format": "double"
          },
          "min_order_quantity": {
            "type": "integer",
            "default": 1
          },
          "max_order_quantity": {
            "type": [
              "integer",
              "null"
            ]
          },
          "incremental_quantity": {
            "type": "integer",
            "default": 1
          },
          "selling_price_excluding_tax": {
            "type": "number",
            "format": "double"
          }
        },
        "examples": [],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/ProductPricing",
          "description": "API reference for the ProductPricing schema"
        },
        "required": [
          "currency",
          "tax_type",
          "tax_rate",
          "price_including_tax",
          "listing_price",
          "selling_price",
          "min_order_quantity",
          "max_order_quantity",
          "incremental_quantity",
          "selling_price_excluding_tax"
        ],
        "title": "ProductPricing"
      },
      "ProductPromotion": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "starts_at": {
            "type": "string",
            "format": "date-time"
          },
          "expires_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "details": {
            "discriminator": {
              "propertyName": "promotion_type",
              "mapping": {
                "discount": "#/components/schemas/DiscountBasedPromotion",
                "fixed-price": "#/components/schemas/FixedPricePromotion",
                "volume-based": "#/components/schemas/VolumeBasedPromotion",
                "free-goods": "#/components/schemas/FreeGoodsPromotion"
              }
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/DiscountBasedPromotion"
              },
              {
                "$ref": "#/components/schemas/FixedPricePromotion"
              },
              {
                "$ref": "#/components/schemas/VolumeBasedPromotion"
              },
              {
                "$ref": "#/components/schemas/FreeGoodsPromotion"
              }
            ]
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/ProductPromotion",
          "description": "API reference for the ProductPromotion schema"
        },
        "required": [
          "id",
          "starts_at",
          "expires_at",
          "details"
        ],
        "title": "ProductPromotion"
      },
      "ProductReview": {
        "type": "object",
        "properties": {
          "rating": {
            "description": "The rating of the product review. Must be in rang 1-5 (multiple of 0.5)",
            "type": "number",
            "format": "double",
            "maximum": 5,
            "minimum": 1,
            "multipleOf": 0.5,
            "readOnly": true
          },
          "review_text": {
            "description": "The text for the product review.",
            "type": "string",
            "readOnly": true
          },
          "name": {
            "description": "The name of the reviewer.",
            "type": "string",
            "readOnly": true
          },
          "email": {
            "description": "The email of the reviewer. Must be a valid email, or an empty string.",
            "type": "string",
            "format": "email",
            "examples": [
              "mr@bees.com"
            ],
            "readOnly": true
          },
          "status": {
            "description": "Reviews with approved status will be displayed.",
            "type": "string",
            "enum": [
              "approved"
            ],
            "readOnly": true
          },
          "is_featured": {
            "type": "boolean",
            "default": false
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "review_date": {
            "description": "The ISO 8601 date-time for when review was first submitted or last modified by the original submitter.",
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "blur_url": {
                  "type": "string"
                },
                "thumbnail_url": {
                  "type": "string"
                },
                "standard_url": {
                  "type": "string"
                }
              }
            }
          },
          "videos": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "cover_image_url": {
                  "type": "string"
                },
                "video_preview_url": {
                  "type": "string"
                },
                "playback": {
                  "type": "object",
                  "properties": {
                    "hls": {
                      "type": "string"
                    },
                    "dash": {
                      "type": "string"
                    }
                  }
                },
                "duration": {
                  "description": "seconds",
                  "type": "string"
                },
                "size": {
                  "description": "bytes",
                  "type": "string"
                }
              }
            }
          },
          "created_at": {
            "description": "The ISO 8601 date-time for when review is created.",
            "type": "string",
            "format": "date-time",
            "examples": [
              "2023-05-25T14:15:22Z"
            ],
            "readOnly": true
          },
          "modified_at": {
            "description": "The ISO 8601 date-time for when review was last modified.",
            "type": "string",
            "format": "date-time",
            "examples": [
              "2023-05-25T14:15:22Z"
            ],
            "readOnly": true
          }
        },
        "examples": [],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/ProductReview",
          "description": "API reference for the ProductReview schema"
        },
        "title": "ProductReview"
      },
      "ProductShipping": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "handling_charges_including_tax": {
            "type": "number"
          },
          "handling_charges_excluding_tax": {
            "type": "number"
          },
          "tax_type": {
            "type": "string"
          },
          "tax_rate": {
            "type": "number"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/ProductShipping",
          "description": "API reference for the ProductShipping schema"
        },
        "required": [
          "handling_charges_including_tax",
          "handling_charges_excluding_tax",
          "tax_type",
          "tax_rate"
        ],
        "title": "ProductShipping"
      },
      "ProductSubscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "subscription_plan": {
            "type": "string"
          },
          "subscription_price": {
            "type": "number",
            "format": "double"
          },
          "billing_interval": {
            "description": "Billing interval determines the frequency for which the customer is charged for the subscription itself.",
            "type": "integer"
          },
          "billing_frequency": {
            "type": "string",
            "enum": [
              "weekly",
              "monthly",
              "annually"
            ],
            "examples": [
              "monthly"
            ]
          },
          "billing_limit": {
            "description": "Optionally limit the number of times this subscription will invoice the customer.",
            "type": "integer"
          },
          "fulfill_separately": {
            "type": "boolean",
            "default": false
          },
          "order_interval": {
            "description": "order interval defines the frequency of when the subscription sends customers the product",
            "type": "integer"
          },
          "order_frequency": {
            "type": "string",
            "enum": [
              "weekly",
              "monthly",
              "annully"
            ],
            "examples": [
              "monthly"
            ]
          },
          "order_limit": {
            "description": "By default this is set to unlimited, meaning the subscription will fulfill indefinitely. Changing the Limit to 10 would force the subscription to end after the tenth interval had been fulfilled.",
            "type": "integer"
          },
          "minimum_quantity": {
            "description": "The quantity of the plan to which the customer should be subscribed",
            "type": "integer"
          },
          "billing_trial_days": {
            "description": "Use in digital product only for trial period",
            "type": "integer"
          }
        },
        "examples": [],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/ProductSubscription",
          "description": "API reference for the ProductSubscription schema"
        },
        "required": [
          "id",
          "subscription_plan",
          "subscription_price",
          "billing_interval",
          "billing_frequency",
          "billing_limit",
          "fulfill_separately",
          "order_interval",
          "order_frequency",
          "order_limit",
          "minimum_quantity",
          "billing_trial_days"
        ],
        "title": "ProductSubscription"
      },
      "ProductVideo": {
        "type": "object",
        "properties": {
          "title": {
            "type": [
              "string",
              "null"
            ]
          },
          "alternate_text": {
            "type": [
              "string",
              "null"
            ]
          },
          "sort_order": {
            "type": "integer"
          },
          "video_preview_url": {
            "type": "string"
          },
          "video_stream_hls_url": {
            "type": "string"
          },
          "video_stream_dash_url": {
            "type": "string"
          },
          "image_thumbnail_url": {
            "type": "string"
          },
          "video_duration": {
            "description": "in seconds",
            "type": "integer"
          }
        },
        "examples": [],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/ProductVideo",
          "description": "API reference for the ProductVideo schema"
        },
        "required": [
          "title",
          "alternate_text",
          "sort_order",
          "video_preview_url",
          "video_stream_hls_url",
          "video_stream_dash_url",
          "image_thumbnail_url",
          "video_duration"
        ],
        "title": "ProductVideo"
      },
      "Promotion": {
        "allOf": [
          {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DiscountCouponPromotion"
              },
              {
                "$ref": "#/components/schemas/FreeGoodCouponPromotion"
              },
              {
                "$ref": "#/components/schemas/BuyXGetYCouponPromotion"
              },
              {
                "$ref": "#/components/schemas/VolumeBasedCouponPromotion"
              },
              {
                "$ref": "#/components/schemas/FreeShipingCouponPromotion"
              }
            ]
          },
          {
            "type": "object",
            "required": [
              "promotion_type",
              "can_be_used_with_other_promotion"
            ],
            "properties": {
              "promotion_type": {
                "enum": [
                  "discount",
                  "free-goods",
                  "free-shipping",
                  "buy-x-get-y",
                  "volume-based"
                ]
              },
              "can_be_used_with_other_promotion": {
                "type": "boolean"
              }
            }
          }
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/Promotion",
          "description": "API reference for the Promotion schema"
        },
        "title": "Promotion"
      },
      "PromotionType": {
        "enum": [
          "discount",
          "free-goods",
          "free-shipping",
          "buy-x-get-y",
          "volume-based"
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/PromotionType",
          "description": "API reference for the PromotionType schema"
        }
      },
      "RegisterWithEmailPassword": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          },
          "confirm_password": {
            "type": "string"
          },
          "phone": {
            "description": "10 digit phone number without country code.",
            "type": [
              "string",
              "null"
            ]
          },
          "country_code": {
            "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.",
            "type": [
              "string",
              "null"
            ]
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/RegisterWithEmailPassword",
          "description": "API reference for the RegisterWithEmailPassword schema"
        },
        "required": [
          "email",
          "password",
          "confirm_password"
        ],
        "title": "RegisterWithEmailPassword"
      },
      "RegisterWithPhonePassword": {
        "type": "object",
        "properties": {
          "country_code": {
            "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.",
            "type": [
              "string",
              "null"
            ]
          },
          "phone": {
            "description": "10 digit phone number without country code.",
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "confirm_password": {
            "type": "string"
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/RegisterWithPhonePassword",
          "description": "API reference for the RegisterWithPhonePassword schema"
        },
        "required": [
          "phone",
          "password",
          "confirm_password"
        ],
        "title": "RegisterWithPhonePassword"
      },
      "RevokeSubscription": {
        "type": "object",
        "properties": {
          "command": {
            "description": "To revoke a subscription.",
            "type": "string",
            "const": "revoke"
          },
          "reason": {
            "description": "Provide reason for revoking subscription.",
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/RevokeSubscription",
          "description": "API reference for the RevokeSubscription schema"
        },
        "required": [
          "command",
          "reason"
        ],
        "title": "RevokeSubscription",
        "x-tags": [
          "Subscriptions"
        ]
      },
      "SearchProduct": {
        "description": "Payload for searching products.",
        "type": "object",
        "properties": {
          "query": {
            "description": "String for searching products, considers the first ten words of any given search query.",
            "type": "string"
          },
          "page": {
            "description": "To request a specific page of results.",
            "type": "integer",
            "default": 1
          },
          "limit": {
            "description": "Maximum number of records returned for a page.",
            "type": "integer",
            "default": 25
          },
          "facets": {
            "description": "provide list of attributes for specific facets or * for all facets.\n```json\nFor specific facets: [\"size\", \"color\", \"brand\"]\n```\n```json\nFor all facets: [\"*\"]\n```",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/SearchProduct",
          "description": "API reference for the SearchProduct schema"
        },
        "required": [
          "query"
        ],
        "title": "SearchProduct"
      },
      "Seo": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string"
          },
          "title": {
            "type": [
              "string",
              "null"
            ]
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "keywords": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/Seo",
          "description": "API reference for the Seo schema"
        },
        "required": [
          "slug",
          "title",
          "description",
          "keywords"
        ],
        "title": "Seo"
      },
      "ShipmentItem": {
        "description": "Shipment item model",
        "type": "object",
        "properties": {
          "product_id": {
            "type": "string"
          },
          "product_name": {
            "type": "string"
          },
          "product_image_url": {
            "type": [
              "string",
              "null"
            ]
          },
          "sku": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "free_quantity": {
            "type": "integer"
          },
          "is_free_item": {
            "type": "boolean"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/ShipmentItem",
          "description": "API reference for the ShipmentItem schema"
        },
        "title": "ShipmentItem"
      },
      "SingleSelectAttribute": {
        "description": "Attribute for single-select values",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "key": {
            "description": "A lookup safe version of the name that is lowercased and spaces are replaced with underscores. For instance, if name is `Product Type`, key will be `product_type`",
            "type": "string"
          },
          "type": {
            "type": "string",
            "example": "single-select"
          },
          "value": {
            "description": "For single-select attributes",
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/SingleSelectAttribute",
          "description": "API reference for the SingleSelectAttribute schema"
        },
        "readOnly": true,
        "required": [
          "id",
          "name",
          "key",
          "type",
          "value"
        ],
        "title": "SingleSelectAttribute"
      },
      "SingleSelectOption": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the associated option.",
            "type": "string"
          },
          "type": {
            "description": "The type of the associated option.",
            "const": "single-select"
          },
          "value": {
            "description": "The value of the associated option",
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/SingleSelectOption",
          "description": "API reference for the SingleSelectOption schema"
        },
        "required": [
          "name",
          "type",
          "value"
        ],
        "title": "SingleSelectOption"
      },
      "StoreConfig": {
        "type": "object",
        "properties": {
          "is_kyc_enabled": {
            "type": "boolean",
            "default": false
          },
          "is_customer_group_enabled": {
            "type": "boolean",
            "default": false
          },
          "brand": {
            "$ref": "#/components/schemas/Brand"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "customer_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerGroup"
            },
            "readOnly": true
          },
          "kyc_documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KycDocumentConfig"
            },
            "readOnly": true
          },
          "measurement": {
            "$ref": "#/components/schemas/MeasurementUnit"
          },
          "terms_of_service": {
            "$ref": "#/components/schemas/StoreTemplate"
          },
          "refund_policy": {
            "$ref": "#/components/schemas/StoreTemplate"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/StoreConfig",
          "description": "API reference for the StoreConfig schema"
        },
        "required": [
          "is_kyc_enabled",
          "is_customer_group_enabled",
          "brand",
          "currency",
          "customer_groups",
          "kyc_documents",
          "measurement",
          "terms_of_service",
          "refund_policy"
        ],
        "title": "StoreConfig"
      },
      "StoreTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "content_title": {
            "description": "to be used in email subject or notification heading if provided.",
            "type": [
              "string",
              "null"
            ]
          },
          "content_type": {
            "enum": [
              "html",
              "markdown",
              "plaintext"
            ]
          },
          "content": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/StoreTemplate",
          "description": "API reference for the StoreTemplate schema"
        },
        "required": [
          "id",
          "name",
          "content_title",
          "content_type",
          "content"
        ],
        "title": "StoreTemplate",
        "x-tags": [
          "Store"
        ]
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "plan_id": {
            "type": "string",
            "readOnly": true
          },
          "plan_name": {
            "type": "string",
            "readOnly": true
          },
          "price": {
            "description": "The subscription price is the amount a customer is required to pay over a specified period (e.g., monthly, annually). This price may vary based on the plan selected or based on usage of services.",
            "type": "number",
            "format": "double"
          },
          "status": {
            "enum": [
              "created",
              "active",
              "paused",
              "revoked"
            ],
            "readOnly": true
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "description": "if specified, subscrition will be revoked on this date.",
            "type": [
              "string",
              "null"
            ],
            "format": "date"
          },
          "trial_days": {
            "description": "If specified, payment will be charged after trial days completed.",
            "type": "integer",
            "default": 0
          },
          "trial_start_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date",
            "readOnly": true
          },
          "trial_end_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date",
            "readOnly": true
          },
          "next_billing_date": {
            "type": "string",
            "format": "date",
            "readOnly": true
          },
          "last_payment_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "readOnly": true
          },
          "pause_start_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date"
          },
          "pause_end_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date"
          },
          "billing_frequency": {
            "enum": [
              "monthly"
            ]
          },
          "billing_interval": {
            "description": "Frequency unit multiplier. For example, `1` with `monthly` means every month; `3` with `weekly` means in every 3 weeks.",
            "type": "integer",
            "default": 1
          },
          "billing_limit": {
            "type": [
              "integer",
              "null"
            ]
          },
          "shipping_frequency": {
            "enum": [
              "monthly"
            ]
          },
          "shipping_interval": {
            "description": "Frequency unit multiplier. For example, `1` with `monthly` means every month; `3` with `weekly` means in every 3 weeks.",
            "type": "integer",
            "default": 1
          },
          "shipping_limit": {
            "type": [
              "integer",
              "null"
            ]
          },
          "coupon_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "coupon_code": {
            "type": [
              "string",
              "null"
            ]
          },
          "coupon_discount_percent": {
            "type": "number",
            "default": 0
          },
          "coupon_discount_amount": {
            "type": "number",
            "default": 0
          },
          "coupon_redemption_limit": {
            "description": "Indicates how many times a coupon can be redeemed within the subscription.",
            "type": [
              "integer",
              "null"
            ],
            "default": 0
          },
          "is_prepaid": {
            "description": "Indicates whether the subscription is paid in advance. When set to true, the subscription requires the customer to pay for the entire billing period upfront. When set to false, the subscription may operate on a pay-as-you-go or post-paid model, where charges are billed after the service is provided.",
            "type": "boolean",
            "default": false
          },
          "usage_based_billing": {
            "description": "Refers to a pricing model where customers are charged based on their actual usage of a service. Usage based billing works for digital products.",
            "type": "boolean"
          },
          "usage_based_tiers": {
            "description": "Refers to a pricing structure where customers are charged based on their usage, but the cost per unit of usage decreases or changes as they move into higher usage levels.",
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "up_to",
                "price_per_unit"
              ],
              "properties": {
                "up_to": {
                  "type": "integer"
                },
                "price_per_unit": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          },
          "grace_period_days": {
            "description": "The number of days after a failed payment to retry before canceling.",
            "type": "integer",
            "default": 0
          },
          "is_cancellation_allowed": {
            "description": "Indcates whether the next billing cancellation is allowed or not.",
            "type": "boolean",
            "default": true
          },
          "days_until_cancellation_allowed": {
            "description": "Specifies the number of days the customer has to cancel before the next billing.",
            "type": "integer",
            "default": 3
          },
          "currency": {
            "description": "Details about the currency being used, including `name`, `code`, and `symbol`.",
            "$ref": "#/components/schemas/Currency"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/Subscription",
          "description": "API reference for the Subscription schema"
        },
        "required": [
          "id",
          "plan_id",
          "plan_name",
          "price",
          "status",
          "start_date",
          "end_date",
          "trial_days",
          "trial_start_date",
          "trial_end_date",
          "next_billing_date",
          "last_payment_date",
          "pause_start_date",
          "pause_end_date",
          "billing_frequency",
          "billing_interval",
          "billing_limit",
          "shipping_frequency",
          "shipping_interval",
          "shipping_limit",
          "coupon_id",
          "coupon_code",
          "coupon_discount_percent",
          "coupon_discount_amount",
          "coupon_redemption_limit",
          "is_prepaid",
          "usage_based_billing",
          "usage_based_tiers",
          "grace_period_days",
          "is_cancellation_allowed",
          "days_until_cancellation_allowed",
          "currency",
          "metadata",
          "created_at",
          "modified_at"
        ],
        "title": "Subscription",
        "x-tags": [
          "Subscriptions"
        ]
      },
      "SubscriptionBehaviour": {
        "type": "object",
        "properties": {
          "is_prepaid": {
            "description": "Refers to a pricing model where customers are charged based on their actual usage of a service. Usage based billing works for digital products.",
            "type": "boolean",
            "default": false
          },
          "usage_based_billing": {
            "description": "Refers to a pricing model where customers are charged based on their actual usage of a service. Usage based billing works for digital products.",
            "type": "boolean",
            "default": false
          },
          "usage_based_tiers": {
            "description": "Refers to a pricing structure where customers are charged based on their usage, but the cost per unit of usage decreases or changes as they move into higher usage levels.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "up_to": {
                  "type": "integer"
                },
                "price_per_unit": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          },
          "grace_period_days": {
            "description": "The number of days after a failed payment to retry before canceling.",
            "type": "integer",
            "default": 0
          },
          "is_cancellation_allowed": {
            "description": "Indcates whether the next billing cancellation is allowed or not.",
            "type": "boolean",
            "default": true
          },
          "days_until_cancellation_allowed": {
            "description": "Specifies the number of days the customer has to cancel before the next billing.",
            "type": "integer",
            "default": 3
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/SubscriptionBehaviour",
          "description": "API reference for the SubscriptionBehaviour schema"
        },
        "title": "SubscriptionBehaviour",
        "x-tags": [
          "Subscriptions"
        ]
      },
      "SubscriptionDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Subscription"
          },
          {
            "type": "object",
            "properties": {
              "invoice_items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubscriptionInvoiceItem"
                }
              },
              "billing_address": {
                "$ref": "#/components/schemas/CustomerAddress"
              },
              "shipping_address": {
                "$ref": "#/components/schemas/CustomerAddress"
              }
            }
          }
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/SubscriptionDetail",
          "description": "API reference for the SubscriptionDetail schema"
        },
        "title": "SubscriptionDetail",
        "x-tags": [
          "Subscriptions"
        ]
      },
      "SubscriptionInvoiceItem": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "string"
          },
          "variant_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "product_name": {
            "type": "string",
            "readOnly": true
          },
          "variant_name": {
            "type": "string",
            "readOnly": true
          },
          "product_image_url": {
            "type": "string",
            "readOnly": true
          },
          "sku": {
            "type": "string",
            "readOnly": true
          },
          "quantity": {
            "type": "integer"
          },
          "listing_price": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "selling_price": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "tax_type": {
            "type": "string",
            "const": "GST",
            "readOnly": true
          },
          "tax_rate": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "price_including_tax": {
            "type": "boolean",
            "readOnly": true
          },
          "selling_price_excluding_tax": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/SubscriptionInvoiceItem",
          "description": "API reference for the SubscriptionInvoiceItem schema"
        },
        "required": [
          "product_id",
          "variant_id",
          "product_name",
          "variant_name",
          "product_image_url",
          "sku",
          "quantity",
          "listing_price",
          "selling_price",
          "tax_type",
          "tax_rate",
          "price_including_tax",
          "selling_price_excluding_tax"
        ],
        "title": "SubscriptionInvoiceItem",
        "x-tags": [
          "Subscriptions"
        ]
      },
      "TextAttribute": {
        "description": "Attribute for text values",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "key": {
            "description": "A lookup safe version of the name that is lowercased and spaces are replaced with underscores. For instance, if name is `Product Type`, key will be `product_type`",
            "type": "string"
          },
          "type": {
            "type": "string",
            "example": "text"
          },
          "value": {
            "description": "For text attributes",
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/TextAttribute",
          "description": "API reference for the TextAttribute schema"
        },
        "readOnly": true,
        "required": [
          "id",
          "name",
          "key",
          "type",
          "value"
        ],
        "title": "TextAttribute"
      },
      "UpdateCartItem": {
        "description": "Schema for updating a cart item, including adding, removing, or adjusting the quantity of a product or variant.",
        "type": "object",
        "properties": {
          "product_id": {
            "description": "The ID of the product to update in the cart.",
            "type": "string",
            "examples": [
              "01H9XYZ12345ABCDE"
            ]
          },
          "variant_id": {
            "description": "The ID of the product variant, or null if the product has no variants.",
            "type": [
              "string",
              "null"
            ],
            "examples": [
              null
            ]
          },
          "quantity": {
            "description": "The quantity of the product to add to or update in the cart. Use `0` to remove the item from the cart.",
            "type": "integer",
            "examples": [
              1
            ],
            "minimum": 0
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/UpdateCartItem",
          "description": "API reference for the UpdateCartItem schema"
        },
        "required": [
          "product_id",
          "variant_id",
          "quantity"
        ],
        "title": "UpdateCartItem"
      },
      "UpdateCustomer": {
        "type": "object",
        "properties": {
          "business": {
            "$ref": "#/components/schemas/Business"
          }
        },
        "examples": [],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/UpdateCustomer",
          "description": "API reference for the UpdateCustomer schema"
        },
        "title": "UpdateCustomer"
      },
      "UpdateDigitalProductSubscription": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "command"
            ],
            "properties": {
              "command": {
                "type": "string",
                "const": "update"
              },
              "billing_frequency": {
                "enum": [
                  "monthly"
                ]
              },
              "billing_interval": {
                "type": "integer",
                "default": 1
              },
              "billing_limit": {
                "description": "null means there is no limit on number of invoices generated. If specified, then subscription will be revoked automatically after billing limit is reached.",
                "type": [
                  "integer",
                  "null"
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/SubscriptionBehaviour"
          },
          {
            "type": "object",
            "properties": {
              "invoice_items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubscriptionInvoiceItem"
                }
              }
            }
          }
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/UpdateDigitalProductSubscription",
          "description": "API reference for the UpdateDigitalProductSubscription schema"
        },
        "title": "UpdateDigitalProductSubscription",
        "x-tags": [
          "Subscriptions"
        ]
      },
      "UpdateDocument": {
        "type": "object",
        "properties": {
          "document_number": {
            "type": "string"
          },
          "kyc_document_id": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "file": {
            "description": "file attachment will be required or optional as per store setting.",
            "type": "string",
            "format": "binary"
          },
          "modified_reason": {
            "type": "string"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/UpdateDocument",
          "description": "API reference for the UpdateDocument schema"
        },
        "required": [
          "document_number",
          "kyc_document_id",
          "modified_reason"
        ],
        "title": "UpdateDocument",
        "x-tags": [
          "KYC"
        ]
      },
      "UpdatePhysicalProductSubscription": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "command"
            ],
            "properties": {
              "command": {
                "type": "string",
                "const": "update"
              },
              "billing_frequency": {
                "enum": [
                  "monthly"
                ]
              },
              "billing_interval": {
                "type": "integer",
                "default": 1
              },
              "billing_limit": {
                "description": "null means there is no limit on number of invoices generated. If specified, then subscription will be revoked automatically after billing limit is reached.",
                "type": [
                  "integer",
                  "null"
                ]
              },
              "shipping_frequency": {
                "enum": [
                  "monthly"
                ]
              },
              "shipping_interval": {
                "type": "integer",
                "default": 1
              },
              "shipping_limit": {
                "description": "null means there is no limit on number of deliveries completed. If specified, then subscription will be revoked automatically after shipping limit is reached.",
                "type": [
                  "integer",
                  "null"
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/SubscriptionBehaviour"
          },
          {
            "type": "object",
            "properties": {
              "invoice_items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubscriptionInvoiceItem"
                }
              }
            }
          }
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/UpdatePhysicalProductSubscription",
          "description": "API reference for the UpdatePhysicalProductSubscription schema"
        },
        "title": "UpdatePhysicalProductSubscription",
        "x-tags": [
          "Subscriptions"
        ]
      },
      "UpiPayment": {
        "description": "UPI Payment",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentInfo"
          },
          {
            "type": "object",
            "properties": {
              "upi_id": {
                "type": "string"
              }
            }
          }
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/UpiPayment",
          "description": "API reference for the UpiPayment schema"
        },
        "title": "UpiPayment"
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique ID of the user.",
            "type": "string",
            "readOnly": true
          },
          "first_name": {
            "description": "Userâ€™s first name.",
            "type": [
              "string",
              "null"
            ]
          },
          "last_name": {
            "description": "Userâ€™s last name.",
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "description": "Userâ€™s email Iâ€™d.",
            "type": [
              "string",
              "null"
            ],
            "format": "email"
          },
          "is_email_verified": {
            "description": "Boolean indicating whether the email is verified.",
            "type": "boolean",
            "readOnly": true
          },
          "phone": {
            "description": "10 digit phone number without country code.",
            "type": [
              "string",
              "null"
            ]
          },
          "country_code": {
            "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.\nUse this key along with phone. Not necessary for email.",
            "type": [
              "string",
              "null"
            ]
          },
          "is_phone_verified": {
            "description": "Boolean indicating whether the phone is verified.",
            "type": "boolean",
            "readOnly": true
          },
          "profile_image_url": {
            "description": "URL to the user's profile image.",
            "type": [
              "string",
              "null"
            ]
          },
          "is_anonymous": {
            "description": "Indicates whether the user is anonymous.",
            "type": "boolean",
            "readOnly": true
          },
          "is_logged_in": {
            "description": "Indicates whether the user is currently logged in.",
            "type": "boolean",
            "readOnly": true
          },
          "login_methods": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "email",
                "phone",
                "whatsapp",
                "password"
              ]
            }
          },
          "notification_preferences": {
            "description": "User's notification preferences are categorized by transactional, promotional, and newsletter types.",
            "$ref": "#/components/schemas/NotificationPreferences"
          },
          "created_at": {
            "description": "Timestamps indicate when the user's account was created.",
            "type": "string",
            "format": "datetime",
            "readOnly": true
          },
          "modified_at": {
            "description": "Timestamps indicating when the user account was last modified.",
            "type": "string",
            "format": "datetime",
            "readOnly": true
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/User",
          "description": "API reference for the User schema"
        },
        "required": [
          "id",
          "first_name",
          "last_name",
          "email",
          "is_email_verified",
          "phone",
          "country_code",
          "is_phone_verified",
          "profile_image_url",
          "is_anonymous",
          "is_logged_in",
          "login_methods",
          "notification_preferences"
        ],
        "title": "User"
      },
      "Variant": {
        "type": "object",
        "properties": {
          "id": {
            "description": "variant id",
            "type": "string"
          },
          "product_id": {
            "description": "product id",
            "type": "string"
          },
          "sku": {
            "description": "variant sku",
            "type": [
              "string",
              "null"
            ]
          },
          "slug": {
            "type": "string"
          },
          "name": {
            "description": "variant name",
            "type": "string"
          },
          "product_name": {
            "description": "variant name",
            "type": "string"
          },
          "short_description": {
            "type": [
              "string",
              "null"
            ]
          },
          "active": {
            "type": "boolean",
            "readOnly": true
          },
          "stock_available": {
            "type": "boolean",
            "readOnly": true
          },
          "backorder": {
            "description": "Indicates whether the item is being fulfilled as a backorder. When true, the item is not currently in stock and will ship later once inventory is available. This may result in the order being split into multiple shipments, with delays for the backordered portion.",
            "type": "boolean"
          },
          "on_offer": {
            "description": "Indicates whether this item is associated with any active (product-specific) coupons",
            "type": "boolean",
            "readOnly": true
          },
          "on_promotion": {
            "type": "boolean",
            "readOnly": true
          },
          "on_subscription": {
            "type": "boolean",
            "readOnly": true
          },
          "is_default": {
            "description": "Indicates whether a variant is marked as the default variant for a product",
            "type": "boolean",
            "readOnly": true
          },
          "associated_options": {
            "description": "This object contains multiple dynamic keys. Each key is a string derived from the attribute key, and the value is an object of the type `AssociatedOption`.",
            "$ref": "#/components/schemas/AssociatedOption"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductImage"
            }
          },
          "pricing": {
            "$ref": "#/components/schemas/ProductPricing"
          },
          "subscription": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSubscription"
            }
          },
          "promotion": {
            "$ref": "#/components/schemas/ProductPromotion"
          },
          "inventory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LotBatchDetail"
            }
          }
        },
        "examples": [],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/Variant",
          "description": "API reference for the Variant schema"
        },
        "required": [
          "id",
          "product_id",
          "sku",
          "slug",
          "name",
          "product_name",
          "short_description",
          "active",
          "stock_available",
          "on_offer",
          "on_promotion",
          "on_subscription",
          "is_default",
          "associated_options",
          "images",
          "pricing",
          "subscription",
          "promotion"
        ],
        "title": "ProductVariant"
      },
      "VariantDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Variant"
          },
          {
            "type": "object",
            "required": [
              "product_type",
              "description",
              "category_ids",
              "tags",
              "reviews_rating_sum",
              "reviews_count",
              "hsn_code",
              "variant_options",
              "product_attributes",
              "variant_attributes",
              "videos",
              "shipping",
              "seo",
              "metadata"
            ],
            "properties": {
              "product_type": {
                "type": "string",
                "enum": [
                  "physical",
                  "digital",
                  "bundle"
                ],
                "examples": [
                  "physical"
                ]
              },
              "description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "category_ids": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "tags": {
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "reviews_rating_sum": {
                "type": [
                  "number",
                  "null"
                ]
              },
              "reviews_count": {
                "type": "integer"
              },
              "hsn_code": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "variant_options": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VariantOption"
                }
              },
              "product_attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductAttribute"
                }
              },
              "variant_attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductAttribute"
                }
              },
              "videos": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductVideo"
                }
              },
              "shipping": {
                "$ref": "#/components/schemas/ProductShipping"
              },
              "seo": {
                "$ref": "#/components/schemas/Seo"
              },
              "metadata": {
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "examples": [],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/VariantDetail",
          "description": "API reference for the VariantDetail schema"
        },
        "title": "VariantDetail"
      },
      "VariantOption": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the associated option.",
            "type": "string"
          },
          "key": {
            "description": "A lookup safe version of the name that is lowercased and spaces are replaced with underscores. For instance, if name is `Product Type`, key will be `product_type`",
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "single-select",
              "color"
            ]
          },
          "value": {
            "description": "When option_type is color, value will contain an array of objects like:\n```json\n[\n    {\n    \"name\": \"first_color\",\n    \"hexcode\": \"#000000\"\n    },\n    {\n    \"name\": \"second_color\",\n    \"hexcode\": \"#FFFFFF\"\n    }\n]\n```",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "object"
                }
              ]
            }
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/VariantOption",
          "description": "API reference for the VariantOption schema"
        },
        "required": [
          "name",
          "key",
          "type",
          "value"
        ],
        "title": "VariantOption"
      },
      "VolumeBasedCouponPromotion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CouponPromotionCommonDetail"
          },
          {
            "type": "object",
            "required": [
              "details",
              "applies_to_product"
            ],
            "properties": {
              "details": {
                "$ref": "#/components/schemas/VolumeBasedRule"
              },
              "applies_to_product": {
                "enum": [
                  "product"
                ]
              }
            }
          }
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/VolumeBasedCouponPromotion",
          "description": "API reference for the VolumeBasedCouponPromotion schema"
        },
        "title": "VolumeBasedCouponPromotion"
      },
      "VolumeBasedPromotion": {
        "type": "object",
        "properties": {
          "promotion_type": {
            "type": "string",
            "enum": [
              "discount",
              "volume-based",
              "fixed-price",
              "free-goods"
            ],
            "const": "volume-based",
            "readOnly": true
          },
          "slabs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "quantity_limit": {
                  "description": "The minimum quantity required to qualify for the discount.",
                  "type": "integer"
                },
                "discount_percent": {
                  "description": "The percentage discount applied when the quantity limit is reached.",
                  "type": "number",
                  "readOnly": true
                }
              },
              "required": [
                "quantity_limit",
                "discount_percent"
              ]
            }
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/VolumeBasedPromotion",
          "description": "API reference for the VolumeBasedPromotion schema"
        },
        "required": [
          "promotion_type",
          "slabs"
        ],
        "title": "VolumeBasedPromotion"
      },
      "VolumeBasedRule": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "product_id",
                "variant_id",
                "slabs"
              ],
              "properties": {
                "product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "slabs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "quantity",
                      "condition",
                      "discount_percent"
                    ],
                    "properties": {
                      "quantity": {
                        "type": "integer"
                      },
                      "condition": {
                        "enum": [
                          "less-or-equal",
                          "greater"
                        ]
                      },
                      "discount_percent": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          },
          "maximum_discount_amount": {
            "type": [
              "number",
              "null"
            ]
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/VolumeBasedRule",
          "description": "API reference for the VolumeBasedRule schema"
        },
        "required": [
          "products",
          "maximum_discount_amount"
        ],
        "title": "VolumeBasedRule"
      },
      "WalletPayment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentInfo"
          },
          {
            "type": "object",
            "properties": {
              "wallet_name": {
                "type": "string"
              }
            }
          }
        ],
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/schemas/WalletPayment",
          "description": "API reference for the WalletPayment schema"
        },
        "title": "WalletPayment"
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "x-speakeasy-error-message": true
                },
                "success": {
                  "type": "boolean"
                },
                "code": {
                  "type": "string"
                },
                "error": {
                  "type": "object"
                }
              },
              "required": [
                "message",
                "success",
                "code"
              ]
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Not authorized for given operation on the Resource",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "examples": [
                    "Not authorized for given operation on the Resource."
                  ],
                  "x-speakeasy-error-message": true
                },
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "code": {
                  "type": "string",
                  "examples": [
                    "unauthorized"
                  ]
                }
              },
              "required": [
                "message",
                "success",
                "code"
              ]
            }
          }
        }
      },
      "NotFound": {
        "description": "Requested resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "x-speakeasy-error-message": true
                },
                "success": {
                  "type": "boolean"
                },
                "code": {
                  "type": "string"
                }
              },
              "required": [
                "message",
                "success",
                "code"
              ]
            }
          }
        }
      },
      "WebhookAccepted": {
        "description": "Payload accepted"
      },
      "WebhookGone": {
        "description": "Endpoint permanently removed"
      },
      "WebhookServerError": {
        "description": "Temporary server error â€” we will retry"
      }
    },
    "parameters": {
      "CustomerGroupId": {
        "name": "x-customer-group-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "This param is used to determine product pricing, promotions, and subscription rates.  If a valid customer group id is provided, pricing details will be retrieved accordingly.  If no matching data is found for the specified customer group id, the system will fall back to the default customer group id.  If no data is found for the default group either, the highest applicable price will be returned."
      },
      "pageLimitParam": {
        "name": "limit",
        "in": "query",
        "description": "no of rows per page",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1
        }
      },
      "pageParam": {
        "name": "page",
        "in": "query",
        "description": "page number of pagination list",
        "required": false,
        "schema": {
          "type": "number",
          "minimum": 1
        }
      },
      "searchKeyword": {
        "name": "search",
        "in": "query",
        "description": "search keyword",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "sortingParam": {
        "name": "sort_by",
        "in": "query",
        "description": "JSON string format: {\"field1\":\"asc\", \"field2\":\"desc\"}",
        "required": false,
        "schema": {
          "description": "json string in format {'field_name':'asc', 'other_field_name':'desc', ...}",
          "type": "string",
          "examples": [
            "{\"country\":\"asc\",\"city\":\"asc\",\"population\":\"desc\"}"
          ]
        }
      }
    },
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {
      "Authorization": {
        "type": "http",
        "description": "Access token",
        "scheme": "bearer"
      },
      "X-Api-Key": {
        "type": "apiKey",
        "description": "API key for your store",
        "name": "X-Api-Key",
        "in": "header"
      }
    }
  },
  "webhooks": {
    "order.created": {
      "post": {
        "operationId": "order-created",
        "summary": "Order created",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDetail"
              }
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "410": {
            "$ref": "#/components/responses/WebhookGone"
          },
          "2XX": {
            "$ref": "#/components/responses/WebhookAccepted"
          },
          "5XX": {
            "$ref": "#/components/responses/WebhookServerError"
          }
        }
      }
    },
    "order.confirmed": {
      "post": {
        "operationId": "order-confirmed",
        "summary": "Order confirmed",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDetail"
              }
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "410": {
            "$ref": "#/components/responses/WebhookGone"
          },
          "2XX": {
            "$ref": "#/components/responses/WebhookAccepted"
          },
          "5XX": {
            "$ref": "#/components/responses/WebhookServerError"
          }
        }
      }
    },
    "order.cancelled": {
      "post": {
        "operationId": "order-cancelled",
        "summary": "Order cancelled",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDetail"
              }
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "410": {
            "$ref": "#/components/responses/WebhookGone"
          },
          "2XX": {
            "$ref": "#/components/responses/WebhookAccepted"
          },
          "5XX": {
            "$ref": "#/components/responses/WebhookServerError"
          }
        }
      }
    },
    "order.completed": {
      "post": {
        "operationId": "order-completed",
        "summary": "Order completed",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDetail"
              }
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "410": {
            "$ref": "#/components/responses/WebhookGone"
          },
          "2XX": {
            "$ref": "#/components/responses/WebhookAccepted"
          },
          "5XX": {
            "$ref": "#/components/responses/WebhookServerError"
          }
        }
      }
    },
    "payment.success": {
      "post": {
        "operationId": "payment-success",
        "summary": "Payment successful",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderPayment"
              }
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "410": {
            "$ref": "#/components/responses/WebhookGone"
          },
          "2XX": {
            "$ref": "#/components/responses/WebhookAccepted"
          },
          "5XX": {
            "$ref": "#/components/responses/WebhookServerError"
          }
        }
      }
    },
    "payment.failed": {
      "post": {
        "operationId": "payment-failed",
        "summary": "Payment failed",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderPayment"
              }
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "410": {
            "$ref": "#/components/responses/WebhookGone"
          },
          "2XX": {
            "$ref": "#/components/responses/WebhookAccepted"
          },
          "5XX": {
            "$ref": "#/components/responses/WebhookServerError"
          }
        }
      }
    },
    "payment.retried": {
      "post": {
        "operationId": "payment-retried",
        "summary": "Payment retried",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInfo"
              }
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "410": {
            "$ref": "#/components/responses/WebhookGone"
          },
          "2XX": {
            "$ref": "#/components/responses/WebhookAccepted"
          },
          "5XX": {
            "$ref": "#/components/responses/WebhookServerError"
          }
        }
      }
    },
    "shipment.created": {
      "post": {
        "operationId": "shipment-created",
        "summary": "Shipment created",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderShipment"
              }
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "410": {
            "$ref": "#/components/responses/WebhookGone"
          },
          "2XX": {
            "$ref": "#/components/responses/WebhookAccepted"
          },
          "5XX": {
            "$ref": "#/components/responses/WebhookServerError"
          }
        }
      }
    },
    "shipment.updated": {
      "post": {
        "operationId": "shipment-updated",
        "summary": "Shipment updated",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderShipment"
              }
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "410": {
            "$ref": "#/components/responses/WebhookGone"
          },
          "2XX": {
            "$ref": "#/components/responses/WebhookAccepted"
          },
          "5XX": {
            "$ref": "#/components/responses/WebhookServerError"
          }
        }
      }
    },
    "shipment.cancelled": {
      "post": {
        "operationId": "shipment-cancelled",
        "summary": "Shipment cancelled",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderShipment"
              }
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "410": {
            "$ref": "#/components/responses/WebhookGone"
          },
          "2XX": {
            "$ref": "#/components/responses/WebhookAccepted"
          },
          "5XX": {
            "$ref": "#/components/responses/WebhookServerError"
          }
        }
      }
    },
    "shipment.delivered": {
      "post": {
        "operationId": "shipment-delivered",
        "summary": "Shipment delivered",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderShipment"
              }
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "410": {
            "$ref": "#/components/responses/WebhookGone"
          },
          "2XX": {
            "$ref": "#/components/responses/WebhookAccepted"
          },
          "5XX": {
            "$ref": "#/components/responses/WebhookServerError"
          }
        }
      }
    },
    "payment.refund.initiated": {
      "post": {
        "operationId": "payment-refund-created",
        "summary": "Refund initiated",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRefund"
              }
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "410": {
            "$ref": "#/components/responses/WebhookGone"
          },
          "2XX": {
            "$ref": "#/components/responses/WebhookAccepted"
          },
          "5XX": {
            "$ref": "#/components/responses/WebhookServerError"
          }
        }
      }
    },
    "payment.refund.success": {
      "post": {
        "operationId": "payment-refund-success",
        "summary": "Refund successful",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRefund"
              }
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "410": {
            "$ref": "#/components/responses/WebhookGone"
          },
          "2XX": {
            "$ref": "#/components/responses/WebhookAccepted"
          },
          "5XX": {
            "$ref": "#/components/responses/WebhookServerError"
          }
        }
      }
    },
    "payment.refund.failed": {
      "post": {
        "operationId": "payment-refund-failed",
        "summary": "Refund failed",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRefund"
              }
            }
          }
        },
        "responses": {
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "410": {
            "$ref": "#/components/responses/WebhookGone"
          },
          "2XX": {
            "$ref": "#/components/responses/WebhookAccepted"
          },
          "5XX": {
            "$ref": "#/components/responses/WebhookServerError"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Analytics",
      "description": "Analytics"
    },
    {
      "name": "Auth",
      "description": "auth"
    },
    {
      "name": "Campaigns",
      "description": "Campaigns"
    },
    {
      "name": "Carts",
      "description": "Carts"
    },
    {
      "name": "Catalog",
      "description": "Catalog"
    },
    {
      "name": "Common",
      "description": "Common"
    },
    {
      "name": "Coupons & promotions",
      "description": "Coupons & promotions"
    },
    {
      "name": "Customers",
      "description": "Customers"
    },
    {
      "name": "Juspay",
      "description": "Juspay Payments"
    },
    {
      "name": "KYC",
      "description": "KYC"
    },
    {
      "name": "Orders",
      "description": "Orders"
    },
    {
      "name": "Others",
      "description": "Others"
    },
    {
      "name": "Payments",
      "description": "Payments"
    },
    {
      "name": "PayU",
      "description": "PayU Payments"
    },
    {
      "name": "POS",
      "description": "POS"
    },
    {
      "name": "Shipping",
      "description": "Shipping"
    },
    {
      "name": "Store",
      "description": "Store"
    },
    {
      "name": "Subscriptions",
      "description": "Subscriptions"
    }
  ],
  "externalDocs": {
    "url": "https://llm-docs.commercengine.io",
    "description": "Commerce Engine API Reference Documentation"
  }
}