{
  "openapi": "3.1.0",
  "info": {
    "title": "CE Admin APIs",
    "version": "1.0",
    "summary": "Comprehensive admin interface for managing your e-commerce platform",
    "description": "Complete administrative API suite for Commerce Engine, providing powerful tools to manage products, orders, customers, inventory, analytics, and system configuration. Designed for administrators and backend integrations requiring full platform control.",
    "license": {
      "name": "All Rights Reserved",
      "url": "https://www.commercengine.io/contact-us"
    },
    "contact": {
      "email": "support@commercengine.io",
      "url": "https://www.commercengine.io/contact-us",
      "name": "Support"
    }
  },
  "servers": [
    {
      "url": "https://staging.api.commercengine.io/api/v1/{store_id}/admin",
      "description": "Staging Server",
      "variables": {
        "store_id": {
          "default": "store_id",
          "description": "Store ID"
        }
      }
    },
    {
      "url": "https://prod.api.commercengine.io/api/v1/{store_id}/admin",
      "description": "Prod Server",
      "variables": {
        "store_id": {
          "default": "store_id",
          "description": "Store ID"
        }
      }
    }
  ],
  "paths": {
    "/analytics/dynamic-query": {
      "post": {
        "operationId": "execute-dynamic-query",
        "summary": "Dynamic query",
        "description": "Retrive analytics data as per dynamic query passed.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AnalyticsStats"
                  },
                  {
                    "$ref": "#/components/schemas/AnalyticsRecords"
                  }
                ]
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "schema_name": "analytics_log",
                    "query_type": "stats",
                    "query": {
                      "aggregate": [
                        {
                          "type": "COUNT",
                          "field_name": "id",
                          "alias": "events_count"
                        }
                      ],
                      "group_by": {
                        "fields": "origin_source",
                        "having_condition": [
                          {
                            "field_name": "events_count",
                            "operator": "greater",
                            "value": 2000
                          }
                        ]
                      },
                      "filters": [
                        {
                          "field_name": "origin_source",
                          "operator": "is-not-empty",
                          "value": null
                        }
                      ],
                      "sort_by": {
                        "origin_source": "asc"
                      },
                      "limit": 25,
                      "offset": 0
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "content": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/DynamicQueryRecords"
                        },
                        {
                          "$ref": "#/components/schemas/DynamicQueryStatsData"
                        },
                        {
                          "$ref": "#/components/schemas/DynamicQueryMetricsData"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/events/{id}": {
      "get": {
        "operationId": "get-analytics-event-detail",
        "summary": "Retrieve an event detail",
        "description": "Retrieve an event detail.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "event_detail": {
                          "description": "rows returned by raw query passed in request body.",
                          "$ref": "#/components/schemas/AnalyticsEventSchemaDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Analytics"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "event id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/analytics/raw-query": {
      "post": {
        "operationId": "execute-raw-query",
        "summary": "Raw query",
        "description": "Retrive data as per raw query passed.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "raw_query": {
                    "type": "string"
                  }
                },
                "required": [
                  "raw_query"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "data": {
                          "description": "rows returned by raw query passed in request body.",
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Analytics"
        ]
      },
      "parameters": []
    },
    "/catalog/attributes": {
      "get": {
        "operationId": "list-product-attributes",
        "summary": "List all attributes",
        "description": "list all attributes",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "attributes": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Attribute"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "post": {
        "operationId": "create-product-attribute",
        "summary": "Create attribute",
        "description": "create attribute",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAttribute"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "attribute": {
                          "$ref": "#/components/schemas/Attribute"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      }
    },
    "/catalog/attributes/{id}": {
      "get": {
        "operationId": "get-product-attribute",
        "summary": "Retrieve attribute",
        "description": "retrieve attribute",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "attribute": {
                          "$ref": "#/components/schemas/Attribute"
                        },
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductBasicDetail"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "put": {
        "operationId": "update-product-attribute",
        "summary": "Update attribute",
        "description": "update attribute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attribute"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "attribute": {
                          "$ref": "#/components/schemas/Attribute"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "delete": {
        "operationId": "delete-product-attribute",
        "summary": "Delete attribute",
        "description": "delete attribute",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "attribute ulid",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/catalog/categories": {
      "get": {
        "operationId": "list-categories",
        "summary": "List all categories",
        "description": "list all categories",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          },
          {
            "name": "category_name",
            "in": "query",
            "description": "use to check duplicity",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nested_level",
            "in": "query",
            "description": "to return categories upto specified nested level",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "parent_category_id",
            "in": "query",
            "description": "to return child categories",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "categories": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Category"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "post": {
        "operationId": "create-category",
        "summary": "Create category",
        "description": "create new category",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "category": {
                          "$ref": "#/components/schemas/CategoryDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      }
    },
    "/catalog/categories/{id}": {
      "get": {
        "operationId": "get-category",
        "summary": "Retrieve category",
        "description": "retrieve category",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "category": {
                          "$ref": "#/components/schemas/CategoryDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "put": {
        "operationId": "update-category",
        "summary": "Update category",
        "description": "update category",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryDetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "category": {
                          "$ref": "#/components/schemas/CategoryDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "delete": {
        "operationId": "delete-category",
        "summary": "Delete category",
        "description": "delete category",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "category id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/catalog/integration-sync": {
      "get": {
        "operationId": "get-sync-status",
        "summary": "Retrive data sync detail",
        "description": "Retrive data sync detail",
        "parameters": [
          {
            "name": "destination",
            "in": "query",
            "description": "integration destination",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "datocms"
              ]
            }
          },
          {
            "name": "model",
            "in": "query",
            "description": "model",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "product",
                "category",
                "bundle"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "sync_summary": {
                          "$ref": "#/components/schemas/CatalogDataSyncSummary"
                        },
                        "sync_items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CatalogDataSyncItem",
                            "type": "object"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Catalog"
        ]
      },
      "post": {
        "operationId": "trigger-sync",
        "summary": "Create request for data syncing",
        "description": "Create request for data syncing",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "destination": {
                    "enum": [
                      "datocms"
                    ]
                  },
                  "model": {
                    "enum": [
                      "product",
                      "category",
                      "bundle"
                    ]
                  }
                },
                "required": [
                  "destination"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Catalog"
        ]
      },
      "parameters": []
    },
    "/catalog/integration-sync/{item_id}": {
      "get": {
        "operationId": "get-item-sync",
        "summary": "Retrive item sync detail",
        "description": "Retrive item sync detail",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "sync": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "destination_name": {
                                "type": "string"
                              },
                              "destination_item_id": {
                                "type": "string"
                              },
                              "last_sync_time": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Catalog"
        ]
      },
      "parameters": [
        {
          "name": "item_id",
          "in": "path",
          "description": "commercengine id of a product, category, variant",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/catalog/integration-sync/{item_id}/activity": {
      "get": {
        "operationId": "list-sync-activity",
        "summary": "List all item sync activity",
        "description": "List all item sync activity",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "sync_activity": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "destination_name": {
                                "type": "string"
                              },
                              "destination_item_id": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "status_code": {
                                "type": "string"
                              },
                              "request_json": {
                                "type": "object"
                              },
                              "response_json": {
                                "type": "object"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Catalog"
        ]
      },
      "parameters": [
        {
          "name": "item_id",
          "in": "path",
          "description": "commercengine id of a product, category, variant",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/catalog/products": {
      "get": {
        "operationId": "list-products",
        "summary": "List all products",
        "description": "list all products",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          },
          {
            "name": "active",
            "in": "query",
            "description": "active flag",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Product"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "post": {
        "operationId": "create-product",
        "summary": "Create product",
        "description": "This endpoint allows you to create a draft product by specifying its name and type. The product is created in its preliminary stage. All additional product details, including descriptions, pricing, and images, etc, can be updated using the Update Product API endpoint.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDraftProduct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "product": {
                          "$ref": "#/components/schemas/ProductDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "parameters": []
    },
    "/catalog/products/bulk-delete": {
      "post": {
        "operationId": "bulk-delete-products",
        "summary": "Bulk delete products",
        "description": "Deleting multiple products in single request.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_id": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "product_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "parameters": []
    },
    "/catalog/products/bulk-update": {
      "post": {
        "operationId": "bulk-update-products",
        "summary": "Bulk update products",
        "description": "Update specific fields of multiple products in single request.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_id": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "category_id": {
                    "description": "if null value is passed, then categories will be removed from the specified products.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "status": {
                    "enum": [
                      "active",
                      "inactive"
                    ]
                  },
                  "stock_available": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "product_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "parameters": []
    },
    "/catalog/products/check-inventory": {
      "post": {
        "operationId": "check-product-inventory",
        "summary": "Check inventory",
        "description": "Retrieve products and variants inventory as per product ids and variant ids provided. To be used in S2S API call only.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "products": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "product_id",
                        "variant_id",
                        "quantity"
                      ],
                      "properties": {
                        "product_id": {
                          "type": "string"
                        },
                        "variant_id": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "warehouse_id": {
                    "description": "Optional: Provide array of warehouse id to check inventory for a specific warehouses.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "products"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "$ref": "#/components/schemas/InventoryCheckResponse"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "parameters": []
    },
    "/catalog/products/{id}": {
      "get": {
        "operationId": "get-product",
        "summary": "Retrieve product details",
        "description": "Retrieve product details",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "product": {
                          "$ref": "#/components/schemas/ProductDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "put": {
        "operationId": "update-product",
        "summary": "Update product details",
        "description": "This API endpoint allows for partial updates to product details, enabling you to modify specific attributes like pricing, descriptions, images, promotions, subscriptions, and more, without altering the entire product record. To optimize performance, please include only the fields that need updating. For fields that contain objects or arrays (e.g., shipping, promotions, images, pricing, categories, attributes, bundle_items, related_products), send the complete data for these fields, as the existing data will be replaced entirely.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProduct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "product": {
                          "$ref": "#/components/schemas/ProductDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "delete": {
        "operationId": "delete-product",
        "summary": "Delete product",
        "description": "Delete product",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "product id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/catalog/products/{id}/inventory": {
      "get": {
        "operationId": "get-inventory",
        "summary": "Retrieve product inventory",
        "description": "Retrieve product inventory",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "inventory": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductInventory"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "post": {
        "operationId": "update-inventory",
        "summary": "Update Product Inventory",
        "description": "Update product inventory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductInventory"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "inventory": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductInventory"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Catalog"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "product id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/catalog/products/{id}/inventory-activity": {
      "get": {
        "operationId": "list-product-inventory-activity",
        "summary": "List all inventory activities",
        "description": "List all inventory activities",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "inventory_activities": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/ProductInventoryActivity"
                              }
                            ]
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "post": {
        "operationId": "create-inventory-activity",
        "summary": "Create inventory activity",
        "description": "Create inventory activity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductInventoryActivity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "inventory_activity": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/ProductInventoryActivity"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "warehouse": {
                                  "$ref": "#/components/schemas/Warehouse"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "product id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/catalog/products/{id}/shipper-boxes": {
      "get": {
        "operationId": "list-shipper-boxes",
        "summary": "List all shipper boxes",
        "description": "List all shipper boxes",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "shipper_boxes": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ShipperBox"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "product id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/catalog/products/{id}/variants": {
      "get": {
        "operationId": "list-variants",
        "summary": "List all product variants",
        "description": "List all product variants",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "variants": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Variant"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "post": {
        "operationId": "create-variant",
        "summary": "Create variant",
        "description": "Create variant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateVariant"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "variants": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/VariantDetail"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Catalog"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "product id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/catalog/products/{id}/variants/bulk-update": {
      "post": {
        "operationId": "bulk-update-variants",
        "summary": "Update variants in bulk",
        "description": "Update shipping and packaging details of multiple variants.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VariantBulkUpdate"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "variants": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/VariantBulkUpdate"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Catalog"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "product id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/catalog/products/{id}/variants/{variant_id}": {
      "get": {
        "operationId": "get-variant",
        "summary": "Retrieve a variant details",
        "description": "Retrieve a product variant details",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "variant": {
                          "$ref": "#/components/schemas/VariantDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Catalog"
        ]
      },
      "put": {
        "operationId": "update-variant",
        "summary": "Update a variant",
        "description": "Update a variant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVariant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "variant": {
                          "$ref": "#/components/schemas/VariantDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Catalog"
        ]
      },
      "delete": {
        "operationId": "delete-variant",
        "summary": "Delete a variant",
        "description": "Delete a variant",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Catalog"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "product id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "variant_id",
          "in": "path",
          "description": "variant id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/catalog/products/{product_id}/reviews": {
      "get": {
        "operationId": "list-reviews",
        "summary": "List product reviews",
        "description": "List product reviews",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "reviews": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductReview"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "product Ulid",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/catalog/products/{product_id}/reviews/{id}": {
      "get": {
        "operationId": "get-review",
        "summary": "Retrieve product review",
        "description": "Retrieve product review",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "review": {
                          "$ref": "#/components/schemas/ProductReview"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "put": {
        "operationId": "update-review",
        "summary": "Update product review",
        "description": "Update product review",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "enum": [
                      "pending",
                      "approved",
                      "rejected",
                      "archived"
                    ]
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "is_featured": {
                    "type": "boolean"
                  },
                  "review_reply": {
                    "type": "string"
                  },
                  "images": {
                    "description": "array of file ids",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "videos": {
                    "description": "array of file ids",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "review": {
                          "$ref": "#/components/schemas/ProductReview"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Catalog"
        ]
      },
      "delete": {
        "operationId": "delete-review",
        "summary": "Delete product review",
        "description": "Delete product review",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Catalog"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "review Ulid",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "product_id",
          "in": "path",
          "description": "product Ulid",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/catalog/skus": {
      "get": {
        "operationId": "list-skus",
        "summary": "List all SKUs",
        "description": "List all SKUs",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "skus": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductBasicDetail"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Catalog"
        ]
      }
    },
    "/offer/coupons": {
      "get": {
        "operationId": "list-coupons",
        "summary": "List all coupons",
        "description": "List all coupons",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "coupons": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Coupon"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "post": {
        "operationId": "create-coupon",
        "summary": "Create coupon",
        "description": "Create coupon",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Coupon"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "coupon": {
                          "$ref": "#/components/schemas/CouponDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Coupons \u0026 promotions"
        ]
      }
    },
    "/offer/coupons/{id}": {
      "get": {
        "operationId": "get-coupon",
        "summary": "Retrieve coupon detail",
        "description": "Retrieve coupon detail",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "coupon": {
                          "$ref": "#/components/schemas/CouponDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "put": {
        "operationId": "update-coupon",
        "summary": "Update coupon",
        "description": "Update coupon",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Coupon"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "coupon": {
                          "$ref": "#/components/schemas/CouponDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "delete": {
        "operationId": "delete-coupon",
        "summary": "Delete a coupon",
        "description": "Delete a coupon",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "coupon id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/offer/coupons/{id}/codes": {
      "get": {
        "operationId": "list-codes",
        "summary": "List all coupon codes",
        "description": "List all coupon codes.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "codes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "post": {
        "operationId": "create-codes",
        "summary": "Add coupon code",
        "description": "Add coupon code",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "coupon_code": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "coupon id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/offer/coupons/{id}/customers": {
      "get": {
        "operationId": "list-coupon-customers",
        "summary": "List all coupon customers",
        "description": "List all coupon customers",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "customers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "coupon id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/offer/coupons/{id}/usage/customers": {
      "get": {
        "operationId": "list-coupon-usage-customers",
        "summary": "List all coupon customers",
        "description": "List all customers who used the specified coupon at least once.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "customers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "customer_id": {
                                "type": "string"
                              },
                              "customer_name": {
                                "type": "string"
                              },
                              "order_number": {
                                "type": "string"
                              },
                              "order_count": {
                                "type": "integer"
                              },
                              "total_order_amount": {
                                "type": "number"
                              },
                              "redemption": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "modified_at": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "coupon id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/offer/coupons/{id}/usage/orders": {
      "get": {
        "operationId": "list-coupon-usage-orders",
        "summary": "List all coupon orders",
        "description": "List all coupon orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "orders": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "customer_id": {
                                "type": "string"
                              },
                              "order_number": {
                                "type": "string"
                              },
                              "order_date": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "order_amount": {
                                "type": "number"
                              },
                              "coupon_code": {
                                "type": "string"
                              },
                              "redemtion_date": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "modified_at": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "coupon id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/offer/promotions": {
      "get": {
        "operationId": "list-promotions",
        "summary": "List all promotions",
        "description": "List all promotions",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "promotions": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Promotion"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "post": {
        "operationId": "create-promotion",
        "summary": "Create promotion",
        "description": "Create promotion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Promotion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Coupons \u0026 promotions"
        ]
      }
    },
    "/offer/promotions/{id}": {
      "get": {
        "operationId": "get-promotion",
        "summary": "Retrieve promotion details",
        "description": "Retrieve promotion details",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "promotion": {
                          "$ref": "#/components/schemas/PromotionDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "put": {
        "operationId": "update-promotion",
        "summary": "Update promotion",
        "description": "Update promotion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Promotion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "promotion": {
                          "$ref": "#/components/schemas/PromotionDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "delete": {
        "operationId": "delete-promotion",
        "summary": "Delete Promotion",
        "description": "Delete specific promotion",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "promotion id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/offer/promotions/{id}/customers": {
      "get": {
        "operationId": "list-promotion-customers",
        "summary": "List all promotion customers",
        "description": "List all promotion customers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "customer_id": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "segment_id": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "promotion id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers": {
      "get": {
        "operationId": "list-customers",
        "summary": "List all customers",
        "description": "List all customers",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "customers": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Customer"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "post": {
        "operationId": "create-customer",
        "summary": "Create customer",
        "description": "Create customer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "customer": {
                          "$ref": "#/components/schemas/Customer"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": []
    },
    "/customers/attributes": {
      "get": {
        "operationId": "list-customer-attributes",
        "summary": "List all attributes",
        "description": "List all attributes",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "attributes": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CustomerAttribute"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "post": {
        "operationId": "create-customer-attribute",
        "summary": "Create an attribute",
        "description": "Create an attribute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerAttribute"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "attribute": {
                          "$ref": "#/components/schemas/CustomerAttribute"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": []
    },
    "/customers/attributes/{id}": {
      "get": {
        "operationId": "get-customer-attribute",
        "summary": "Retrieve attribute detail",
        "description": "Retrieve attribute detail",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "attribute": {
                          "$ref": "#/components/schemas/CustomerAttribute"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "put": {
        "operationId": "update-customer-attribute",
        "summary": "Update an attribute",
        "description": "Update an attribute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerAttribute"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "attribute": {
                          "$ref": "#/components/schemas/CustomerAttribute"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "delete": {
        "operationId": "delete-customer-attribute",
        "summary": "Delete an attribute",
        "description": "Delete an attribute",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "attribute id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/loyalty-members": {
      "get": {
        "operationId": "list-loyalty-members",
        "summary": "List all loyalty members",
        "description": "List all loyalty members",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "loyalty_members": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/LoyaltyMember"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": []
    },
    "/customers/loyalty-program": {
      "get": {
        "operationId": "list-loyalty-programs",
        "summary": "List all loyalty program",
        "description": "List all loyalty program",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "loyalty_programs": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/LoyaltyProgram"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "post": {
        "operationId": "create-loyalty-program",
        "summary": "Create loyalty program",
        "description": "Create loyalty program",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltyProgram"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "loyalty_program": {
                          "$ref": "#/components/schemas/LoyaltyProgram"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      }
    },
    "/customers/loyalty-program/{id}": {
      "get": {
        "operationId": "get-loyalty-program-detail",
        "summary": "Retrieve loyalty program detail",
        "description": "Retrieve loyalty program detail",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "loyalty_program": {
                          "$ref": "#/components/schemas/LoyaltyProgram"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "put": {
        "operationId": "update-loyalty-program",
        "summary": "Update loyalty program detail",
        "description": "Update loyalty program detail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltyProgram"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "loyalty_program": {
                          "$ref": "#/components/schemas/LoyaltyProgram"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "delete": {
        "operationId": "delete-loyalty-program",
        "summary": "Delete loyalty program",
        "description": "Delete loyalty program",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "loyalty program id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/visitors": {
      "get": {
        "operationId": "list-visitors",
        "summary": "List all visitors",
        "description": "List all visitors",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "visitors": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Visitor"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": []
    },
    "/customers/visitors/{id}": {
      "get": {
        "operationId": "get-visitor-detail",
        "summary": "Retrieve visitor detail",
        "description": "Retrieve visitor detail",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "visitor": {
                          "$ref": "#/components/schemas/VisitorDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "visitor id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/visitors/{id}/activities": {
      "get": {
        "operationId": "list-visitor-activity",
        "summary": "List all activities",
        "description": "List all activities",
        "parameters": [
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "activities": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CustomerActivity"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "visitor id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/visitors/{id}/attributes": {
      "get": {
        "operationId": "list-visitor-attributes",
        "summary": "List all visitor attributes",
        "description": "List all visitor attributes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "attributes": {
                          "type": "array",
                          "items": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/StringAttribute"
                              },
                              {
                                "$ref": "#/components/schemas/IntegerAttribute"
                              },
                              {
                                "$ref": "#/components/schemas/NumberAttribute"
                              },
                              {
                                "$ref": "#/components/schemas/BooleanAttribute"
                              },
                              {
                                "$ref": "#/components/schemas/ListAttribute"
                              },
                              {
                                "$ref": "#/components/schemas/ObjectAttribute"
                              },
                              {
                                "$ref": "#/components/schemas/DateTimeAttribute"
                              }
                            ],
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "post": {
        "operationId": "create-visitor-attribute",
        "summary": "Create an attribute",
        "description": "Create an attribute",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/StringAttribute"
                  },
                  {
                    "$ref": "#/components/schemas/IntegerAttribute"
                  },
                  {
                    "$ref": "#/components/schemas/NumberAttribute"
                  },
                  {
                    "$ref": "#/components/schemas/BooleanAttribute"
                  },
                  {
                    "$ref": "#/components/schemas/ListAttribute"
                  },
                  {
                    "$ref": "#/components/schemas/ObjectAttribute"
                  },
                  {
                    "$ref": "#/components/schemas/DateTimeAttribute"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "visitor id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/visitors/{id}/attributes/{attribute_id}": {
      "put": {
        "operationId": "update-visitor-attribute",
        "summary": "Update visitor attribute",
        "description": "Update visitor attribute",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "value": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      {
                        "type": "object"
                      },
                      {
                        "type": "string",
                        "format": "date-time"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "delete": {
        "operationId": "delete-visitor-attribute",
        "summary": "Delete visitor attribute",
        "description": "Delete visitor attribute",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": [
        {
          "name": "attribute_id",
          "in": "path",
          "description": "attribute id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "id",
          "in": "path",
          "description": "visitor id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/{id}": {
      "get": {
        "operationId": "get-customer-detail",
        "summary": "Retrieve customer detail",
        "description": "Retrieve customer detail",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "customer": {
                          "$ref": "#/components/schemas/CustomerDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Customer Id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/{id}/activities": {
      "get": {
        "operationId": "list-customer-activity",
        "summary": "List all activities",
        "description": "List all activities",
        "parameters": [
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "activities": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CustomerActivity"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "customer id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/{id}/addresses": {
      "get": {
        "operationId": "list-addresses",
        "summary": "List all addresses",
        "description": "List all addresses",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "addresses": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Address"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "post": {
        "operationId": "create-address",
        "summary": "Create address",
        "description": "Create address",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/Address"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "address": {
                          "$ref": "#/components/schemas/Address"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "customer id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/{id}/addresses/{address_id}": {
      "put": {
        "operationId": "update-address",
        "summary": "Update address detail",
        "description": "Update address detail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/Address"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "address": {
                          "$ref": "#/components/schemas/Address"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "delete": {
        "operationId": "delete-address",
        "summary": "Delete address",
        "description": "Delete address",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": [
        {
          "name": "address_id",
          "in": "path",
          "description": "address id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "id",
          "in": "path",
          "description": "customer id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/{id}/attributes": {
      "get": {
        "operationId": "list-user-attributes",
        "summary": "List all customer attributes",
        "description": "List all customer attributes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "attributes": {
                          "type": "array",
                          "items": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/StringAttribute"
                              },
                              {
                                "$ref": "#/components/schemas/IntegerAttribute"
                              },
                              {
                                "$ref": "#/components/schemas/NumberAttribute"
                              },
                              {
                                "$ref": "#/components/schemas/BooleanAttribute"
                              },
                              {
                                "$ref": "#/components/schemas/ListAttribute"
                              },
                              {
                                "$ref": "#/components/schemas/ObjectAttribute"
                              },
                              {
                                "$ref": "#/components/schemas/DateTimeAttribute"
                              }
                            ],
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "post": {
        "operationId": "create-user-attribute",
        "summary": "Create an attribute",
        "description": "Create an attribute",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/StringAttribute"
                  },
                  {
                    "$ref": "#/components/schemas/IntegerAttribute"
                  },
                  {
                    "$ref": "#/components/schemas/NumberAttribute"
                  },
                  {
                    "$ref": "#/components/schemas/BooleanAttribute"
                  },
                  {
                    "$ref": "#/components/schemas/ListAttribute"
                  },
                  {
                    "$ref": "#/components/schemas/ObjectAttribute"
                  },
                  {
                    "$ref": "#/components/schemas/DateTimeAttribute"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "customer id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/{id}/attributes/{attribute_id}": {
      "put": {
        "operationId": "update-user-attribute",
        "summary": "Update customer attribute",
        "description": "Update customer attribute",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "value": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      {
                        "type": "object"
                      },
                      {
                        "type": "string",
                        "format": "date-time"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "delete": {
        "operationId": "delete-user-attribute",
        "summary": "Delete customer attribute",
        "description": "Delete customer attribute",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": [
        {
          "name": "attribute_id",
          "in": "path",
          "description": "attribute id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "id",
          "in": "path",
          "description": "customer id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/{id}/banking": {
      "get": {
        "operationId": "list-bank-accounts",
        "summary": "List all bank accounts",
        "description": "List all bank accounts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "bank_accounts": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/BusinessBanking"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "post": {
        "operationId": "create-bank-account",
        "summary": "Create bank account",
        "description": "Create bank account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessBanking"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "bank_account": {
                          "$ref": "#/components/schemas/BusinessBanking"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "customer id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/{id}/banking/{bank_account_id}": {
      "get": {
        "operationId": "get-bank-account-detail",
        "summary": "Retrieve bank account detail",
        "description": "Retrieve bank account detail",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "bank_account": {
                          "$ref": "#/components/schemas/BusinessBanking"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "put": {
        "operationId": "update-bank-account",
        "summary": "Update bank account detail",
        "description": "Update bank account detail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessBanking"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "bank_account": {
                          "$ref": "#/components/schemas/BusinessBanking"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "delete": {
        "operationId": "delete-bank-account",
        "summary": "Delete bank account",
        "description": "Delete bank account",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": [
        {
          "name": "bank_account_id",
          "in": "path",
          "description": "bank account id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "id",
          "in": "path",
          "description": "customer id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/{id}/documents": {
      "get": {
        "operationId": "list-customer-kyc-documents",
        "summary": "List all documents",
        "description": "List all documents",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "documents": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/KycDocument"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "post": {
        "operationId": "create-customer-kyc-document",
        "summary": "Create document",
        "description": "Create document",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/KycDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "document": {
                          "$ref": "#/components/schemas/KycDocument"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "customer id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/{id}/documents/{document_id}": {
      "get": {
        "operationId": "get-customer-kyc-document-detail",
        "summary": "Retrieve document detail",
        "description": "Retrieve document detail",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "document": {
                          "$ref": "#/components/schemas/KycDocument"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "put": {
        "operationId": "update-customer-kyc-document",
        "summary": "Update document detail",
        "description": "Update document detail",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/UpdateKycDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "document": {
                          "$ref": "#/components/schemas/KycDocument"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "delete": {
        "operationId": "delete-customer-kyc-document",
        "summary": "Delete document",
        "description": "Delete document",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": [
        {
          "name": "document_id",
          "in": "path",
          "description": "document id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "id",
          "in": "path",
          "description": "customer id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/{id}/loyalty-point-activities": {
      "get": {
        "operationId": "list-loyalty-activity",
        "summary": "List all loyalty point activities",
        "description": "List all loyalty point activities",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "activities": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/LoyaltyPointActivity"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "post": {
        "operationId": "create-loyalty-activity",
        "summary": "Create loyalty point activity",
        "description": "Create loyalty point activity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoyaltyPointActivity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "activity": {
                          "$ref": "#/components/schemas/LoyaltyPointActivity"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "customer id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/{id}/loyalty-tier-activities": {
      "get": {
        "operationId": "list-loyalty-tier-activity",
        "summary": "List all loyalty tier activities",
        "description": "List all loyalty tier activities",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "activities": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/LoyaltyTierActivity"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "customer id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/{id}/notification-preferences": {
      "get": {
        "operationId": "get-user-notification-preferences",
        "summary": "Retrieve notification preferences",
        "description": "Retrieve notification preferences",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "notification_preferences": {
                          "$ref": "#/components/schemas/NotificationPreferences"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "put": {
        "operationId": "update-user-notification-preferences",
        "summary": "Update notification preferences",
        "description": "Update notification preferences",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/NotificationPreferences"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "notification_preferences": {
                          "$ref": "#/components/schemas/NotificationPreferences"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Customers"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "customer id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/store/filter-options": {
      "get": {
        "operationId": "list-filter-options",
        "summary": "List all filter options",
        "description": "List all filter options for listing data.",
        "parameters": [
          {
            "name": "listing_type",
            "in": "query",
            "description": "name of listing api",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "product-attributes",
                "products",
                "categories",
                "customers",
                "visitors",
                "customer-attributes",
                "orders",
                "payments",
                "shipments",
                "coupons",
                "promotions",
                "media-files",
                "media-folders"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "filter_options": {
                          "$ref": "#/components/schemas/FilterOptions"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Filter Options"
        ]
      },
      "parameters": []
    },
    "/catalog/inventories": {
      "get": {
        "operationId": "list-inventory",
        "summary": "List all inventories",
        "description": "List all inventories",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "inventories": {
                          "type": "array",
                          "items": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/ItemWiseInventory"
                              },
                              {
                                "$ref": "#/components/schemas/LotBatchWiseInventory"
                              }
                            ]
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Inventories"
        ]
      },
      "parameters": []
    },
    "/catalog/inventories/activites": {
      "get": {
        "operationId": "list-inventory-activity",
        "summary": "List all inventories activities",
        "description": "Lists all inventory related activities of stock movements. This provides a comprehensive audit trail of inventory operations such as receiving, reservations, adjustments, transfers, and sales.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "activities": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/InventoryActivity"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Inventories"
        ]
      },
      "parameters": []
    },
    "/catalog/inventories/detail": {
      "get": {
        "operationId": "list-inventory-detail",
        "summary": "Retrieve inventory detail",
        "description": "Retrieves inventory details for a specific product, product variant, or lot/batch based on the parameters provided.",
        "parameters": [
          {
            "name": "lot_batch",
            "in": "query",
            "description": "lot batch of selected productor or variant.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "description": "Product Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variant_id",
            "in": "query",
            "description": "Variant Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "inventory": {
                          "$ref": "#/components/schemas/InventoryDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Inventories"
        ]
      },
      "parameters": []
    },
    "/media/files": {
      "get": {
        "operationId": "list-media-files",
        "summary": "List all files",
        "description": "List all files",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          },
          {
            "name": "folder_id",
            "in": "query",
            "description": "folder id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "files": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/MediaFile"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Media Gallery"
        ]
      }
    },
    "/media/files/bulk-delete": {
      "post": {
        "operationId": "bulk-delete-media-files",
        "summary": "Delete multiple files",
        "description": "Delete multiple files",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "file_id": {
                    "description": "array of file ids",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "file_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Media Gallery"
        ]
      },
      "parameters": []
    },
    "/media/files/bulk-move": {
      "post": {
        "operationId": "bulk-move-media-files",
        "summary": "Move multiple files",
        "description": "Move multiple files",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "file_id": {
                    "description": "array of file ids",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "folder_id": {
                    "description": "folder id where selected files will be moved.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "required": [
                  "file_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Media Gallery"
        ]
      },
      "parameters": []
    },
    "/media/files/upload-complete": {
      "post": {
        "operationId": "notify-file-upload-complete",
        "summary": "Update upload complete status",
        "description": "Update upload complete status",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Media Gallery"
        ]
      },
      "parameters": []
    },
    "/media/files/upload-request": {
      "post": {
        "operationId": "request-file-upload",
        "summary": "Create upload request",
        "description": "Create upload request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaFileUploadRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "file": {
                          "type": "object",
                          "properties": {
                            "upload_source": {
                              "enum": [
                                "local-storage",
                                "external-url"
                              ]
                            },
                            "file_type": {
                              "enum": [
                                "image",
                                "video",
                                "document"
                              ]
                            },
                            "id": {
                              "type": "string"
                            },
                            "upload_url": {
                              "description": "for uploading file directly to third party server from local-storage.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Media Gallery"
        ]
      }
    },
    "/media/files/{id}": {
      "get": {
        "operationId": "get-media-file-detail",
        "summary": "Retrieve file detail",
        "description": "Retrieve file detail",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "file": {
                          "$ref": "#/components/schemas/MediaFile"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Media Gallery"
        ]
      },
      "put": {
        "operationId": "update-media-file",
        "summary": "Update file detail",
        "description": "Update file detail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaFileInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "file": {
                          "$ref": "#/components/schemas/MediaFile"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Media Gallery"
        ]
      },
      "delete": {
        "operationId": "delete-media-file",
        "summary": "Delete file",
        "description": "Delete file",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Media Gallery"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "file id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/media/folders": {
      "get": {
        "operationId": "list-media-folders",
        "summary": "List all folders",
        "description": "List all folders",
        "parameters": [
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "folders": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/MediaFolder"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Media Gallery"
        ]
      },
      "post": {
        "operationId": "create-media-folder",
        "summary": "Create a folder",
        "description": "Create a folder",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaFolder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "folder": {
                          "$ref": "#/components/schemas/MediaFolder"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Media Gallery"
        ]
      },
      "parameters": []
    },
    "/media/folders/{id}": {
      "get": {
        "operationId": "get-media-folder-detail",
        "summary": "Retrieve folder detail",
        "description": "Retrieve folder detail",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "folder": {
                          "$ref": "#/components/schemas/MediaFolder"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Media Gallery"
        ]
      },
      "put": {
        "operationId": "update-media-folder",
        "summary": "Update folder detail",
        "description": "Update folder detail",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaFolder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "folder": {
                          "$ref": "#/components/schemas/MediaFolder"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Media Gallery"
        ]
      },
      "delete": {
        "operationId": "delete-media-folder",
        "summary": "Delete folder",
        "description": "Delete folder",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Media Gallery"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "folder id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/catalog/metrics/product-analytics": {
      "get": {
        "operationId": "get-product-metrics",
        "summary": "Retrieve product analytics stats",
        "description": "Retrieve product analytics stats",
        "parameters": [
          {
            "name": "date_from",
            "in": "query",
            "description": "start datetime",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "end datetime",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "description": "for aggregating data",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "hour",
                "day",
                "week",
                "month"
              ]
            }
          },
          {
            "name": "sku",
            "in": "query",
            "description": "To retrieve analytics stats of a particular sku.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "To retrieve analytics stats of a particular user. ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "stats": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "date": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "metrics": {
                                "type": "object",
                                "$ref": "#/components/schemas/ProductAnalyticsStats"
                              }
                            }
                          }
                        },
                        "lifetime_stats": {
                          "$ref": "#/components/schemas/ProductAnalyticsStats"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Metrics"
        ]
      },
      "parameters": []
    },
    "/customers/metrics/stats": {
      "get": {
        "operationId": "get-customer-metrics",
        "summary": "Retrieve customers stats",
        "description": "Retrieve customers stats",
        "parameters": [
          {
            "name": "customer_id",
            "in": "query",
            "description": "To retrieve stats of a particular customer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "description": "start datetime",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "end datetime",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "description": "for aggregating data",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "hour",
                "day",
                "week",
                "month"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "stats": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "date": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "metrics": {
                                "type": "object",
                                "$ref": "#/components/schemas/CustomerStats"
                              }
                            }
                          }
                        },
                        "lifetime_stats": {
                          "$ref": "#/components/schemas/CustomerStats"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Metrics"
        ]
      },
      "parameters": []
    },
    "/offers/coupons/metrics/stats": {
      "get": {
        "operationId": "get-coupons-metrics",
        "summary": "Retrieve coupons stats",
        "description": "Retrieve coupons stats",
        "parameters": [
          {
            "name": "coupon_id",
            "in": "query",
            "description": "To retrieve analytics stats of a particular coupon. ",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "description": "start datetime",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "end datetime",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "description": "for aggregating data",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "hour",
                "day",
                "week",
                "month"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "stats": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "date": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "metrics": {
                                "type": "object",
                                "$ref": "#/components/schemas/CouponStats"
                              }
                            }
                          }
                        },
                        "lifetime_stats": {
                          "$ref": "#/components/schemas/CouponStats"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Metrics"
        ]
      },
      "parameters": []
    },
    "/orders/metrics/stats": {
      "get": {
        "operationId": "get-orders-metrics",
        "summary": "Retrieve orders stats",
        "description": "Retrieve orders stats",
        "parameters": [
          {
            "name": "customer_id",
            "in": "query",
            "description": "customer id to filter data customer wise",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "description": "start datetime",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "end datetime",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "description": "for aggregating data",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "hour",
                "day",
                "week",
                "month"
              ]
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "description": "product id to filter data product wise",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variant_id",
            "in": "query",
            "description": "variant id to filter data variant wise",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "stats": {
                          "type": "object",
                          "properties": {
                            "date": {
                              "type": "string"
                            },
                            "metrics": {
                              "type": "object",
                              "$ref": "#/components/schemas/OrderStats"
                            }
                          }
                        },
                        "lifetime_stats": {
                          "$ref": "#/components/schemas/OrderStats"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Metrics"
        ]
      }
    },
    "/orders/metrics/top-selling-products": {
      "get": {
        "operationId": "get-top-selling-products",
        "summary": "List all top selling products",
        "description": "List all top selling products",
        "parameters": [
          {
            "name": "date_from",
            "in": "query",
            "description": "start datetime",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "end datetime",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "To retrieve analytics stats of a particular user. ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/TopSellingProduct"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Metrics"
        ]
      },
      "parameters": []
    },
    "/orders/payments/metrics/stats": {
      "get": {
        "operationId": "get-payments-metrics",
        "summary": "Retrieve payments stats",
        "description": "Retrieve payments stats",
        "parameters": [
          {
            "name": "date_from",
            "in": "query",
            "description": "start datetime",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "end datetime",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "description": "for aggregating data",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "hour",
                "day",
                "week",
                "month"
              ]
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "To retrieve analytics stats of a particular user. ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "stats": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "date": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "metrics": {
                                "type": "object",
                                "$ref": "#/components/schemas/PaymentStats"
                              }
                            }
                          }
                        },
                        "lifetime_stats": {
                          "$ref": "#/components/schemas/PaymentStats"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Metrics"
        ]
      },
      "parameters": []
    },
    "/shipping/metrics/stats": {
      "get": {
        "operationId": "get-shipping-metrics",
        "summary": "Retrieve shipments stats",
        "description": "Retrieve shipments stats",
        "parameters": [
          {
            "name": "date_from",
            "in": "query",
            "description": "start datetime",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "end datetime",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "description": "for aggregating data",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "hour",
                "day",
                "week",
                "month"
              ]
            }
          },
          {
            "name": "sku",
            "in": "query",
            "description": "To retrieve analytics stats of a particular sku.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "To retrieve analytics stats of a particular user. ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "stats": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "date": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "metrics": {
                                "type": "object",
                                "$ref": "#/components/schemas/ShippingStats"
                              }
                            }
                          }
                        },
                        "lifetime_stats": {
                          "$ref": "#/components/schemas/ShippingStats"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Metrics"
        ]
      },
      "parameters": []
    },
    "/webhooks/metrics/stats": {
      "get": {
        "operationId": "get-webhook-metrics",
        "summary": "Retrieve webhook stats",
        "description": "Retrieve webhook stats",
        "parameters": [
          {
            "name": "date_from",
            "in": "query",
            "description": "start datetime",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "end datetime",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "description": "for aggregating data",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "hour",
                "day",
                "week",
                "month"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook stats retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "stats": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "date",
                              "metrics"
                            ],
                            "properties": {
                              "date": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "metrics": {
                                "$ref": "#/components/schemas/WebhookStats"
                              }
                            }
                          }
                        },
                        "lifetime_stats": {
                          "$ref": "#/components/schemas/WebhookStats"
                        }
                      },
                      "required": [
                        "stats",
                        "lifetime_stats"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "tags": [
          "Metrics"
        ]
      },
      "parameters": []
    },
    "/orders": {
      "get": {
        "operationId": "list-orders",
        "summary": "List all orders",
        "description": "List all orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "orders": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OrderList"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Orders"
        ]
      },
      "post": {
        "operationId": "create-order",
        "summary": "Create a draft order",
        "description": "Create a draft order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDraftOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "order": {
                          "$ref": "#/components/schemas/OrderDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Orders"
        ]
      }
    },
    "/orders/abandoned-carts": {
      "get": {
        "operationId": "get-abandoned-carts",
        "summary": "List all abandoned carts",
        "description": "List all abandoned carts",
        "parameters": [
          {
            "name": "customer_id",
            "in": "query",
            "description": "customer id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "abandoned_carts": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/AbandonedCart",
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Orders"
        ]
      },
      "parameters": []
    },
    "/orders/products-purchase-count": {
      "get": {
        "operationId": "get-products-purchase-count",
        "summary": "List all products purchase count",
        "description": "List all products purchase count",
        "parameters": [
          {
            "name": "customer_id",
            "in": "query",
            "description": "customer id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "product_id": {
                                "type": "string"
                              },
                              "product_name": {
                                "type": "string"
                              },
                              "product_image_url": {
                                "type": "string"
                              },
                              "sku": {
                                "type": "string"
                              },
                              "product_variant_id": {
                                "type": "string"
                              },
                              "selling_price": {
                                "type": "number"
                              },
                              "purchase_count": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Orders"
        ]
      },
      "parameters": []
    },
    "/orders/subscriptions": {
      "get": {
        "operationId": "list-subscriptions",
        "summary": "List all subscriptions",
        "description": "List all subscriptions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "subscriptions": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Subscription"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Orders"
        ]
      },
      "parameters": []
    },
    "/orders/subscriptions/{subscription_number}": {
      "get": {
        "operationId": "get-subscription-detail",
        "summary": "Retrieve a subscription details",
        "description": "Retrieve a subscription details",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "subscription": {
                          "$ref": "#/components/schemas/Subscription"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Orders"
        ]
      },
      "parameters": [
        {
          "name": "subscription_number",
          "in": "path",
          "description": "subscription number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/orders/subscriptions/{subscription_number}/customers": {
      "get": {
        "operationId": "list-subscription-customers",
        "summary": "List all subscription customers",
        "description": "List all subscription customers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "customers": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SubscriptionCustomer"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Orders"
        ]
      },
      "parameters": [
        {
          "name": "subscription_number",
          "in": "path",
          "description": "subscription number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/orders/{order_number}": {
      "get": {
        "operationId": "get-order-detail",
        "summary": "Retrieve order details",
        "description": "Retrieve order details",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "order": {
                          "$ref": "#/components/schemas/OrderDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Orders"
        ]
      },
      "put": {
        "operationId": "update-order",
        "summary": "Update order details",
        "description": "Update order details",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "order": {
                          "$ref": "#/components/schemas/OrderDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Orders"
        ]
      },
      "parameters": [
        {
          "name": "order_number",
          "in": "path",
          "description": "order number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/orders/{order_number}/accept": {
      "post": {
        "operationId": "accept-order",
        "summary": "Accept order",
        "description": "Accept order",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "order": {
                          "$ref": "#/components/schemas/OrderDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Orders"
        ]
      },
      "parameters": [
        {
          "name": "order_number",
          "in": "path",
          "description": "order number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/orders/{order_number}/activity": {
      "get": {
        "operationId": "list-order-activity",
        "summary": "List all order activity",
        "description": "List all order activity",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "activity": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OrderActivity"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Orders"
        ]
      },
      "post": {
        "operationId": "create-order-activity",
        "summary": "Create order activity",
        "description": "Create order activity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderActivity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "activity": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderActivity"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Orders"
        ]
      },
      "parameters": [
        {
          "name": "order_number",
          "in": "path",
          "description": "order number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/orders/{order_number}/cancel": {
      "post": {
        "operationId": "cancel-order",
        "summary": "Cancel order",
        "description": "Cancel order",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "order": {
                          "$ref": "#/components/schemas/OrderDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Orders"
        ]
      },
      "parameters": [
        {
          "name": "order_number",
          "in": "path",
          "description": "order number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/orders/{order_number}/invoice": {
      "get": {
        "operationId": "get-order-invoice",
        "summary": "Retrieve order invoice",
        "description": "Retrieve order invoice",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "description": "Response data format",
            "schema": {
              "type": "string",
              "default": "json",
              "enum": [
                "json",
                "pdf"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "invoices": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/InvoiceDetail"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "Orders"
        ]
      },
      "parameters": [
        {
          "name": "order_number",
          "in": "path",
          "description": "order number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/orders/{order_number}/receipt": {
      "get": {
        "operationId": "get-order-receipt",
        "summary": "Retrieve order receipt",
        "description": "Retrieves a printable receipt for a specific order using the order number. This endpoint returns either structured JSON data or a formatted PDF, suitable for customer presentation. Response format (JSON or PDF) is determined by an optional query parameter (e.g. format=pdf or format=json).",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "description": "Response data format",
            "schema": {
              "type": "string",
              "default": "json",
              "enum": [
                "json",
                "pdf"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "order_receipt": {
                          "$ref": "#/components/schemas/OrderReceiptJsonFormat"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "Orders"
        ]
      },
      "parameters": [
        {
          "name": "order_number",
          "in": "path",
          "description": "order number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/orders/{order_number}/shipments": {
      "get": {
        "operationId": "list-order-shipments",
        "summary": "Retrieve order shipments",
        "description": "Retrieve order shipments",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "shipment": {
                          "$ref": "#/components/schemas/ShipmentDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Orders"
        ]
      },
      "parameters": [
        {
          "name": "order_number",
          "in": "path",
          "description": "order number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/orders/{order_number}/verify-payment": {
      "post": {
        "operationId": "verify-order-payment",
        "summary": "Verify order payment",
        "description": "Verify order payment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderActivity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "payments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrderPayment"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Orders"
        ]
      },
      "parameters": [
        {
          "name": "order_number",
          "in": "path",
          "description": "order number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/orders/payments": {
      "get": {
        "operationId": "list-payments",
        "summary": "List all payments",
        "description": "List all payments",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "payments": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Payment"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Payments"
        ]
      },
      "post": {
        "operationId": "create-payment",
        "summary": "Create Payment",
        "description": "Create Payment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePayment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Payments"
        ]
      }
    },
    "/orders/payments/refund": {
      "post": {
        "operationId": "refund-payment",
        "summary": "Refund payment",
        "description": "Refund payment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customer_id": {
                    "type": "string"
                  },
                  "reference_number": {
                    "description": "multiple reference numbers are separated by comma.",
                    "type": "string"
                  },
                  "amount": {
                    "type": "string"
                  },
                  "payment_mode": {
                    "enum": [
                      "bank-transfer",
                      "original-payment-mode"
                    ]
                  },
                  "bank_account_id": {
                    "description": "in case payment mode is bank-transfer",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Payments"
        ]
      },
      "parameters": []
    },
    "/orders/payments/{request_number}": {
      "get": {
        "operationId": "get-payment-detail",
        "summary": "Retrieve payment details",
        "description": "Retrieve payment details",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "payment": {
                          "$ref": "#/components/schemas/PaymentDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Payments"
        ]
      },
      "parameters": [
        {
          "name": "request_number",
          "in": "path",
          "description": "payment request number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/orders/payments/{request_number}/cancel": {
      "post": {
        "operationId": "cancel-payment",
        "summary": "Cancel Payment",
        "description": "Cancel Payment",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Payments"
        ]
      },
      "parameters": [
        {
          "name": "request_number",
          "in": "path",
          "description": "payment request number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/orders/payments/{request_number}/reminder": {
      "post": {
        "operationId": "send-payment-reminder",
        "summary": "Payment Reminder",
        "description": "Payment Reminder",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Payments"
        ]
      },
      "parameters": [
        {
          "name": "request_number",
          "in": "path",
          "description": "payment request number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/pos/devices": {
      "get": {
        "operationId": "list-devices",
        "summary": "List all POS devices",
        "description": "List all POS devices",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "devices": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PosDevice"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POS"
        ]
      },
      "post": {
        "operationId": "create-device",
        "summary": "Create POS device",
        "description": "Create POS device",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePosDevice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "device": {
                          "$ref": "#/components/schemas/PosDevice"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POS"
        ]
      }
    },
    "/pos/devices/{id}": {
      "get": {
        "operationId": "get-device",
        "summary": "Retrieve POS device detail",
        "description": "Retrieve POS device detail",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "device": {
                          "$ref": "#/components/schemas/PosDevice"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POS"
        ]
      },
      "put": {
        "operationId": "update-device",
        "summary": "Update POS device",
        "description": "Update POS device",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PosDevice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "device": {
                          "$ref": "#/components/schemas/PosDevice"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POS"
        ]
      },
      "delete": {
        "operationId": "delete-device",
        "summary": "Delete POS device",
        "description": "Delete POS device",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POS"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id of pos device",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/pos/devices/{id}/pairing-code": {
      "post": {
        "operationId": "generate-device-pairing-code",
        "summary": "Generate POS device Pairing Code",
        "description": "Generates a new verification code for pairing the specified POS device. This code is used to securely link the device with the system during the pairing process.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "pairing_code": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POS"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id of pos device",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/pos/devices/{id}/revoke": {
      "post": {
        "operationId": "revoke-device",
        "summary": "Revoke POS device",
        "description": "Disables the specified POS device, revoking its access to the system. This action updates the device’s status to disabled, preventing it from performing any operations or connecting to the POS network.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                },
                "required": [
                  "reason"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "device": {
                          "$ref": "#/components/schemas/PosDevice"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POS"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id of pos device",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/pos/permissions": {
      "get": {
        "operationId": "list-pos-permissions",
        "summary": "List all POS permissions",
        "description": "List all POS permissions",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "permissions": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PosPermission"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POS"
        ]
      },
      "parameters": []
    },
    "/pos/roles": {
      "get": {
        "operationId": "list-pos-roles",
        "summary": "List all POS roles",
        "description": "List all POS roles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "roles": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PosRole"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POS"
        ]
      },
      "post": {
        "operationId": "create-pos-role",
        "summary": "Create POS role",
        "description": "Create POS role",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PosRole"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "role": {
                          "$ref": "#/components/schemas/PosRole"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POS"
        ]
      },
      "parameters": []
    },
    "/pos/roles/{id}": {
      "get": {
        "operationId": "get-pos-role",
        "summary": "Retrieve POS role",
        "description": "Retrieve POS role",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "role": {
                          "$ref": "#/components/schemas/PosRole"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POS"
        ]
      },
      "put": {
        "operationId": "update-pos-role",
        "summary": "Update POS role",
        "description": "Update POS role",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "permissions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "module_name",
                        "resource_group",
                        "permission_type"
                      ],
                      "properties": {
                        "module_name": {
                          "type": "string"
                        },
                        "resource_group": {
                          "type": "string"
                        },
                        "permission_type": {
                          "enum": [
                            "admin",
                            "readonly",
                            "none"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "role": {
                          "$ref": "#/components/schemas/PosRole"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POS"
        ]
      },
      "delete": {
        "operationId": "delete-pos-role",
        "summary": "Delete POS role",
        "description": "Delete POS role",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POS"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "pos role id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/pos/users": {
      "get": {
        "operationId": "list-pos-users",
        "summary": "List all POS users",
        "description": "List all POS users",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "users": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PosUser"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POS"
        ]
      },
      "post": {
        "operationId": "create-pos-user",
        "summary": "Create POS user",
        "description": "Create POS user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePosUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/PosUser"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POS"
        ]
      },
      "parameters": []
    },
    "/pos/users/{id}": {
      "get": {
        "operationId": "get-pos-user-detail",
        "summary": "Retrieve POS user",
        "description": "Retrieve POS user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/PosUser"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POS"
        ]
      },
      "put": {
        "operationId": "update-pos-user",
        "summary": "Update POS user",
        "description": "Update POS user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PosUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/PosUser"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POS"
        ]
      },
      "delete": {
        "operationId": "delete-pos-user",
        "summary": "Delete POS user",
        "description": "Delete POS user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POS"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "pos user id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/pos/catalog/inventories": {
      "get": {
        "operationId": "pos-list-inventory",
        "summary": "List all inventories",
        "description": "List all inventories",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "inventories": {
                          "type": "array",
                          "items": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/ItemWiseInventory"
                              },
                              {
                                "$ref": "#/components/schemas/LotBatchWiseInventory"
                              }
                            ]
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POSAdmin"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true
      }
    },
    "/pos/catalog/inventories/activites": {
      "get": {
        "operationId": "pos-list-inventory-activity",
        "summary": "List all inventories activities",
        "description": "Lists all inventory related activities of stock movements. This provides a comprehensive audit trail of inventory operations such as receiving, reservations, adjustments, transfers, and sales.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "activities": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/InventoryActivity"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POSAdmin"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true
      }
    },
    "/pos/catalog/inventories/detail": {
      "get": {
        "operationId": "pos-list-inventory-detail",
        "summary": "Retrieve inventory detail",
        "description": "Retrieves inventory details for a specific product, product variant, or lot/batch based on the parameters provided.",
        "parameters": [
          {
            "name": "lot_batch",
            "in": "query",
            "description": "lot batch of selected productor or variant.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "description": "Product Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variant_id",
            "in": "query",
            "description": "Variant Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "inventory": {
                          "$ref": "#/components/schemas/InventoryDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POSAdmin"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true
      }
    },
    "/pos/customers": {
      "get": {
        "operationId": "pos-list-customers",
        "summary": "List all customers",
        "description": "List all customers",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "customers": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Customer"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POSAdmin"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true
      }
    },
    "/pos/customers/{id}": {
      "get": {
        "operationId": "pos-get-customer-detail",
        "summary": "Retrieve customer detail",
        "description": "Retrieve customer detail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "customer": {
                          "$ref": "#/components/schemas/CustomerDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POSAdmin"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true
      }
    },
    "/pos/orders": {
      "get": {
        "operationId": "pos-list-orders",
        "summary": "List all orders",
        "description": "List all orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "orders": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OrderList"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POSAdmin"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true
      }
    },
    "/pos/orders/{order_number}": {
      "get": {
        "operationId": "pos-get-order-detail",
        "summary": "Retrieve order details",
        "description": "Retrieve order details",
        "parameters": [
          {
            "name": "order_number",
            "in": "path",
            "description": "order number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "order": {
                          "$ref": "#/components/schemas/OrderDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POSAdmin"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true
      }
    },
    "/pos/orders/{order_number}/activity": {
      "get": {
        "operationId": "pos-list-order-activity",
        "summary": "List all order activity",
        "description": "List all order activity",
        "parameters": [
          {
            "name": "order_number",
            "in": "path",
            "description": "order number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "activity": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OrderActivity"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POSAdmin"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true
      }
    },
    "/pos/orders/{order_number}/invoice": {
      "get": {
        "operationId": "pos-get-order-invoice",
        "summary": "Retrieve order invoice",
        "description": "Retrieve order invoice",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "description": "Response data format",
            "schema": {
              "type": "string",
              "default": "json",
              "enum": [
                "json",
                "pdf"
              ]
            }
          },
          {
            "name": "order_number",
            "in": "path",
            "description": "order number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "invoices": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/InvoiceDetail"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "POSAdmin"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true
      }
    },
    "/pos/orders/{order_number}/receipt": {
      "get": {
        "operationId": "pos-get-order-receipt",
        "summary": "Retrieve order receipt",
        "description": "Retrieves a printable receipt for a specific order using the order number. This endpoint returns either structured JSON data or a formatted PDF, suitable for customer presentation. Response format (JSON or PDF) is determined by an optional query parameter (e.g. format=pdf or format=json).",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "description": "Response data format",
            "schema": {
              "type": "string",
              "default": "json",
              "enum": [
                "json",
                "pdf"
              ]
            }
          },
          {
            "name": "order_number",
            "in": "path",
            "description": "order number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "order_receipt": {
                          "$ref": "#/components/schemas/OrderReceiptJsonFormat"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "POSAdmin"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true
      }
    },
    "/pos/orders/{order_number}/shipments": {
      "get": {
        "operationId": "pos-list-order-shipments",
        "summary": "Retrieve order shipments",
        "description": "Retrieve order shipments",
        "parameters": [
          {
            "name": "order_number",
            "in": "path",
            "description": "order number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "shipment": {
                          "$ref": "#/components/schemas/ShipmentDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POSAdmin"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true
      }
    },
    "/pos/shipping/shipments": {
      "get": {
        "operationId": "pos-list-shipments",
        "summary": "List all shipments",
        "description": "List all shipments",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "shipments": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ShipmentList"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POSAdmin"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true
      }
    },
    "/pos/shipping/shipments/{order_number}/check-inventory": {
      "get": {
        "operationId": "pos-check-order-inventory",
        "summary": "Check Inventory",
        "description": "Check Inventory",
        "parameters": [
          {
            "name": "order_number",
            "in": "path",
            "description": "Order number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "inventory_status": {
                          "enum": [
                            "fulfilled",
                            "partially-fulfilled",
                            "not-fulfilled"
                          ]
                        },
                        "shipment_items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ShipmentItem"
                          }
                        },
                        "recommended_warehouses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "inventory_status": {
                                "enum": [
                                  "fulfilled",
                                  "partially-fulfilled",
                                  "not-fulfilled"
                                ]
                              }
                            }
                          }
                        },
                        "inventory_detail": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "sku": {
                                "type": "string"
                              },
                              "total_quantity": {
                                "type": "integer"
                              },
                              "warehouses": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "warehouse_id": {
                                      "type": "string"
                                    },
                                    "warehouse_name": {
                                      "type": "string"
                                    },
                                    "quantity": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "allowed_action": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POSAdmin"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true
      }
    },
    "/pos/shipping/shipments/{order_number}/refund-shortfall": {
      "post": {
        "operationId": "pos-refund-shortfall",
        "summary": "Refund shortfall",
        "description": "Refund shortfall",
        "parameters": [
          {
            "name": "order_number",
            "in": "path",
            "description": "Order Number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "sku",
                        "quantity"
                      ],
                      "properties": {
                        "sku": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "integer"
                        },
                        "free_quantity": {
                          "type": "integer",
                          "default": 0
                        }
                      }
                    }
                  },
                  "payment_method": {
                    "enum": [
                      "original-payment-mode",
                      "bank-transfer"
                    ]
                  },
                  "bank_account_id": {
                    "description": "required if payment_method = bank-transfer",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "required": [
                  "items",
                  "payment_method"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POSAdmin"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true
      }
    },
    "/pos/shipping/shipments/{reference_number}": {
      "get": {
        "operationId": "pos-get-shipment-detail",
        "summary": "Retrieve shipment detail",
        "description": "Retrieve shipment detail",
        "parameters": [
          {
            "name": "reference_number",
            "in": "path",
            "description": "Shipment reference number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "shipment": {
                          "$ref": "#/components/schemas/ShipmentDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POSAdmin"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true
      }
    },
    "/pos/shipping/shipments/{reference_number}/invoice": {
      "get": {
        "operationId": "pos-get-shipment-invoice",
        "summary": "Retrieve shipment invoice",
        "description": "Retrieve shipment invoice",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "description": "Response data format",
            "schema": {
              "type": "string",
              "default": "json",
              "enum": [
                "json",
                "pdf"
              ]
            }
          },
          {
            "name": "reference_number",
            "in": "path",
            "description": "Shipment reference number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "invoice": {
                          "$ref": "#/components/schemas/InvoiceDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "POSAdmin"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true
      }
    },
    "/pos/shipping/shipments/{reference_number}/manual-update": {
      "put": {
        "operationId": "pos-update-shipment",
        "summary": "Update shipment detail",
        "description": "Update shipment detail",
        "parameters": [
          {
            "name": "reference_number",
            "in": "path",
            "description": "Shipment reference number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  },
                  "warehouse_id": {
                    "type": "string"
                  },
                  "awb_no": {
                    "type": "string"
                  },
                  "courier_company_name": {
                    "type": "string"
                  },
                  "shipping_label_url": {
                    "type": "string"
                  },
                  "tracking_url": {
                    "type": "string"
                  },
                  "manual_shipping_charges": {
                    "type": "number"
                  },
                  "eta_delivery": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "shipped_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "out_for_delivery_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "delivered_date": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "shipment": {
                          "$ref": "#/components/schemas/ShipmentDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "POSAdmin"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true
      }
    },
    "/customers/segments": {
      "get": {
        "operationId": "list-segments",
        "summary": "List all segments",
        "description": "List all segments",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          },
          {
            "name": "segment_type",
            "in": "query",
            "description": "to filter segments by type",
            "schema": {
              "type": "string",
              "enum": [
                "dynamic",
                "manual"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "to filter segments by status",
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "active",
                "inactive",
                "archived"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "segments": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Segment"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments"
        ]
      },
      "post": {
        "operationId": "create-segment",
        "summary": "Create a segment",
        "description": "Create a segment. In case of dynamic segment, conditions field should accept only the json format specified. Proper validation message should be returned in case different jsob object is provided.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentDetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "segment": {
                          "$ref": "#/components/schemas/SegmentDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments"
        ]
      },
      "parameters": []
    },
    "/customers/segments/{id}": {
      "get": {
        "operationId": "get-segment-detail",
        "summary": "Retrieve segment detail",
        "description": "Retrieve segment detail",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "segment": {
                          "$ref": "#/components/schemas/SegmentDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments"
        ]
      },
      "post": {
        "operationId": "update-segment",
        "summary": "Update segment detail",
        "description": "Update segment detail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentDetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "segment": {
                          "$ref": "#/components/schemas/SegmentDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments"
        ]
      },
      "delete": {
        "operationId": "delete-segment",
        "summary": "Delete segment",
        "description": "Delete segment if not used in anywhere. ",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "segment id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/segments/{id}/ad-audiences": {
      "post": {
        "operationId": "create-ad-audience",
        "summary": "Create ad-audience",
        "description": "Create Ad-audience",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentAdAudience"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "ad_audience": {
                          "$ref": "#/components/schemas/SegmentAdAudience"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "segment id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/segments/{id}/ad-audiences/{ad_audience_id}": {
      "get": {
        "operationId": "get-ad-audience-detail",
        "summary": "Retrieve ad-audience detail",
        "description": "Retrieve ad-audience detail",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "ad_audience": {
                          "$ref": "#/components/schemas/SegmentAdAudience"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments"
        ]
      },
      "put": {
        "operationId": "update-ad-audience",
        "summary": "Update ad-audience detail",
        "description": "Update ad-audience detail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentAdAudience"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "ad_audience": {
                          "$ref": "#/components/schemas/SegmentAdAudience"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments"
        ]
      },
      "delete": {
        "operationId": "delete-ad-audience",
        "summary": "Delete ad-audience",
        "description": "Delete ad-audience",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "ad_audience": {
                          "$ref": "#/components/schemas/SegmentAdAudience"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments"
        ]
      },
      "parameters": [
        {
          "name": "ad_audience_id",
          "in": "path",
          "description": "ad audience id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "id",
          "in": "path",
          "description": "segment id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/segments/{id}/ad-audiences/{ad_audience_id}/sync-history": {
      "get": {
        "operationId": "get-ad-audience-sync-history",
        "summary": "List all ad-audience sync hisory",
        "description": "List all ad-audience sync hisory",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "sync_history": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SegmentAdAudienceSyncHistory"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments"
        ]
      },
      "parameters": [
        {
          "name": "ad_audience_id",
          "in": "path",
          "description": "ad audience id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "id",
          "in": "path",
          "description": "segment id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/segments/{id}/members": {
      "get": {
        "operationId": "list-segment-members",
        "summary": "List all segment members",
        "description": "List all segment members. Data will be fetched from clickhouse database, using raw sql written on clickhouse db tables by matching segment dynamic conditions or matching user id of manual segment.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "segment_members": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SegmentMember"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments"
        ]
      },
      "post": {
        "operationId": "update-segment-members",
        "summary": "Add segment members",
        "description": "Add segment members in manual segment type.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email_id": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "email_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments"
        ]
      },
      "delete": {
        "operationId": "delete-segment-members",
        "summary": "Delete segment members",
        "description": "Delete segment members in manual segment type.",
        "parameters": [
          {
            "name": "email_id",
            "in": "query",
            "description": "use comma to separate multple email ids. maximum limit - 50 email ids",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "segment id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/customers/segments/{id}/members-metrics": {
      "get": {
        "operationId": "get-segment-members-metrics",
        "summary": "Retrieve members metrics",
        "description": "Retrieve members metrics. Data should be retrieved from clickhouse database using raw sql.",
        "parameters": [
          {
            "name": "from_date",
            "in": "query",
            "description": "from date",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resolution",
            "in": "query",
            "description": "enum field. any of (daily, weekly). default daily",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "to date",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "metrics_data": {
                          "type": "object",
                          "properties": {
                            "opening": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              }
                            },
                            "total_in": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              }
                            },
                            "total_out": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              }
                            },
                            "balance": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              }
                            },
                            "from_date": {
                              "type": "string",
                              "format": "date"
                            },
                            "to_date": {
                              "type": "string",
                              "format": "date"
                            },
                            "resolution": {
                              "enum": [
                                "daily",
                                "weekly"
                              ]
                            }
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "segment id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/shipping/service-providers": {
      "get": {
        "operationId": "list-shipping-service-providers",
        "summary": "List all service providers",
        "description": "List all service providers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "service_providers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Shipping"
        ]
      },
      "parameters": []
    },
    "/shipping/serviceability": {
      "post": {
        "operationId": "check-shipping-serviceability",
        "summary": "Courier Serviceability",
        "description": "Check Courier Serviceability",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "delivery_pincode": {
                    "type": "string"
                  },
                  "weight": {
                    "type": "number"
                  },
                  "length": {
                    "type": "integer"
                  },
                  "breadth": {
                    "type": "integer"
                  },
                  "height": {
                    "type": "integer"
                  },
                  "warehouse_id": {
                    "description": "array of warehouse ids",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "shipping_option": {
                    "enum": [
                      "auto",
                      "manual"
                    ]
                  },
                  "shipping_provider_id": {
                    "description": "to check serviceability using particular shipping provider.",
                    "type": "string"
                  },
                  "mode": {
                    "enum": [
                      "SURFACE",
                      "AIR",
                      "ALL"
                    ]
                  }
                },
                "required": [
                  "delivery_pincode",
                  "weight"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "is_servicable": {
                          "type": "boolean"
                        },
                        "shipping_options": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "warehouse_id": {
                                "type": "string"
                              },
                              "warehouse_name": {
                                "type": "string"
                              },
                              "warehouse_pincode": {
                                "type": "string"
                              },
                              "shipping_methods": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "shipping_type": {
                                      "enum": [
                                        "auto",
                                        "manual"
                                      ]
                                    },
                                    "shipping_amount": {
                                      "description": "shipment amount of recommended courier, or range of shipment amount - (lowest to highest).",
                                      "type": "string"
                                    },
                                    "estimated_delivery_days": {
                                      "description": "estimated delivery days of recommended courier, or range of estimated delivery days - (lowest to highest).",
                                      "type": "string"
                                    },
                                    "courier_companies": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "shipping_amount": {
                                            "type": "number"
                                          },
                                          "estimated_delivery_days": {
                                            "type": "integer"
                                          },
                                          "is_recommended": {
                                            "type": "boolean"
                                          },
                                          "is_surface": {
                                            "type": "boolean"
                                          },
                                          "is_hyperlocal": {
                                            "type": "boolean"
                                          },
                                          "rating": {
                                            "type": "number"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Shipping"
        ]
      },
      "parameters": []
    },
    "/shipping/shipments": {
      "get": {
        "operationId": "list-shipments",
        "summary": "List all shipments",
        "description": "List all shipments",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "shipments": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ShipmentList"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Shipping"
        ]
      },
      "post": {
        "operationId": "create-shipment",
        "summary": "Create shipment",
        "description": "Create shipment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "order_number": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/CreateShipment"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Shipping"
        ]
      }
    },
    "/shipping/shipments/bulk-update": {
      "post": {
        "operationId": "bulk-update-shipments",
        "summary": "Update shipments in bulk",
        "description": "Update shipments in bulk",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShipmentBulkUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Shipping"
        ]
      },
      "parameters": []
    },
    "/shipping/shipments/{order_number}/check-inventory": {
      "get": {
        "operationId": "check-order-inventory",
        "summary": "Check Inventory",
        "description": "Check Inventory",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "inventory_status": {
                          "enum": [
                            "fulfilled",
                            "partially-fulfilled",
                            "not-fulfilled"
                          ]
                        },
                        "shipment_items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ShipmentItem"
                          }
                        },
                        "recommended_warehouses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "inventory_status": {
                                "enum": [
                                  "fulfilled",
                                  "partially-fulfilled",
                                  "not-fulfilled"
                                ]
                              }
                            }
                          }
                        },
                        "inventory_detail": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "sku": {
                                "type": "string"
                              },
                              "total_quantity": {
                                "type": "integer"
                              },
                              "warehouses": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "warehouse_id": {
                                      "type": "string"
                                    },
                                    "warehouse_name": {
                                      "type": "string"
                                    },
                                    "quantity": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "allowed_action": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Shipping"
        ]
      },
      "parameters": [
        {
          "name": "order_number",
          "in": "path",
          "description": "Order number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/shipping/shipments/{order_number}/pack-items": {
      "post": {
        "operationId": "pack-shipment-items",
        "summary": "Pack items",
        "description": "Generate auto packing details",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "warehouse_id": {
                    "type": "string"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "product_id",
                        "variant_id",
                        "quantity"
                      ],
                      "properties": {
                        "product_id": {
                          "type": "string"
                        },
                        "variant_id": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "quantity": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "warehouse_id",
                  "items"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "total_boxes": {
                          "type": "integer"
                        },
                        "total_cost": {
                          "type": "number"
                        },
                        "total_weight": {
                          "type": "number"
                        },
                        "boxes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "enum": [
                                  "bin",
                                  "shipper"
                                ]
                              },
                              "name": {
                                "type": "string"
                              },
                              "length": {
                                "type": "number"
                              },
                              "width": {
                                "type": "number"
                              },
                              "height": {
                                "type": "number"
                              },
                              "weight": {
                                "type": "number"
                              },
                              "max_weight": {
                                "type": "number"
                              },
                              "packed_items_count": {
                                "type": "integer"
                              },
                              "packed_items_weight": {
                                "type": "number"
                              },
                              "chargeable_weight": {
                                "type": "number"
                              },
                              "box_count": {
                                "type": "integer"
                              },
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "description": "combination of product id and variant id separated by - (hyphen).",
                                      "type": "string"
                                    },
                                    "product_id": {
                                      "type": "string"
                                    },
                                    "product_name": {
                                      "type": "string"
                                    },
                                    "variant_id": {
                                      "type": "string"
                                    },
                                    "variant_name": {
                                      "type": "string"
                                    },
                                    "length": {
                                      "type": "number"
                                    },
                                    "width": {
                                      "type": "number"
                                    },
                                    "height": {
                                      "type": "number"
                                    },
                                    "weight": {
                                      "type": "number"
                                    },
                                    "image_separated": {
                                      "type": "string"
                                    },
                                    "image_sbs": {
                                      "type": "string"
                                    },
                                    "coordinates": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "integer"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Shipping"
        ]
      },
      "parameters": [
        {
          "name": "order_number",
          "in": "path",
          "description": "Order number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/shipping/shipments/{order_number}/refund-shortfall": {
      "post": {
        "operationId": "refund-shortfall",
        "summary": "Refund shortfall",
        "description": "Refund shortfall",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "sku",
                        "quantity"
                      ],
                      "properties": {
                        "sku": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "integer"
                        },
                        "free_quantity": {
                          "type": "integer",
                          "default": 0
                        }
                      }
                    }
                  },
                  "payment_method": {
                    "enum": [
                      "original-payment-mode",
                      "bank-transfer"
                    ]
                  },
                  "bank_account_id": {
                    "description": "required if payment_method = bank-transfer",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "required": [
                  "items",
                  "payment_method"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Shipping"
        ]
      },
      "parameters": [
        {
          "name": "order_number",
          "in": "path",
          "description": "Order Number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/shipping/shipments/{order_number}/wait-for-inventory": {
      "post": {
        "operationId": "wait-for-inventory",
        "summary": "Wait for inventory",
        "description": "Wait for inventory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "revised_shipping_date": {
                    "type": "string"
                  },
                  "shipping_option": {
                    "enum": [
                      "auto",
                      "manual"
                    ]
                  },
                  "notify_customer": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "revised_shipping_date"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Shipping"
        ]
      },
      "parameters": [
        {
          "name": "order_number",
          "in": "path",
          "description": "Order Number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/shipping/shipments/{reference_number}": {
      "get": {
        "operationId": "get-shipment-detail",
        "summary": "Retrieve shipment detail",
        "description": "Retrieve shipment detail",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "shipment": {
                          "$ref": "#/components/schemas/ShipmentDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Shipping"
        ]
      },
      "parameters": [
        {
          "name": "reference_number",
          "in": "path",
          "description": "Shipment reference number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/shipping/shipments/{reference_number}/cancel": {
      "post": {
        "operationId": "cancel-shipment",
        "summary": "Cancel shipment",
        "description": "Shipment will be marked as unscheduled. It can be scheduled with other carrier or ship through manual method.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                },
                "required": [
                  "reason"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Shipping"
        ]
      },
      "parameters": [
        {
          "name": "reference_number",
          "in": "path",
          "description": "Shipment reference number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/shipping/shipments/{reference_number}/download-invoice": {
      "get": {
        "operationId": "download-shipment-invoice",
        "summary": "Download invoice",
        "description": "Download invoice",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Shipping"
        ]
      },
      "parameters": [
        {
          "name": "reference_number",
          "in": "path",
          "description": "Shipment reference number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/shipping/shipments/{reference_number}/download-shipping-label": {
      "get": {
        "operationId": "get-shipping-label",
        "summary": "Download shipping label",
        "description": "Download shipping label",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Shipping"
        ]
      },
      "parameters": [
        {
          "name": "reference_number",
          "in": "path",
          "description": "Shipment reference number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/shipping/shipments/{reference_number}/invoice": {
      "get": {
        "operationId": "get-shipment-invoice",
        "summary": "Retrieve shipment invoice",
        "description": "Retrieve shipment invoice",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "description": "Response data format",
            "schema": {
              "type": "string",
              "default": "json",
              "enum": [
                "json",
                "pdf"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "invoice": {
                          "$ref": "#/components/schemas/InvoiceDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "Shipping"
        ]
      },
      "parameters": [
        {
          "name": "reference_number",
          "in": "path",
          "description": "Shipment reference number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/shipping/shipments/{reference_number}/manual-update": {
      "put": {
        "operationId": "update-shipment",
        "summary": "Update shipment detail",
        "description": "Update shipment detail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  },
                  "warehouse_id": {
                    "type": "string"
                  },
                  "awb_no": {
                    "type": "string"
                  },
                  "courier_company_name": {
                    "type": "string"
                  },
                  "shipping_label_url": {
                    "type": "string"
                  },
                  "tracking_url": {
                    "type": "string"
                  },
                  "manual_shipping_charges": {
                    "type": "number"
                  },
                  "eta_delivery": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "shipped_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "out_for_delivery_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "delivered_date": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "shipment": {
                          "$ref": "#/components/schemas/ShipmentDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Shipping"
        ]
      },
      "parameters": [
        {
          "name": "reference_number",
          "in": "path",
          "description": "Shipment reference number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/shipping/shipments/{reference_number}/packing-detail": {
      "get": {
        "operationId": "get-shipment-packing-detail",
        "summary": "Retrieve packing detail",
        "description": "Retrieve packing detail",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "packing_detail": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/ManualPackingDetail"
                            },
                            {
                              "$ref": "#/components/schemas/AutoPackingDetail"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Shipping"
        ]
      },
      "parameters": [
        {
          "name": "reference_number",
          "in": "path",
          "description": "Shipment reference number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/shipping/shipments/{reference_number}/tracking": {
      "get": {
        "operationId": "get-shipment-tracking",
        "summary": "Tracking Shipment",
        "description": "Tracking Shipment",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "current_status": {
                          "type": "string"
                        },
                        "expected_delivery_date": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "shipment_track_activities": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "activity_time": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "activity": {
                                "type": "string"
                              },
                              "location": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Shipping"
        ]
      },
      "parameters": [
        {
          "name": "reference_number",
          "in": "path",
          "description": "Shipment reference number",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/store/sse/global-state": {
      "get": {
        "operationId": "get-global-state",
        "summary": "Retrieve global state",
        "description": "Retrieve server sent events for global state",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "event_name": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/StoreConfig"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "SSE"
        ]
      },
      "parameters": []
    },
    "/store/sse/live-events": {
      "get": {
        "operationId": "get-live-events",
        "summary": "Retrieve live events",
        "description": "Retrieve live events",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/AnalyticsEvent"
                }
              }
            }
          }
        },
        "tags": [
          "SSE"
        ]
      },
      "parameters": []
    },
    "/store/available-payment-options": {
      "get": {
        "operationId": "list-available-payment-options",
        "summary": "List all available payment options",
        "description": "List all available payment options",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "payment_options": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/AvailablePaymentOption"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": []
    },
    "/store/available-shipping-options": {
      "get": {
        "operationId": "list-available-shipping-options",
        "summary": "List all available shipping options",
        "description": "List all available shipping options",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "shipping_options": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/AvailableShippingOption"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": []
    },
    "/store/channel": {
      "get": {
        "operationId": "list-channels",
        "summary": "List all channels",
        "description": "List all channels",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "channels": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Channel"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "post": {
        "operationId": "create-channel",
        "summary": "Create channel",
        "description": "Create channel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Channel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "channel": {
                          "$ref": "#/components/schemas/Channel"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": []
    },
    "/store/channel/{id}": {
      "put": {
        "operationId": "update-channel",
        "summary": "Update channel",
        "description": "Update channel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/Channel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "channel": {
                          "$ref": "#/components/schemas/Channel"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "delete": {
        "operationId": "delete-channel",
        "summary": "Delete channel",
        "description": "Delete channel",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "channel id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/store/config": {
      "get": {
        "operationId": "get-store-config",
        "summary": "Retrieve store config",
        "description": "Retrieve store config",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "store_config": {
                          "$ref": "#/components/schemas/StoreConfig"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "post": {
        "operationId": "update-store-config",
        "summary": "Update store config",
        "description": "Update store config",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "store_config": {
                          "$ref": "#/components/schemas/StoreConfig"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": []
    },
    "/store/countries": {
      "get": {
        "operationId": "list-countries",
        "summary": "List all countries",
        "description": "List all countries",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "countries": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CustomerAddressCountry"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          }
        ],
        "tags": [
          "Store"
        ]
      },
      "parameters": []
    },
    "/store/countries/{country_iso_code}/pincodes": {
      "get": {
        "operationId": "list-pincodes",
        "summary": "List all pincodes",
        "description": "List all pincodes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "pincodes": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Pincode"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          }
        ],
        "tags": [
          "Store"
        ]
      },
      "parameters": [
        {
          "name": "country_iso_code",
          "in": "path",
          "description": "country iso code in 2 chars. ex. IN for India",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/store/countries/{country_iso_code}/states": {
      "get": {
        "operationId": "list-states",
        "summary": "List all states",
        "description": "List all states",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "states": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CustomerAddressState"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          }
        ],
        "tags": [
          "Store"
        ]
      },
      "parameters": [
        {
          "name": "country_iso_code",
          "in": "path",
          "description": "country iso code in 2 chars. ex. IN for India",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/store/customer-group": {
      "get": {
        "operationId": "list-customer-groups",
        "summary": "List all customer groups",
        "description": "List all customer groups",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "customer_groups": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CustomerGroup"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "post": {
        "operationId": "create-customer-group",
        "summary": "Create customer group",
        "description": "Create customer group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "customer_group": {
                          "$ref": "#/components/schemas/CustomerGroup"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": []
    },
    "/store/customer-group/{id}": {
      "put": {
        "operationId": "update-customer-group",
        "summary": "Update customer group",
        "description": "Update customer group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/CustomerGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "customer_group": {
                          "$ref": "#/components/schemas/CustomerGroup"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "delete": {
        "operationId": "delete-customer-group",
        "summary": "Delete customer group",
        "description": "Delete customer group",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "customer group id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/store/downloads": {
      "get": {
        "operationId": "list-downloads",
        "summary": "List all download jobs",
        "description": "List all download jobs",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "content": {
                      "items": {
                        "$ref": "#/components/schemas/DataDownload"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "post": {
        "operationId": "create-download-request",
        "summary": "Create download request",
        "description": "Create download request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data_source": {
                    "enum": [
                      "customers",
                      "orders",
                      "shipments",
                      "payments"
                    ]
                  },
                  "data_filters": {
                    "$ref": "#/components/schemas/DataFilterObject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "content": {
                      "$ref": "#/components/schemas/DataDownload"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": []
    },
    "/store/kyc-document": {
      "get": {
        "operationId": "list-kyc-documents",
        "summary": "List all kyc documents",
        "description": "List all kyc documents",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "kyc_documents": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/KycDocumentConfig"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "post": {
        "operationId": "create-kyc-document",
        "summary": "Create kyc document",
        "description": "Create kyc document",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KycDocumentConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "kyc_document": {
                          "$ref": "#/components/schemas/KycDocumentConfig"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": []
    },
    "/store/kyc-document/{id}": {
      "put": {
        "operationId": "update-kyc-document",
        "summary": "Update kyc document",
        "description": "Update kyc document",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/UpdateKycDocumentConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "kyc_document": {
                          "$ref": "#/components/schemas/KycDocumentConfig"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "delete": {
        "operationId": "delete-kyc-document",
        "summary": "Delete kyc document",
        "description": "Delete kyc document",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "kyc document id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/store/manual-payment-methods": {
      "get": {
        "operationId": "list-manual-payment-methods",
        "summary": "List all manual payment methods",
        "description": "List all manual payment methods",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "payment_methods": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ManualPaymentMethod"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "post": {
        "operationId": "create-manual-payment-method",
        "summary": "Create manual payment method",
        "description": "Create manual payment method",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualPaymentMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "payment_method": {
                          "$ref": "#/components/schemas/ManualPaymentMethod"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": []
    },
    "/store/manual-payment-methods/{id}": {
      "get": {
        "operationId": "get-manual-payment-method",
        "summary": "Retrieve manual payment method detail",
        "description": "Retrieve manual payment method detail",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "payment_method": {
                          "$ref": "#/components/schemas/ManualPaymentMethod"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "put": {
        "operationId": "update-manual-payment-method",
        "summary": "Update manual payment method detail",
        "description": "Update manual payment method detail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualPaymentMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "payment_method": {
                          "$ref": "#/components/schemas/ManualPaymentMethod"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "delete": {
        "operationId": "delete-manual-payment-method",
        "summary": "Delete manual payment method",
        "description": "Delete manual payment method",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "payment method id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/store/manual-shipping-methods": {
      "get": {
        "operationId": "list-manual-shipping-methods",
        "summary": "List all manual shipping methods",
        "description": "List all manual shipping methods",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "shipping_methods": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ManualShippingMethod"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "post": {
        "operationId": "create-manual-shipping-method",
        "summary": "Create manual shipping method",
        "description": "Create manual shipping method",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualShippingMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "shipping_method": {
                          "$ref": "#/components/schemas/ManualShippingMethod"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": []
    },
    "/store/manual-shipping-methods/{id}": {
      "get": {
        "operationId": "get-manual-shipping-method",
        "summary": "Retrieve manual shipping method detail",
        "description": "Retrieve manual shipping method detail",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "shipping_method": {
                          "$ref": "#/components/schemas/ManualShippingMethod"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "put": {
        "operationId": "update-manual-shipping-method",
        "summary": "Update manual shipping method detail",
        "description": "Update manual shipping method detail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualShippingMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "shipping_method": {
                          "$ref": "#/components/schemas/ManualShippingMethod"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "delete": {
        "operationId": "delete-manual-shipping-method",
        "summary": "Delete manual shipping method",
        "description": "Delete manual shipping method",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "shipping method id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/store/service-providers": {
      "get": {
        "operationId": "list-service-providers",
        "summary": "List all service providers",
        "description": "List all service providers",
        "parameters": [
          {
            "name": "service_type",
            "in": "query",
            "description": "type of service",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "shipping",
                "payment",
                "chat",
                "cms"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "service_providers": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ServiceProvider"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "post": {
        "operationId": "create-service-provider-config",
        "summary": "Configure a service provider",
        "description": "Configure a service provider.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "service_provider_id"
                    ],
                    "properties": {
                      "service_provider_id": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/CreateShippingServiceProvider"
                      },
                      {
                        "$ref": "#/components/schemas/CreateOtherServiceProvider"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "service_provider": {
                          "$ref": "#/components/schemas/ServiceProvider"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": []
    },
    "/store/service-providers/{id}": {
      "put": {
        "operationId": "update-service-provider-config",
        "summary": "Update service provider config",
        "description": "Update service provider config",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceProvider"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "service_provider": {
                          "$ref": "#/components/schemas/ServiceProvider"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "delete": {
        "operationId": "delete-service-provider-config",
        "summary": "Delete service provider config",
        "description": "Delete service provider config",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "service provider id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/store/service-providers/{id}/test-connection": {
      "post": {
        "operationId": "test-service-provider-connection",
        "summary": "Test service provider config",
        "description": "Test service provider config",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "api_credentials": {
                    "description": "key \u0026 value pair. keys must match with input_field_name in required_credentials_params.",
                    "type": "object"
                  }
                },
                "required": [
                  "api_credentials"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "errors": {
                      "description": "optional field. returned in case of errors only.",
                      "type": "object"
                    },
                    "code": {
                      "description": "optional key. returned in case of errors only.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "service provider id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/store/shipping-boxes": {
      "get": {
        "operationId": "get-shipping-boxes",
        "summary": "List all shipping boxes",
        "description": "List all shipping boxes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "shipping_boxs": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/StoreShippingBoxDetail"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "post": {
        "operationId": "create-shipping-box",
        "summary": "Create shipping box",
        "description": "Create shipping box",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreShippingBoxDetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "shipping_box": {
                          "$ref": "#/components/schemas/StoreShippingBoxDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": []
    },
    "/store/shipping-boxes/{id}": {
      "get": {
        "operationId": "get-shipping-box",
        "summary": "Retrieve shipping box detail",
        "description": "Retrieve shipping box detail",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "shipping_box": {
                          "$ref": "#/components/schemas/StoreShippingBoxDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "put": {
        "operationId": "update-shipping-box",
        "summary": "Update shipping box detail",
        "description": "Update shipping box detail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreShippingBoxDetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "shipping_box": {
                          "$ref": "#/components/schemas/StoreShippingBoxDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "delete": {
        "operationId": "delete-shipping-box",
        "summary": "Delete shipping box",
        "description": "Delete shipping box",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "shipping box id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/store/shipping-cost-policy": {
      "get": {
        "operationId": "get-shipping-policy",
        "summary": "Retrieve shipping cost policy",
        "description": "Returns the shipping cost policy rules",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "content": {
                      "$ref": "#/components/schemas/ShippingCostPolicy"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "post": {
        "operationId": "update-shipping-policy",
        "summary": "Create shipping cost policy",
        "description": "Create shipping cost policy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingCostPolicy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "content": {
                      "$ref": "#/components/schemas/ShippingCostPolicy"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      }
    },
    "/store/shipping-options/add": {
      "post": {
        "operationId": "add-shipping-option",
        "summary": "Add shipping options",
        "description": "Add shipping options for specified warehouse and shipping zone.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManageShippingOption"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": []
    },
    "/store/shipping-options/remove": {
      "post": {
        "operationId": "remove-shipping-option",
        "summary": "Remove shipping options",
        "description": "Remove shipping options for specified warehouse and shipping zone.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManageShippingOption"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": []
    },
    "/store/shipping-zones": {
      "get": {
        "operationId": "list-shipping-zones",
        "summary": "List all shipping zones",
        "description": "List all shipping zones",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "shipping_zones": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ShippingZoneDetail"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "post": {
        "operationId": "create-shipping-zone",
        "summary": "Create a shipping zone",
        "description": "Create a shipping zone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShippingZone"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "shipping_zone": {
                          "$ref": "#/components/schemas/ShippingZoneDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": []
    },
    "/store/shipping-zones/{id}": {
      "get": {
        "operationId": "get-shipping-zone",
        "summary": "Retrieve shipping zone detail",
        "description": "Retrieve shipping zone detail",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "shipping_zones": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ShippingZoneDetail"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "put": {
        "operationId": "update-shipping-zone",
        "summary": "Update shipping zone detail",
        "description": "Update shipping zone detail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateShippingZone"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "shipping_zone": {
                          "$ref": "#/components/schemas/ShippingZoneDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "delete": {
        "operationId": "delete-shipping-zone",
        "summary": "Delete shipping zone",
        "description": "Delete shipping zone",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "shipping zone id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/store/templates": {
      "get": {
        "operationId": "get-templates",
        "summary": "List all templates",
        "description": "List all templates",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "search string",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "templates": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/StoreTemplate"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "post": {
        "operationId": "create-template",
        "summary": "Create template",
        "description": "Create template",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreTemplateDetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "template": {
                          "$ref": "#/components/schemas/StoreTemplateDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": []
    },
    "/store/templates/{id}": {
      "get": {
        "operationId": "get-template",
        "summary": "Retrieve template detail",
        "description": "Retrieve template detail",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "template": {
                          "$ref": "#/components/schemas/StoreTemplateDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "put": {
        "operationId": "update-template",
        "summary": "Update template detail",
        "description": "Update template detail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreTemplateDetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "template": {
                          "$ref": "#/components/schemas/StoreTemplateDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "delete": {
        "operationId": "delete-template",
        "summary": "Delete template",
        "description": "Delete template",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "template id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/store/warehouses": {
      "get": {
        "operationId": "list-warehouses",
        "summary": "List all warehouses",
        "description": "List all warehouses",
        "parameters": [
          {
            "name": "accepts_returns",
            "in": "query",
            "description": "Accepts returned goods",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "active status",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "can_collect",
            "in": "query",
            "description": "Customer can collect parcel or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "can_receive_stock",
            "in": "query",
            "description": "Can receive stock",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "can_ship_parcel",
            "in": "query",
            "description": "Can ship parcel",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_checkout_point",
            "in": "query",
            "description": "Supports pos devices or not",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "warehouse_type",
            "in": "query",
            "description": "warehouse type",
            "schema": {
              "type": "string",
              "enum": [
                "retail-store",
                "distribution-center"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "warehouses": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/WarehouseDetail"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "post": {
        "operationId": "create-warehouse",
        "summary": "Create a warehouse",
        "description": "Create a warehouse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWarehouse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "warehouse": {
                          "$ref": "#/components/schemas/WarehouseDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": []
    },
    "/store/warehouses/{id}": {
      "get": {
        "operationId": "get-warehouse",
        "summary": "Retrieve warehouse detail",
        "description": "Retrieve warehouse detail",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "warehouse": {
                          "$ref": "#/components/schemas/WarehouseDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "put": {
        "operationId": "update-warehouse",
        "summary": "Update warehouse detail",
        "description": "Update warehouse detail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWarehouse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "warehouse": {
                          "$ref": "#/components/schemas/WarehouseDetail"
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "delete": {
        "operationId": "delete-warehouse",
        "summary": "Delete warehouse",
        "description": "Delete warehouse",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Store"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "warehouse id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/webhooks": {
      "get": {
        "operationId": "list-webhooks",
        "summary": "List Webhooks",
        "description": "List of all webhooks",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "content": {
                      "items": {
                        "$ref": "#/components/schemas/Webhook"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "tags": [
          "Webhooks"
        ]
      },
      "post": {
        "operationId": "create-webhook",
        "summary": "Create Webhook",
        "description": "Create a new webhook for the store. The response returns the newly created webhook configuration.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "endpoint": {
                    "type": "string",
                    "format": "uri"
                  },
                  "events": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "orders.created"
                    }
                  },
                  "custom_headers": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "name",
                  "endpoint",
                  "events"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Webhook created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "content": {
                      "$ref": "#/components/schemas/Webhook"
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "content"
                  ]
                },
                "examples": {
                  "default": {
                    "value": {
                      "success": true,
                      "message": "Webhook created successfully",
                      "content": {
                        "created_at": "2025-03-25T12:00:00Z",
                        "custom_headers": {
                          "Authorization": "Bearer xyz123"
                        },
                        "endpoint": "https://example.com/hooks/order",
                        "events": [
                          "orders.created",
                          "orders.shipped"
                        ],
                        "id": "e8a17f04-449f-40d2-9248-818b935f3c01",
                        "modified_at": "2025-03-25T12:00:00Z",
                        "name": "Order Webhook",
                        "status": "active",
                        "webhook_secret_key": "whsec_9e91f874..."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/webhooks/deliveries": {
      "get": {
        "operationId": "list-webhook-logs",
        "summary": "List All Deliveries Log",
        "description": "Paginated list of delivery attempts made across all webhooks. Supports optional filtering by `webhook_id` and `event_id`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "logs": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/WebhookDeliveryLog"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "logs",
                        "pagination"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/webhooks/deliveries/{delivery_id}": {
      "get": {
        "operationId": "get-webhook-log-detail",
        "summary": "Get Delivery Log Detail",
        "description": "Get Delivery Log Detail",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "log": {
                          "$ref": "#/components/schemas/WebhookDeliveryLogDetail"
                        }
                      },
                      "required": [
                        "log"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "tags": [
          "Webhooks"
        ]
      },
      "parameters": [
        {
          "name": "delivery_id",
          "in": "path",
          "description": "delivery id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/webhooks/event-types": {
      "get": {
        "operationId": "list-webhook-event-types",
        "summary": "List all event types",
        "description": "List all event types",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "content": {
                      "items": {
                        "$ref": "#/components/schemas/WebhookEventType"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "tags": [
          "Webhooks"
        ]
      },
      "parameters": []
    },
    "/webhooks/events": {
      "get": {
        "operationId": "list-webhook-events",
        "summary": "List All Events",
        "description": "List all events.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/pageLimit"
          },
          {
            "$ref": "#/components/parameters/sortByOptions"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "$ref": "#/components/parameters/columnBasedFilters"
          }
        ],
        "responses": {
          "200": {
            "description": "Events fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "events": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "event_id",
                              "event",
                              "timestamp",
                              "is_test"
                            ],
                            "properties": {
                              "event_id": {
                                "type": "string"
                              },
                              "event": {
                                "type": "string"
                              },
                              "timestamp": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "is_test": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "events"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "tags": [
          "Webhooks"
        ]
      },
      "parameters": []
    },
    "/webhooks/events/{event_id}": {
      "get": {
        "operationId": "get-webhook-event-detail",
        "summary": "Get Event Details",
        "description": "Fetch the original event payload and metadata, including all related delivery attempts.",
        "responses": {
          "200": {
            "description": "Event fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "content": {
                      "$ref": "#/components/schemas/WebhookEventDetail"
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "tags": [
          "Webhooks"
        ]
      },
      "parameters": [
        {
          "name": "event_id",
          "in": "path",
          "description": "Unique identifier of the event to retrieve",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid"
          }
        }
      ]
    },
    "/webhooks/{webhook_id}": {
      "get": {
        "operationId": "get-webhook-detail",
        "summary": "Get Webhook Details",
        "description": "Retrieve details of a single webhook by its ID.",
        "responses": {
          "200": {
            "description": "Webhook details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "content": {
                      "$ref": "#/components/schemas/Webhook"
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "content"
                  ]
                },
                "examples": {
                  "default": {
                    "value": {
                      "success": true,
                      "message": "Webhook retrieved successfully",
                      "content": {
                        "created_at": "2025-03-25T12:00:00Z",
                        "custom_headers": {
                          "Authorization": "Bearer xyz123"
                        },
                        "endpoint": "https://example.com/hooks/order",
                        "events": [
                          "orders.created",
                          "orders.shipped"
                        ],
                        "id": "e8a17f04-449f-40d2-9248-818b935f3c01",
                        "modified_at": "2025-03-25T12:00:00Z",
                        "name": "Order Webhook",
                        "status": "active",
                        "webhook_secret_key": "whsec_9e91f874..."
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "tags": [
          "Webhooks"
        ]
      },
      "put": {
        "operationId": "update-webhook",
        "summary": "Update Webhook",
        "description": "Update an existing webhook by replacing all fields.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Webhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "content": {
                      "$ref": "#/components/schemas/Webhook"
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "tags": [
          "Webhooks"
        ]
      },
      "delete": {
        "operationId": "delete-webhook",
        "summary": "Delete Webhook",
        "description": "Permanently delete a webhook by its ID.",
        "responses": {
          "200": {
            "description": "Webhook deleted successfully. No content returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "message",
                    "success"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "tags": [
          "Webhooks"
        ]
      },
      "parameters": [
        {
          "name": "webhook_id",
          "in": "path",
          "description": "Webhook ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/webhooks/{webhook_id}/deliveries/{delivery_id}/retry": {
      "post": {
        "operationId": "retry-webhook-delivery",
        "summary": "Retry Webhook Delivery",
        "description": "Manually retry a specific delivery log by re-sending the same payload to the configured webhook endpoint.",
        "responses": {
          "200": {
            "description": "Webhook retried successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "delivery_id": {
                          "description": "New delivery attempt ID for this replay",
                          "type": "string",
                          "format": "ulid"
                        }
                      },
                      "required": [
                        "delivery_id"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "tags": [
          "Webhooks"
        ]
      },
      "parameters": [
        {
          "name": "delivery_id",
          "in": "path",
          "description": "The ID of the delivery attempt to retry",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        },
        {
          "name": "webhook_id",
          "in": "path",
          "description": "The ID of the webhook",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ]
    },
    "/webhooks/{webhook_id}/replay-event/{event_id}": {
      "post": {
        "operationId": "replay-webhook-event",
        "summary": "Replay Event to Webhook",
        "description": "Replay an existing event to a specific webhook. This triggers a new delivery with a fresh delivery_id.",
        "responses": {
          "200": {
            "description": "Webhook replay queued",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "delivery_id": {
                          "description": "New delivery attempt ID for this replay",
                          "type": "string",
                          "format": "ulid"
                        }
                      },
                      "required": [
                        "delivery_id"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "content"
                  ]
                },
                "examples": {
                  "default": {
                    "value": {
                      "success": true,
                      "message": "Replay successfully queued",
                      "content": {
                        "delivery_id": "01HV6J6G8R3CE2PY4WJZ6ZTKCV"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "tags": [
          "Webhooks"
        ]
      },
      "parameters": [
        {
          "name": "event_id",
          "in": "path",
          "description": "The ID of the event to replay",
          "required": true,
          "schema": {
            "type": "string",
            "format": "ulid"
          }
        },
        {
          "name": "webhook_id",
          "in": "path",
          "description": "The ID of the webhook to send the replay to",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ]
    },
    "/webhooks/{webhook_id}/rotate-secret": {
      "post": {
        "operationId": "rotate-webhook-secret",
        "summary": "Rotate Webhook Secret",
        "description": "Rotate the webhook's HMAC secret. The new secret is returned once and used to sign future webhook requests.",
        "responses": {
          "200": {
            "description": "Secret rotated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "webhook_secret_key": {
                          "description": "The new HMAC secret key (only shown once)",
                          "type": "string",
                          "example": "whsec_c8a0f9d7a12fbc1f388db1c621730fb935182ef918de3b7e36e77dcf99c44f9"
                        }
                      },
                      "required": [
                        "webhook_secret_key"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "content"
                  ]
                },
                "examples": {
                  "default": {
                    "value": {
                      "success": true,
                      "message": "Webhook secret rotated successfully",
                      "content": {
                        "webhook_secret_key": "whsec_c8a0f9d7a12fbc1f388db1c621730fb935182ef918de3b7e36e77dcf99c44f9"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "tags": [
          "Webhooks"
        ]
      },
      "parameters": [
        {
          "name": "webhook_id",
          "in": "path",
          "description": "Webhook ID",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/webhooks/{webhook_id}/test": {
      "post": {
        "operationId": "send-test-webhook",
        "summary": "Send Test Webhook",
        "description": "Sends a test webhook to the configured callback URL. You may optionally provide a test payload.",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "event": {
                    "description": "The event type to simulate",
                    "type": "string",
                    "example": "orders.created"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Test webhook sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "content": {
                      "properties": {
                        "delivery_id": {
                          "description": "New delivery attempt ID for this replay",
                          "type": "string",
                          "format": "ulid"
                        }
                      },
                      "required": [
                        "delivery_id"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                },
                "examples": {
                  "default": {
                    "value": {
                      "success": true,
                      "message": "Test webhook sent successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "tags": [
          "Webhooks"
        ]
      },
      "parameters": [
        {
          "name": "webhook_id",
          "in": "path",
          "description": "The ID of the webhook to send a test to",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "AbandonedCart": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "cart_items_count": {
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "is_promotion_applied": {
            "type": "boolean"
          },
          "promotion_discount_percent": {
            "type": "number"
          },
          "promotion_discount_amount": {
            "type": "number"
          },
          "is_coupon_applied": {
            "type": "boolean"
          },
          "coupon_code": {
            "type": "string"
          },
          "coupon_discount_percent": {
            "type": "number"
          },
          "coupon_discount_amount": {
            "type": "number"
          },
          "loyalty_point_redeemed": {
            "type": "number"
          },
          "loyalty_point_earned": {
            "type": "number"
          },
          "credit_balance_used": {
            "type": "number"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "metadata": {
            "type": [
              "object",
              "null"
            ],
            "additionalProperties": {
              "type": "string"
            }
          },
          "cart_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbandonedCartItem"
            }
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "subtotal": {
            "type": "number"
          },
          "item_total_tax": {
            "type": "number"
          },
          "subtotal_including_tax": {
            "type": "number"
          },
          "shipping_amount": {
            "type": "number"
          },
          "shipping_total_tax": {
            "type": "number"
          },
          "shipping_amount_including_tax": {
            "type": "number"
          },
          "total_tax": {
            "type": "number"
          },
          "grand_total": {
            "type": "number"
          },
          "to_be_paid": {
            "type": "number"
          }
        },
        "title": "AbandonedCart"
      },
      "AbandonedCartItem": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "string"
          },
          "product_name": {
            "type": "string"
          },
          "product_image_url": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "product_variant_id": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "free_quantity": {
            "type": "integer"
          },
          "is_free_item": {
            "type": "boolean"
          },
          "listing_price": {
            "type": "number"
          },
          "selling_price": {
            "type": "number"
          },
          "selling_price_excluding_tax": {
            "type": "number"
          },
          "tax_rate": {
            "type": "number"
          },
          "tax_type": {
            "type": "string"
          }
        },
        "title": "AbandonedCartItem"
      },
      "AcceleratedRewardCouponPromotion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CouponPromotionCommonDetail"
          },
          {
            "type": "object",
            "required": [
              "details",
              "applies_to_product"
            ],
            "properties": {
              "details": {
                "$ref": "#/components/schemas/AcceleratedRewardRule"
              },
              "applies_to_product": {
                "enum": [
                  "product",
                  "category"
                ]
              }
            }
          }
        ],
        "title": "AcceleratedRewardCouponPromotion"
      },
      "AcceleratedRewardRule": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "product_id",
                "variant_id",
                "minimum_quantity",
                "minimum_value"
              ],
              "properties": {
                "product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "minimum_quantity": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "minimum_value": {
                  "type": [
                    "number",
                    "null"
                  ]
                }
              }
            }
          },
          "category_id": {
            "description": "Array of category ids.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bonus_loyalty_point": {
            "type": "integer"
          }
        },
        "required": [
          "products",
          "category_id",
          "bonus_loyalty_point"
        ],
        "title": "AcceleratedRewardRule",
        "x-tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "Address": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "country_code": {
            "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.\r\n",
            "type": "string"
          },
          "phone": {
            "description": "10 digit phone number without country code.",
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "address_line1": {
            "type": "string"
          },
          "address_line2": {
            "type": [
              "string",
              "null"
            ]
          },
          "landmark": {
            "type": [
              "string",
              "null"
            ]
          },
          "pincode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "enum": [
              "India"
            ]
          },
          "gstin": {
            "description": "Use in shipping details only for third party.",
            "type": [
              "string",
              "null"
            ]
          },
          "business_name": {
            "description": "Use in shipping details only for third party.",
            "type": [
              "string",
              "null"
            ]
          },
          "is_phone_verified": {
            "type": "boolean",
            "readOnly": true
          },
          "is_email_verified": {
            "type": "boolean",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "is_default_billing": {
            "type": "boolean"
          },
          "is_default_shipping": {
            "type": "boolean"
          }
        },
        "examples": [],
        "required": [
          "first_name",
          "phone",
          "email",
          "address_line1",
          "pincode",
          "city",
          "state",
          "country"
        ],
        "title": "Address",
        "x-tags": [
          "Customers"
        ]
      },
      "AnalyticsEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "event_type": {
            "enum": [
              "track",
              "page",
              "identify"
            ]
          },
          "event_name": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "event_data": {
            "type": "object"
          },
          "channel": {
            "type": "string"
          },
          "store_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time"
          },
          "message_id": {
            "type": "string"
          },
          "original_timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "sent_at": {
            "type": "string",
            "format": "date-time"
          },
          "received_at": {
            "type": "string",
            "format": "date-time"
          },
          "anonymous_id": {
            "type": "string"
          },
          "origin_source": {
            "type": "string"
          },
          "origin_url": {
            "type": "string"
          },
          "session_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "session_last_seen": {
            "type": "string",
            "format": "date-time"
          },
          "session_id": {
            "type": "string"
          },
          "utm_params": {
            "type": "object"
          },
          "initial_origin_url": {
            "type": "string"
          },
          "initial_origin_source": {
            "type": "string"
          },
          "initial_utm_params": {
            "type": "object"
          }
        },
        "title": "AnalyticsEvent"
      },
      "AnalyticsEventSchemaChildProperty": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "data_type": {
            "enum": [
              "string",
              "number",
              "boolean",
              "datetime",
              "json"
            ]
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "data_type": {
                  "enum": [
                    "string",
                    "number",
                    "boolean",
                    "datetime"
                  ]
                }
              }
            }
          }
        },
        "title": "AnalyticsEventSchemaChildProperty",
        "x-tags": [
          "Analytics"
        ]
      },
      "AnalyticsEventSchemaDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "schema": {
            "type": "object",
            "properties": {
              "properties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AnalyticsEventSchemaProperty"
                }
              }
            }
          }
        },
        "title": "AnalyticsEventSchemaDetail",
        "x-tags": [
          "Analytics"
        ]
      },
      "AnalyticsEventSchemaProperty": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "data_type": {
            "enum": [
              "string",
              "number",
              "boolean",
              "datetime",
              "json"
            ]
          },
          "properties": {
            "description": "this key will be available only if data_type is json.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyticsEventSchemaChildProperty"
            }
          }
        },
        "title": "AnalyticsEventSchemaProperty",
        "x-tags": [
          "Analytics"
        ]
      },
      "AnalyticsRecords": {
        "type": "object",
        "properties": {
          "schema_name": {
            "type": "string"
          },
          "query_type": {
            "enum": [
              "records"
            ]
          },
          "query": {
            "type": "object",
            "properties": {
              "fields": {
                "description": "multiple fields separated by comma.",
                "type": "string"
              },
              "filters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DynamicQueryFilter"
                }
              },
              "sort_by": {
                "description": "json object with key-value. example: {\"field1\":\"asc\",\"field2\":\"desc\"}",
                "type": "object"
              },
              "limit": {
                "type": "integer",
                "default": 25
              },
              "offset": {
                "type": "integer",
                "default": 0
              }
            },
            "required": [
              "fields"
            ]
          }
        },
        "required": [
          "schema_name",
          "query_type",
          "query"
        ],
        "title": "AnalyticsRecords",
        "x-tags": [
          "Analytics"
        ]
      },
      "AnalyticsStats": {
        "type": "object",
        "properties": {
          "schema_name": {
            "description": "Different schema name will be as per the types of data required. ",
            "type": "string"
          },
          "query_type": {
            "enum": [
              "stats"
            ]
          },
          "query": {
            "type": "object",
            "properties": {
              "aggregate": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "type",
                    "field_name",
                    "alias"
                  ],
                  "properties": {
                    "type": {
                      "enum": [
                        "COUNT",
                        "SUM",
                        "MIN",
                        "MAX",
                        "AVG"
                      ]
                    },
                    "field_name": {
                      "type": "string"
                    },
                    "alias": {
                      "type": "string"
                    }
                  }
                }
              },
              "group_by": {
                "description": "multiple fields separated by comma.",
                "type": "object",
                "properties": {
                  "fields": {
                    "type": "string"
                  },
                  "having_condition": {
                    "description": "additional conditions on filters. only aggregate columns can be passed in having condition.",
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              },
              "filters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DynamicQueryFilter"
                }
              },
              "sort_by": {
                "description": "json object with key-value. example: {\"field1\":\"asc\",\"field2\":\"desc\"}",
                "type": "object"
              },
              "limit": {
                "type": "integer",
                "default": 25
              },
              "offset": {
                "type": "integer",
                "default": 0
              }
            },
            "required": [
              "aggregate"
            ]
          }
        },
        "required": [
          "schema_name",
          "query_type",
          "query"
        ],
        "title": "AnalyticsStats",
        "x-tags": [
          "Analytics"
        ]
      },
      "AppliedCoupon": {
        "description": "Details about an active coupon applied to a cart/order",
        "type": "object",
        "properties": {
          "coupon_id": {
            "type": "string"
          },
          "coupon_type": {
            "enum": [
              "discount",
              "free-goods",
              "fixed-price",
              "free-shipping",
              "buy-x-get-y",
              "volume-based",
              "accelerated-rewards"
            ]
          },
          "savings": {
            "type": "number"
          },
          "product_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "variant_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "product_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "variant_name": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "required": [
          "coupon_id",
          "coupon_type",
          "savings",
          "product_id",
          "variant_id",
          "product_name",
          "variant_name"
        ],
        "title": "AppliedPromotion"
      },
      "AppliedPromotion": {
        "description": "Details about an active promotion applied to a cart/order",
        "type": "object",
        "properties": {
          "promotion_id": {
            "type": "string"
          },
          "promotion_type": {
            "enum": [
              "discount",
              "free-goods",
              "free-shipping",
              "buy-x-get-y",
              "volume-based"
            ]
          },
          "savings": {
            "type": "number"
          },
          "product_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "variant_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "product_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "variant_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "applied_sequence": {
            "type": "number"
          },
          "scope": {
            "type": "string"
          }
        },
        "required": [
          "promotion_id",
          "promotion_type",
          "savings",
          "product_id",
          "variant_id",
          "product_name",
          "variant_name",
          "applied_sequence",
          "scope"
        ],
        "title": "AppliedPromotion"
      },
      "AssociatedOption": {
        "type": "object",
        "properties": {
          "attribute_id": {
            "type": "string"
          },
          "attribute_value": {
            "oneOf": [
              {
                "type": "string",
                "description": "Attributes with type of **single-select**, the value will be represented as a **string**."
              },
              {
                "$ref": "#/components/schemas/ColorObject",
                "description": "**Color** attributes will have their value represented as a color object, specifying the color details with name and hexcode."
              }
            ]
          },
          "attribute_name": {
            "type": "string",
            "readOnly": true
          },
          "attribute_type": {
            "enum": [
              "single-select",
              "color"
            ],
            "readOnly": true
          },
          "key": {
            "description": "value in snake case.",
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "attribute_id",
          "attribute_value"
        ],
        "title": "AssociatedOption"
      },
      "Attribute": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "attribute_type": {
            "enum": [
              "text",
              "number",
              "boolean",
              "date",
              "single-select",
              "multi-select",
              "color"
            ]
          },
          "is_visible": {
            "type": "boolean"
          },
          "is_filterable": {
            "type": "boolean"
          },
          "is_required": {
            "type": "boolean"
          },
          "active": {
            "type": "boolean"
          },
          "supports_variant_creation": {
            "type": "boolean"
          },
          "product_count": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "title": "Attribute",
        "x-tags": [
          "Catalog"
        ]
      },
      "AutoPackingDetail": {
        "type": "object",
        "properties": {
          "packing_option": {
            "enum": [
              "auto"
            ]
          },
          "total_boxes": {
            "type": "integer"
          },
          "total_weight": {
            "type": "number"
          },
          "json_data": {
            "description": "json data of 3dbin packing.",
            "type": "object"
          }
        },
        "title": "AutoPackingDetail"
      },
      "AutoScaleBasedOnAmount": {
        "type": "object",
        "properties": {
          "spending_criteria_type": {
            "type": "string",
            "const": "minimum-purchase-amount"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "product_id",
                "variant_id",
                "auto_scale",
                "slab"
              ],
              "properties": {
                "product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "auto_scale": {
                  "type": "boolean",
                  "const": true
                },
                "slab": {
                  "type": "object",
                  "properties": {
                    "minimum_purchase_amount": {
                      "type": "number"
                    },
                    "get_quantity": {
                      "type": "integer"
                    },
                    "condition": {
                      "enum": [
                        "greater-or-equal"
                      ]
                    }
                  },
                  "required": [
                    "minimum_purchase_amount",
                    "get_quantity",
                    "condition"
                  ]
                }
              }
            }
          }
        },
        "required": [
          "spending_criteria_type",
          "products"
        ],
        "title": "AutoScaleBasedOnAmount",
        "x-tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "AutoScaleBasedOnQuantity": {
        "type": "object",
        "properties": {
          "spending_criteria_type": {
            "type": "string",
            "const": "minimum-quantity"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "product_id",
                "variant_id",
                "auto_scale",
                "slab"
              ],
              "properties": {
                "product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "auto_scale": {
                  "type": "boolean",
                  "const": true
                },
                "slab": {
                  "type": "object",
                  "properties": {
                    "buy_quantity": {
                      "type": "integer"
                    },
                    "get_quantity": {
                      "type": "integer"
                    },
                    "condition": {
                      "enum": [
                        "greater-or-equal"
                      ]
                    }
                  },
                  "required": [
                    "buy_quantity",
                    "get_quantity",
                    "condition"
                  ]
                }
              }
            }
          }
        },
        "required": [
          "spending_criteria_type",
          "products"
        ],
        "title": "AutoScaleBasedOnQuantity",
        "x-tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "AvailablePaymentOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "is_connected": {
            "type": "boolean"
          },
          "logo": {
            "type": [
              "string",
              "null"
            ]
          },
          "type": {
            "enum": [
              "auto",
              "manual"
            ]
          },
          "status": {
            "enum": [
              "active",
              "inactive"
            ]
          }
        },
        "title": "AvailablePaymentOption",
        "x-tags": [
          "Store"
        ]
      },
      "AvailableShippingOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "is_connected": {
            "type": "boolean"
          },
          "is_forward_shipping": {
            "type": "boolean"
          },
          "is_return_shipping": {
            "type": "boolean"
          },
          "logo": {
            "type": [
              "string",
              "null"
            ]
          },
          "type": {
            "enum": [
              "auto",
              "manual"
            ]
          },
          "fulfillment_type": {
            "enum": [
              "delivery",
              "collect-in-store"
            ]
          },
          "status": {
            "enum": [
              "active",
              "inactive"
            ]
          },
          "warehouses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "shipping_zone": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        },
        "title": "AvailableShippingOption",
        "x-tags": [
          "Store"
        ]
      },
      "BankTransfer": {
        "description": "Bank transfer payment - IMPS, NEFT, RTGS",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderPaymentInfo"
          },
          {
            "type": "object",
            "properties": {
              "bank_account_number": {
                "description": "masked account number\r\ne.g. ************1234",
                "type": "string"
              },
              "bank_name": {
                "type": "string"
              }
            }
          }
        ],
        "title": "BankTransfer"
      },
      "BooleanAttribute": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "boolean"
          },
          "attribute_type": {
            "enum": [
              "Boolean"
            ]
          },
          "is_readonly": {
            "type": "boolean",
            "readOnly": true
          },
          "last_updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "title": "BooleanAttribute",
        "x-tags": [
          "Customers"
        ]
      },
      "Brand": {
        "type": "object",
        "properties": {
          "name": {
            "description": "brand name. it will be used in emails and other communications.",
            "type": "string"
          },
          "logo_url": {
            "type": "string",
            "readOnly": true
          },
          "file_id": {
            "description": "for attaching logo image from media gallery.",
            "type": "string",
            "writeOnly": true
          },
          "social_media_links": {
            "description": "json object having key - value pair.\r\n\r\nexample - {\"facebook\": \"www.facebook.com/commecengine\"}",
            "type": "object"
          }
        },
        "title": "Brand",
        "x-tags": [
          "Store"
        ]
      },
      "BundleDataSync": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "listing_price": {
            "type": "number"
          },
          "selling_price": {
            "type": "number"
          },
          "image_url": {
            "type": "string"
          },
          "stock_available": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "last_synced_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "BundleDataSync",
        "x-tags": [
          "Catalog"
        ]
      },
      "BusinessBanking": {
        "type": "object",
        "properties": {
          "account_type": {
            "enum": [
              "inbound",
              "outbound"
            ]
          },
          "account_name": {
            "type": "string"
          },
          "account_number": {
            "type": "string"
          },
          "ifsc_code": {
            "type": "string"
          },
          "bank_name": {
            "type": "string"
          },
          "is_default": {
            "description": "first account will be marked as default untill another account is marked as default.",
            "type": "boolean"
          },
          "is_verified": {
            "type": "boolean",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "account_type",
          "account_name",
          "account_number",
          "ifsc_code",
          "bank_name"
        ],
        "title": "BusinessBanking",
        "x-tags": [
          "Customers"
        ]
      },
      "BusinessInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "business_type": {
            "type": "string"
          },
          "pan_number": {
            "type": "string"
          },
          "gstin": {
            "type": "string"
          },
          "is_registered_under_gst": {
            "type": "boolean"
          }
        },
        "title": "BusinessInfo",
        "x-tags": [
          "Customers"
        ]
      },
      "BuyXGetYCouponPromotion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CouponPromotionCommonDetail"
          },
          {
            "type": "object",
            "required": [
              "details",
              "applies_to_product"
            ],
            "properties": {
              "details": {
                "$ref": "#/components/schemas/BuyXGetYRule"
              },
              "applies_to_product": {
                "enum": [
                  "product"
                ]
              }
            }
          }
        ],
        "title": "BuyXGetYCouponPromotion"
      },
      "BuyXGetYRule": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/BuyXGetYRuleBasedOnQuantity"
          },
          {
            "$ref": "#/components/schemas/BuyXGetYRuleBasedOnAmount"
          }
        ],
        "title": "BuyXGetYRule",
        "x-tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "BuyXGetYRuleBasedOnAmount": {
        "description": "Additional fields required in addition to marked as required.\n1) buy_product_id or buy_variant_id or buy_from_category_id\n2) get_product_id or get_variant_id or get_from_category_id\n3) get_free_quantity or get_discount_percent",
        "type": "object",
        "properties": {
          "spending_criteria_type": {
            "type": "string",
            "const": "minimum-purchase-amount"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "minimum_purchase_amount",
                "buy_product_id",
                "buy_variant_id",
                "buy_from_category_id",
                "get_product_id",
                "get_variant_id",
                "get_from_category_id",
                "get_quantity",
                "get_offer_type",
                "get_discount_percent"
              ],
              "properties": {
                "minimum_purchase_amount": {
                  "type": "number",
                  "minimum": 1
                },
                "buy_product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "buy_variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "buy_from_category_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "get_product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "get_variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "get_from_category_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "get_quantity": {
                  "type": "integer",
                  "minimum": 1
                },
                "get_offer_type": {
                  "enum": [
                    "discount",
                    "free"
                  ]
                },
                "get_discount_percent": {
                  "description": "It can be null for get_offer_type = free",
                  "type": [
                    "number",
                    "null"
                  ]
                }
              }
            }
          },
          "maximum_discount_amount": {
            "description": "It can be null for get_offer_type = free",
            "type": [
              "number",
              "null"
            ]
          }
        },
        "required": [
          "spending_criteria_type",
          "products",
          "maximum_discount_amount"
        ],
        "title": "BuyXGetYRuleBasedOnAmount",
        "x-tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "BuyXGetYRuleBasedOnQuantity": {
        "description": "Additional fields required in addition to marked as required.\n1) buy_product_id or buy_variant_id or buy_from_category_id\n2) get_product_id or get_variant_id or get_from_category_id\n3) get_free_quantity or get_discount_percent",
        "type": "object",
        "properties": {
          "spending_criteria_type": {
            "type": "string",
            "const": "minimum-quantity"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "minimum_quantity",
                "buy_product_id",
                "buy_variant_id",
                "buy_from_category_id",
                "get_product_id",
                "get_variant_id",
                "get_from_category_id",
                "get_quantity",
                "get_offer_type",
                "get_discount_percent"
              ],
              "properties": {
                "minimum_quantity": {
                  "type": "integer",
                  "minimum": 1
                },
                "buy_product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "buy_variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "buy_from_category_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "get_product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "get_variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "get_from_category_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "get_quantity": {
                  "type": "integer",
                  "minimum": 1
                },
                "get_offer_type": {
                  "enum": [
                    "discount",
                    "free"
                  ]
                },
                "get_discount_percent": {
                  "description": "It can be null for get_offer_type = free",
                  "type": [
                    "number",
                    "null"
                  ]
                }
              }
            }
          },
          "maximum_discount_amount": {
            "description": "It can be null for get_offer_type = free",
            "type": [
              "number",
              "null"
            ]
          }
        },
        "required": [
          "spending_criteria_type",
          "products",
          "maximum_discount_amount"
        ],
        "title": "BuyXGetYRuleBasedOnQuantity",
        "x-tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "CardPayment": {
        "description": "Payments using credit card, debit card",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderPaymentInfo"
          },
          {
            "type": "object",
            "properties": {
              "card_number": {
                "description": "masked card number\r\ne.g. ************1111",
                "type": "string"
              },
              "card_type": {
                "enum": [
                  "Visa",
                  "Master Card",
                  "Rupay"
                ]
              }
            }
          }
        ],
        "title": "CardPayment"
      },
      "CatalogDataSyncItem": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ProductDataSync"
          },
          {
            "$ref": "#/components/schemas/BundleDataSync"
          },
          {
            "$ref": "#/components/schemas/CategoryDataSync"
          }
        ],
        "title": "CatalogDataSyncItem",
        "x-tags": [
          "Catalog"
        ]
      },
      "CatalogDataSyncSummary": {
        "type": "object",
        "properties": {
          "last_synced_at": {
            "type": "string",
            "format": "date-time"
          },
          "sync_status": {
            "enum": [
              "success",
              "failed"
            ]
          },
          "total_items": {
            "type": "integer"
          },
          "total_items_synced": {
            "type": "integer"
          }
        },
        "title": "CatalogDataSyncSummary",
        "x-tags": [
          "Catalog"
        ]
      },
      "Category": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryCommonDetail"
          }
        ],
        "title": "Category",
        "x-tags": [
          "Catalog"
        ]
      },
      "CategoryAutoAssignProductCondition": {
        "type": "object",
        "properties": {
          "conditions_match": {
            "enum": [
              "all",
              "any"
            ]
          },
          "conditions": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "data_type",
                "field_name",
                "operator",
                "value"
              ],
              "properties": {
                "data_type": {
                  "enum": [
                    "list",
                    "string",
                    "number",
                    "boolean"
                  ]
                },
                "field_name": {
                  "type": "string"
                },
                "operator": {
                  "enum": [
                    "equal",
                    "not-equal",
                    "exact",
                    "contains",
                    "does-not-contain",
                    "is-empty",
                    "is-not-empty",
                    "starts-with",
                    "ends-with",
                    "less",
                    "less-or-equal",
                    "greater",
                    "greater-or-equal",
                    "between"
                  ]
                },
                "value": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "description": "for list type",
                      "items": {
                        "type": "string"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "required": [
          "conditions_match",
          "conditions"
        ],
        "title": "CategoryAutoAssignProductCondition",
        "x-tags": [
          "Catalog"
        ]
      },
      "CategoryCommonDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "active": {
            "type": "boolean",
            "default": true
          },
          "parent_category_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "slug": {
            "type": "string"
          },
          "auto_assign_products": {
            "type": "boolean",
            "default": false
          },
          "product_count": {
            "type": "integer",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "child_categories": {
            "$ref": "#/components/schemas/ChildCategory"
          }
        },
        "title": "CategoryCommonDetail",
        "x-tags": [
          "Catalog"
        ]
      },
      "CategoryDataSync": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "last_synced_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "CategoryDataSync",
        "x-tags": [
          "Catalog"
        ]
      },
      "CategoryDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Category"
          },
          {
            "type": "object",
            "properties": {
              "assign_products_condition": {
                "$ref": "#/components/schemas/CategoryAutoAssignProductCondition"
              }
            }
          }
        ],
        "title": "CategoryDetail",
        "x-tags": [
          "Catalog"
        ]
      },
      "Channel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "active": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "name"
        ],
        "title": "Channel",
        "x-tags": [
          "Store"
        ]
      },
      "ChildCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CategoryCommonDetail"
          }
        ],
        "title": "ChildCategory",
        "x-tags": [
          "Catalog"
        ]
      },
      "ColorObject": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "hexcode": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "hexcode"
        ],
        "title": "ColorObject"
      },
      "ColumnBasedFilterRule": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "data",
              "attribute"
            ]
          },
          "field": {
            "type": "string"
          },
          "operator": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "title": "ColumnBasedFilterRule",
        "x-tags": [
          "Segments"
        ]
      },
      "Comparison": {
        "type": "object",
        "oneOf": [
          {
            "minProperties": 1,
            "maxProperties": 2,
            "additionalProperties": false,
            "properties": {
              "gte": {
                "type": "number",
                "minimum": 0
              }
            }
          },
          {
            "properties": {
              "gt": {
                "type": "number",
                "minimum": 0
              }
            }
          },
          {
            "properties": {
              "lte": {
                "type": "number",
                "minimum": 0
              }
            }
          },
          {
            "properties": {
              "lt": {
                "type": "number",
                "minimum": 0
              }
            }
          }
        ]
      },
      "Country": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          },
          "iso_code": {
            "type": "string"
          },
          "currency_code": {
            "type": "string"
          },
          "currency_symbol": {
            "type": "string"
          },
          "currency_name": {
            "type": "string"
          },
          "flag_icon_url": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          },
          "active": {
            "type": "boolean",
            "default": true
          },
          "all_states": {
            "type": "boolean",
            "default": true
          },
          "states": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryState"
            }
          }
        },
        "title": "Country",
        "x-tags": [
          "Store"
        ]
      },
      "CountryState": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "iso_code": {
            "type": "string"
          },
          "gst_code": {
            "type": "string"
          },
          "active": {
            "type": "boolean",
            "default": true
          },
          "alias": {
            "type": "string"
          }
        },
        "title": "CountryState"
      },
      "Coupon": {
        "allOf": [
          {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DiscountCouponPromotion"
              },
              {
                "$ref": "#/components/schemas/FreeGoodCouponPromotion"
              },
              {
                "$ref": "#/components/schemas/FixedPriceCouponPromotion"
              },
              {
                "$ref": "#/components/schemas/BuyXGetYCouponPromotion"
              },
              {
                "$ref": "#/components/schemas/VolumeBasedCouponPromotion"
              },
              {
                "$ref": "#/components/schemas/FreeShipingCouponPromotion"
              },
              {
                "$ref": "#/components/schemas/AcceleratedRewardCouponPromotion"
              }
            ]
          },
          {
            "type": "object",
            "required": [
              "coupon_type",
              "coupon_code"
            ],
            "properties": {
              "coupon_type": {
                "enum": [
                  "discount",
                  "free-goods",
                  "fixed-price",
                  "free-shipping",
                  "buy-x-get-y",
                  "volume-based",
                  "accelerated-rewards"
                ]
              },
              "coupon_code": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "application_rules": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "max_applicable_items": {
                    "type": "integer"
                  },
                  "application_priority": {
                    "enum": [
                      "cheapest_first",
                      "most_expensive_first",
                      "first_added"
                    ]
                  }
                },
                "required": [
                  "max_applicable_items",
                  "application_priority"
                ]
              }
            }
          }
        ],
        "title": "Coupon",
        "x-tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "CouponDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Coupon"
          },
          {
            "type": "object",
            "properties": {
              "terms_and_conditions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "title": "CouponDetail",
        "x-tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "CouponPromotionCommonDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "active": {
            "type": "boolean",
            "readOnly": true
          },
          "status": {
            "description": "this key is ignored in create coupon api and draft status will be added by default. required in update coupon api only.",
            "enum": [
              "draft",
              "live",
              "stopped",
              "expired"
            ]
          },
          "customer_eligibility": {
            "enum": [
              "all",
              "customer",
              "segment",
              "customer-group"
            ]
          },
          "customer_id": {
            "description": "required if customer_eligibility = custo",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "segment_id": {
            "description": "required if customer_eligibility = segment",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customer_group_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "redemption_limits": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "total_redemptions": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "per_customer_redemptions": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "per_coupon_code_redemptions": {
                "type": [
                  "integer",
                  "null"
                ]
              }
            },
            "required": [
              "total_redemptions",
              "per_customer_redemptions",
              "per_coupon_code_redemptions"
            ]
          },
          "redemption_count": {
            "type": "integer",
            "readOnly": true
          },
          "minimum_order_total": {
            "type": [
              "integer",
              "null"
            ],
            "default": 0
          },
          "for_first_time_customer_only": {
            "type": "boolean",
            "default": false
          },
          "can_be_used_with_promotion": {
            "type": "boolean",
            "default": false
          },
          "starts_at": {
            "type": "string",
            "format": "date-time"
          },
          "expires_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "name",
          "status",
          "customer_eligibility",
          "starts_at"
        ],
        "title": "CouponPromotionCommonDetail",
        "x-tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "CouponStats": {
        "type": "object",
        "properties": {
          "total_redemption": {
            "type": "integer"
          },
          "total_redemption_value": {
            "type": "number"
          }
        },
        "title": "CouponStats"
      },
      "CreateAttribute": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "attribute_type": {
            "enum": [
              "text",
              "number",
              "boolean",
              "date",
              "single-select",
              "multi-select",
              "color"
            ]
          },
          "is_visible": {
            "type": "boolean"
          },
          "is_filterable": {
            "type": "boolean"
          },
          "is_required": {
            "type": "boolean"
          },
          "active": {
            "type": "boolean",
            "default": true
          },
          "supports_variant_creation": {
            "description": "can be true for attribute types - single-select and color.",
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "attribute_type",
          "is_visible",
          "is_filterable",
          "is_required"
        ],
        "title": "CreateAttribute",
        "x-tags": [
          "Catalog"
        ]
      },
      "CreateCategory": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "active": {
            "type": "boolean",
            "default": true
          },
          "parent_category_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "slug": {
            "type": "string"
          },
          "auto_assign_products": {
            "type": "boolean",
            "default": false
          },
          "assign_products_condition": {
            "$ref": "#/components/schemas/CategoryAutoAssignProductCondition"
          }
        },
        "required": [
          "name"
        ],
        "title": "CreateCategory",
        "x-tags": [
          "Catalog"
        ]
      },
      "CreateCustomer": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "profile_image_id": {
            "description": "file id of media gallery",
            "type": [
              "string",
              "null"
            ]
          },
          "loyalty_tier_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "loyalty_tier_starting_point": {
            "type": [
              "integer",
              "null"
            ]
          },
          "business": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "business_type": {
                "type": "string"
              },
              "gstin": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "required": [
              "name",
              "business_type"
            ]
          },
          "kyc_documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KycDocument"
            }
          }
        },
        "required": [
          "first_name",
          "last_name",
          "email"
        ],
        "title": "CreateCustomer",
        "x-tags": [
          "Customers"
        ]
      },
      "CreateDraftOrder": {
        "type": "object",
        "properties": {
          "business_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "shipping_address": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "is_billing_same_as_shipping": {
            "type": "boolean"
          },
          "billing_address": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          },
          "coupon_code": {
            "type": "string"
          }
        },
        "title": "CreateDraftOrder",
        "x-tags": [
          "Orders"
        ]
      },
      "CreateDraftProduct": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "product_type": {
            "enum": [
              "physical",
              "digital",
              "bundle"
            ]
          }
        },
        "required": [
          "name",
          "product_type"
        ],
        "title": "CreateDraftProduct",
        "x-tags": [
          "Catalog"
        ]
      },
      "CreateOtherServiceProvider": {
        "type": "object",
        "properties": {
          "api_credentials": {
            "description": "json object in key \u0026 value pair. Keys must match with params specified in required_credentials_params object (input_field_name).",
            "type": "object"
          }
        },
        "required": [
          "api_credentials"
        ],
        "title": "CreateOtherServiceProvider",
        "x-tags": [
          "Store"
        ]
      },
      "CreatePayment": {
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string"
          },
          "order_number": {
            "description": "multiple order numbers are separated by comma.",
            "type": "string"
          },
          "payment_link": {
            "type": "string"
          }
        },
        "title": "CreatePayment",
        "x-tags": [
          "Payments"
        ]
      },
      "CreatePosDevice": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "device_type": {
            "enum": [
              "pos-terminal"
            ]
          },
          "external_device_id": {
            "description": "A unique ID issued by the Vendor.",
            "type": "string"
          },
          "vendor": {
            "type": "string"
          },
          "model_number": {
            "type": "string"
          },
          "mac_address": {
            "type": [
              "string",
              "null"
            ]
          },
          "location_id": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "device_type",
          "external_device_id",
          "vendor",
          "model_number",
          "location_id"
        ],
        "title": "CreatePosDevice"
      },
      "CreatePosUser": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "country_code": {
            "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.",
            "type": "string",
            "default": "+91"
          },
          "phone": {
            "description": "10 digit phone number without country code.",
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "location_id",
                "role_id"
              ],
              "properties": {
                "location_id": {
                  "type": "string"
                },
                "role_id": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "first_name",
          "phone",
          "email",
          "roles"
        ],
        "title": "CreatePosUser"
      },
      "CreateShipment": {
        "description": "Create shipment model",
        "type": "object",
        "properties": {
          "order_number": {
            "type": "string"
          },
          "shipments": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "warehouse_id",
                "shipment_items",
                "packing_option",
                "shipping_option",
                "shipping_provider_id",
                "total_weight"
              ],
              "properties": {
                "warehouse_id": {
                  "type": "string"
                },
                "shipment_items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShipmentItem"
                  }
                },
                "packing_option": {
                  "enum": [
                    "auto",
                    "manual"
                  ]
                },
                "shipping_option": {
                  "enum": [
                    "auto",
                    "manual"
                  ]
                },
                "shipping_provider_id": {
                  "type": "string"
                },
                "total_weight": {
                  "type": "number",
                  "default": 0
                },
                "boxes": {
                  "description": "use this field for packing_option = manual",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "$ref": "#/components/schemas/ShipmentBox"
                  }
                },
                "tracking_link": {
                  "description": "use this field for shipping_option = manual",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "expected_delivery_date": {
                  "description": "use this field for shipping_option = manual",
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date"
                },
                "manual_shipping_charges": {
                  "description": "use this field for shipping_option = manual",
                  "type": [
                    "number",
                    "null"
                  ]
                },
                "courier_company_id": {
                  "description": "Specifies the courier company to be used for shipping when shipping_option is set to auto. If not provided, the system will choose the most suitable courier automatically.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          }
        },
        "required": [
          "order_number",
          "shipments"
        ],
        "title": "CreateShipment",
        "x-tags": [
          "Shipping"
        ]
      },
      "CreateShippingServiceProvider": {
        "type": "object",
        "properties": {
          "api_credentials": {
            "description": "json object in key \u0026 value pair. Keys must match with params specified in required_credentials_params object (input_field_name).",
            "type": "object"
          },
          "warehouse_id": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "writeOnly": true
          },
          "shipping_zone_id": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "writeOnly": true
          }
        },
        "required": [
          "api_credentials",
          "warehouse_id",
          "shipping_zone_id"
        ],
        "title": "CreateShippingServiceProvider",
        "x-tags": [
          "Store"
        ]
      },
      "CreateShippingZone": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "countries": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "country_alias",
                "all_states"
              ],
              "properties": {
                "country_alias": {
                  "type": "string"
                },
                "all_states": {
                  "type": "boolean",
                  "default": true
                },
                "state_alias": {
                  "description": "required if all_regions=false",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "name",
          "countries"
        ],
        "title": "ShippingZone",
        "x-tags": [
          "Store"
        ]
      },
      "CreateVariant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/VariantCommonDetail"
          },
          {
            "type": "object",
            "required": [
              "name",
              "associated_options"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "associated_options": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssociatedOption"
                }
              },
              "description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "videos": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "seo": {
                "$ref": "#/components/schemas/Seo"
              },
              "shipping": {
                "$ref": "#/components/schemas/ProductShipping"
              },
              "packaging": {
                "$ref": "#/components/schemas/ProductPackaging"
              },
              "sales_channels": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SalesChannel"
                }
              },
              "related_products": {
                "type": "object",
                "properties": {
                  "cross_sell": {
                    "description": "Array of IDs. The ID value should be the product ID if a non-variant product is selected. For variant products, the ID should be a combination of the product ID and variant ID, separated by a hyphen ('-').",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "upsell": {
                    "description": "Array of IDs. The ID value should be the product ID if a non-variant product is selected. For variant products, the ID should be a combination of the product ID and variant ID, separated by a hyphen ('-').",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "promotions": {
                "$ref": "#/components/schemas/ProductPromotion"
              },
              "subscriptions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductSubscription"
                }
              }
            }
          }
        ],
        "examples": [],
        "title": "CreateVariant",
        "x-tags": [
          "Catalog"
        ]
      },
      "CreateWarehouse": {
        "description": "Validations:\n\n1) Either 'can_receive_stock' or 'accepts_returns' must be set to true.\n2) 'can_receive_stock' cannot be set to false while the warehouse has existing inventory.\n3) 'is_checkout_point' must be true when the warehouse type is 'retail-store'.\n4) If 'can_receive_stock' is false then 'can_ship_parcel' and 'can_collect' fields should be false.",
        "type": "object",
        "properties": {
          "id": {
            "description": "warehouse ulid",
            "type": "string",
            "readOnly": true
          },
          "name": {
            "description": "legal name",
            "type": "string"
          },
          "warehouse_type": {
            "enum": [
              "retail-store",
              "distribution-center"
            ]
          },
          "active": {
            "type": "boolean",
            "default": true
          },
          "gstin": {
            "type": [
              "string",
              "null"
            ]
          },
          "city": {
            "type": "string"
          },
          "address_line1": {
            "type": "string"
          },
          "address_line2": {
            "type": [
              "string",
              "null"
            ]
          },
          "landmark": {
            "type": [
              "string",
              "null"
            ]
          },
          "pincode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "country_code": {
            "type": "string",
            "default": "+91"
          },
          "contact_phone": {
            "description": "10 digit number without country code.",
            "type": "number"
          },
          "contact_email": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "image_url": {
            "type": [
              "string",
              "null"
            ]
          },
          "seller_warehouse_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "opening_hours": {
            "type": [
              "string",
              "null"
            ]
          },
          "can_receive_stock": {
            "type": "boolean"
          },
          "can_ship_parcel": {
            "type": "boolean"
          },
          "can_collect": {
            "type": "boolean"
          },
          "accepts_returns": {
            "type": "boolean"
          },
          "is_checkout_point": {
            "type": "boolean"
          },
          "shipping_boxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreShippingBox"
            },
            "readOnly": true
          },
          "service_provider_id": {
            "description": "for courier integration.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "writeOnly": true
          }
        },
        "required": [
          "name",
          "warehouse_type",
          "city",
          "address_line1",
          "pincode",
          "state",
          "country",
          "contact_phone",
          "contact_email",
          "can_receive_stock",
          "can_ship_parcel",
          "can_collect",
          "accepts_returns",
          "is_checkout_point"
        ],
        "title": "CreateWarehouse",
        "x-tags": [
          "Store"
        ]
      },
      "Currency": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          }
        },
        "title": "Currency",
        "x-tags": [
          "Store"
        ]
      },
      "CustomSlabsBasedOnAmount": {
        "type": "object",
        "properties": {
          "spending_criteria_type": {
            "type": "string",
            "const": "minimum-purchase-amount"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "product_id",
                "variant_id",
                "slabs"
              ],
              "properties": {
                "product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "slabs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "minimum_purchase_amount",
                      "get_quantity",
                      "condition"
                    ],
                    "properties": {
                      "minimum_purchase_amount": {
                        "type": "number"
                      },
                      "get_quantity": {
                        "type": "integer"
                      },
                      "condition": {
                        "enum": [
                          "greater-or-equal"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "spending_criteria_type",
          "products"
        ],
        "title": "CustomSlabsBasedOnAmount",
        "x-tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "CustomSlabsBasedOnQuantity": {
        "type": "object",
        "properties": {
          "spending_criteria_type": {
            "type": "string",
            "const": "minimum-quantity"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "product_id",
                "variant_id",
                "slabs"
              ],
              "properties": {
                "product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "slabs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "buy_quantity",
                      "get_quantity",
                      "condition"
                    ],
                    "properties": {
                      "buy_quantity": {
                        "type": "integer"
                      },
                      "get_quantity": {
                        "type": "integer"
                      },
                      "condition": {
                        "enum": [
                          "greater-or-equal"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "spending_criteria_type",
          "products"
        ],
        "title": "CustomSlabsBasedOnQuantity",
        "x-tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "Customer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerInfo"
          },
          {
            "type": "object",
            "properties": {
              "business": {
                "$ref": "#/components/schemas/BusinessInfo"
              },
              "segments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomerSegment"
                }
              }
            }
          }
        ],
        "title": "Customer",
        "x-tags": [
          "Customers"
        ]
      },
      "CustomerActivity": {
        "type": "object",
        "properties": {
          "event_type": {
            "enum": [
              "track",
              "page",
              "identity"
            ]
          },
          "event_name": {
            "type": "string"
          },
          "event_schema_id": {
            "type": "string"
          },
          "session_id": {
            "type": "string"
          },
          "session_origin_url": {
            "type": "string"
          },
          "session_last_seen": {
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "type": "string"
          },
          "event_data": {
            "description": "analytic event raw json object.",
            "type": "object"
          },
          "channel": {
            "type": "string"
          },
          "store_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time"
          },
          "message_id": {
            "type": "string"
          },
          "original_timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "sent_at": {
            "type": "string",
            "format": "date-time"
          },
          "received_at": {
            "type": "string",
            "format": "date-time"
          },
          "anonymous_id": {
            "description": "in case user id is missing.",
            "type": "string"
          }
        },
        "title": "CustomerActivity",
        "x-tags": [
          "Customers"
        ]
      },
      "CustomerAddress": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "country_code": {
            "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.\r\n",
            "type": "string"
          },
          "phone": {
            "description": "10 digit phone number without country code.",
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "address_line1": {
            "type": "string"
          },
          "address_line2": {
            "type": [
              "string",
              "null"
            ]
          },
          "landmark": {
            "type": [
              "string",
              "null"
            ]
          },
          "pincode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "enum": [
              "India"
            ]
          },
          "gstin": {
            "description": "Use in shipping details only for third party.",
            "type": [
              "string",
              "null"
            ]
          },
          "business_name": {
            "description": "Use in shipping details only for third party.",
            "type": [
              "string",
              "null"
            ]
          },
          "is_phone_verified": {
            "type": "boolean",
            "readOnly": true
          },
          "is_email_verified": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "examples": [],
        "required": [
          "first_name",
          "phone",
          "email",
          "address_line1",
          "pincode",
          "city",
          "state",
          "country"
        ],
        "title": "CustomerAddress",
        "x-tags": [
          "Customers"
        ]
      },
      "CustomerAddressCountry": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          },
          "iso_code": {
            "type": "string"
          },
          "currency_code": {
            "type": "string"
          },
          "currency_symbol": {
            "type": "string"
          },
          "currency_name": {
            "type": "string"
          },
          "flag_icon_url": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          }
        },
        "title": "CustomerAddressCountry",
        "x-tags": [
          "Store"
        ]
      },
      "CustomerAddressState": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "iso_code": {
            "type": "string"
          },
          "gst_code": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          }
        },
        "title": "CustomerAddressState",
        "x-tags": [
          "Store"
        ]
      },
      "CustomerAttribute": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "attribute_type": {
            "enum": [
              "String",
              "Integer",
              "Number",
              "Boolean",
              "List",
              "Object",
              "DateTime"
            ]
          },
          "active": {
            "type": "boolean",
            "default": true
          },
          "is_visible": {
            "type": "boolean",
            "default": true
          },
          "is_filterable": {
            "type": "boolean",
            "default": true
          },
          "is_readonly": {
            "type": "boolean",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "name",
          "attribute_type"
        ],
        "title": "CustomerAttribute",
        "x-tags": [
          "Customers"
        ]
      },
      "CustomerDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Customer"
          },
          {
            "type": "object",
            "properties": {
              "loyalty": {
                "$ref": "#/components/schemas/CustomerLoyalty"
              },
              "notification_preferences": {
                "$ref": "#/components/schemas/NotificationPreferences"
              }
            }
          }
        ],
        "title": "CustomerDetail",
        "x-tags": [
          "Customers"
        ]
      },
      "CustomerGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "is_default": {
            "description": "first record will be treated as default if not changed.",
            "type": "boolean"
          },
          "active": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "name"
        ],
        "title": "CustomerGroup",
        "x-tags": [
          "Store"
        ]
      },
      "CustomerInfo": {
        "type": "object",
        "properties": {
          "id": {
            "description": "user id",
            "type": "string",
            "readOnly": true
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "full_name": {
            "type": "string",
            "readOnly": true
          },
          "profile_image_url": {
            "type": "string",
            "readOnly": true
          },
          "country_code": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "is_phone_verified": {
            "type": "boolean",
            "readOnly": true
          },
          "is_email_verified": {
            "type": "boolean",
            "readOnly": true
          },
          "is_whatsapp_verified": {
            "type": "boolean",
            "readOnly": true
          },
          "status": {
            "enum": [
              "active",
              "inactive",
              "suspended",
              "blocked"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "last_seen": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "kyc_status": {
            "type": "boolean",
            "readOnly": true
          },
          "is_verified": {
            "type": "boolean",
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "title": "CustomerInfo",
        "x-tags": [
          "Customers"
        ]
      },
      "CustomerLoyalty": {
        "type": "object",
        "properties": {
          "membership_number": {
            "type": "string"
          },
          "points_earned": {
            "description": "total points earned within the current loyalty program.",
            "type": "integer"
          },
          "points_redeemed": {
            "description": "total points redeemed within the current loyalty program.",
            "type": "integer"
          },
          "points_balance": {
            "description": "total points available.",
            "type": "integer"
          },
          "total_spent": {
            "description": "The total amount a customer has spent within the current loyalty program, excluding taxes, promotional discounts, and redeemed loyalty points. This value is used to determine tier eligibility and earning points calculation.",
            "type": "integer"
          },
          "total_orders": {
            "description": "The total number of completed orders counted in the current loyalty program.",
            "type": "integer"
          },
          "lifetime_spent": {
            "description": " The total amount a customer has spent across all time, regardless of loyalty program participation. This includes all completed orders and excludes taxes, promotional discounts, and redeemed points.",
            "type": "integer"
          },
          "lifetime_orders": {
            "description": "The total number of completed orders across all time, regardless of loyalty program.",
            "type": "integer"
          },
          "date_of_join": {
            "description": " The date and time when the customer first enrolled in the loyalty program.",
            "type": "string",
            "format": "date-time"
          },
          "date_of_assign": {
            "description": "The date and time when the customer's current loyalty tier or program instance was assigned. This may change when tiers are upgraded, downgraded, or reassigned.",
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "date_of_reset": {
            "description": " The date and time when the customer’s current loyalty program cycle will reset, at which points earned, points redeemed, balance points, total spent, total orders will be cleared.",
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "current_tier": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "next_tier": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "total_spent_threshold": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 0
              },
              "total_orders_threshold": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 0
              }
            }
          }
        },
        "title": "CustomerLoyalty",
        "x-tags": [
          "Customers"
        ]
      },
      "CustomerSegment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "title": "CustomerSegment",
        "x-tags": [
          "Customers"
        ]
      },
      "CustomerStats": {
        "type": "object",
        "properties": {
          "total_customers": {
            "type": "integer"
          },
          "new_customers": {
            "type": "integer"
          },
          "customer_lifetime_value": {
            "type": "number"
          },
          "total_session": {
            "type": "integer"
          },
          "total_session_duration": {
            "description": "in minutes",
            "type": "integer"
          },
          "avg_session_duration": {
            "description": "in minutes\n",
            "type": "integer"
          },
          "total_spending": {
            "type": "number"
          },
          "total_paid": {
            "type": "number"
          },
          "settled_amount": {
            "type": "number"
          },
          "refunded_amount": {
            "type": "number"
          },
          "account_balance": {
            "type": "number"
          }
        },
        "title": "CustomerStats"
      },
      "DataDownload": {
        "type": "object",
        "properties": {
          "job_id": {
            "type": "string"
          },
          "status": {
            "enum": [
              "pending",
              "ready",
              "failed"
            ]
          },
          "name": {
            "type": "string"
          },
          "job_type": {
            "enum": [
              "download_orders",
              "download_customers",
              "download_shipments",
              "download_payments"
            ]
          },
          "data_source": {
            "enum": [
              "orders",
              "customers",
              "shipments",
              "payments"
            ]
          },
          "data_filters": {
            "$ref": "#/components/schemas/DataFilterObject"
          },
          "download": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "url": {
                "type": "string"
              },
              "file_name": {
                "type": "string"
              },
              "file_type": {
                "type": "string"
              }
            },
            "required": [
              "url",
              "file_name",
              "file_type"
            ]
          },
          "error_message": {
            "type": [
              "string",
              "null"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "processed_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "job_id",
          "status",
          "name",
          "job_type",
          "data_source",
          "data_filters",
          "download",
          "error_message",
          "created_at",
          "processed_at"
        ],
        "title": "DataDownload"
      },
      "DataFilterNestedObject": {
        "type": "object",
        "properties": {
          "condition": {
            "enum": [
              "AND",
              "OR"
            ]
          },
          "filters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ColumnBasedFilterRule"
                },
                {
                  "$ref": "#/components/schemas/DataFilterObject"
                }
              ]
            }
          }
        },
        "title": "DataFilterNestedObject",
        "x-tags": [
          "Segments"
        ]
      },
      "DataFilterObject": {
        "type": "object",
        "properties": {
          "condition": {
            "enum": [
              "AND",
              "OR"
            ]
          },
          "filters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ColumnBasedFilterRule"
                },
                {
                  "$ref": "#/components/schemas/DataFilterNestedObject"
                }
              ]
            }
          }
        },
        "title": "DataFilterObject",
        "x-tags": [
          "Segments"
        ]
      },
      "DateTimeAttribute": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "format": "date-time"
          },
          "attribute_type": {
            "enum": [
              "DateTime"
            ]
          },
          "is_readonly": {
            "type": "boolean",
            "readOnly": true
          },
          "last_updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "title": "DateTimeAttribute",
        "x-tags": [
          "Customers"
        ]
      },
      "DiscountAction": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "discount"
          },
          "mode": {
            "type": "string",
            "enum": [
              "percent",
              "absolute"
            ]
          },
          "value": {
            "description": "Percentage (0–100) or absolute amount off",
            "type": "number",
            "minimum": 0
          }
        },
        "additionalProperties": false,
        "required": [
          "type",
          "mode",
          "value"
        ],
        "title": "DiscountAction"
      },
      "DiscountBasedPromotion": {
        "description": "promotion_type = discount",
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "promotion_type": {
            "enum": [
              "discount"
            ]
          },
          "starts_at": {
            "type": "string"
          },
          "expires_at": {
            "description": "null means never expires.",
            "type": [
              "string",
              "null"
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PercentageBasedDiscount"
                },
                {
                  "$ref": "#/components/schemas/FixedAmountBasedDiscount"
                }
              ]
            }
          }
        },
        "required": [
          "promotion_type",
          "starts_at",
          "details"
        ],
        "title": "DiscountBasedPromotion"
      },
      "DiscountCouponPromotion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CouponPromotionCommonDetail"
          },
          {
            "type": "object",
            "required": [
              "details",
              "applies_to_product"
            ],
            "properties": {
              "details": {
                "$ref": "#/components/schemas/DiscountRule"
              },
              "applies_to_product": {
                "enum": [
                  "all",
                  "product",
                  "category"
                ]
              }
            }
          }
        ],
        "title": "DiscountCouponPromotion"
      },
      "DiscountRule": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/PercentageDiscountRule"
          },
          {
            "$ref": "#/components/schemas/FixedAmountDiscountRule"
          }
        ],
        "title": "DiscountRule",
        "x-tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "DynamicAction": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "dynamic"
          },
          "rounding": {
            "$ref": "#/components/schemas/Rounding"
          }
        },
        "additionalProperties": false,
        "required": [
          "type",
          "rounding"
        ],
        "title": "DynamicAction"
      },
      "DynamicQueryFilter": {
        "type": "object",
        "properties": {
          "field_name": {
            "type": "string"
          },
          "operator": {
            "enum": [
              "equal",
              "not-equal",
              "exact",
              "contains",
              "does-not-contain",
              "is-empty",
              "is-not-empty",
              "starts-with",
              "ends-with",
              "less",
              "less-or-equal",
              "greater",
              "greater-or-equal",
              "between"
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": [
                  "string",
                  "null"
                ]
              },
              {
                "type": "integer"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          }
        },
        "title": "DynamicQueryFilter",
        "x-tags": [
          "Analytics"
        ]
      },
      "DynamicQueryMetricsData": {
        "type": "object",
        "properties": {
          "data": {
            "description": "array of object. similar structure of metrics api, but actual keys will be decided by request payload.",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "nullable": true,
        "title": "DynamicQueryMetricsData",
        "x-tags": [
          "Analytics"
        ]
      },
      "DynamicQueryRecords": {
        "type": "object",
        "properties": {
          "data": {
            "description": "array of object containing key-value data as per fields passed in query payload.",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "nullable": true,
        "title": "DynamicQueryRecords",
        "x-tags": [
          "Analytics"
        ]
      },
      "DynamicQueryStatsData": {
        "type": "object",
        "properties": {
          "data": {
            "description": "array of object containing key-value data as per fields, aggregate fields or group by fields passed in query payload.",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "nullable": true,
        "title": "DynamicQueryStatsData",
        "x-tags": [
          "Analytics"
        ]
      },
      "DynamicSegment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SegmentInfo"
          },
          {
            "type": "object",
            "required": [
              "dynamic_conditions"
            ],
            "properties": {
              "dynamic_conditions": {
                "type": "object",
                "properties": {
                  "condition": {
                    "enum": [
                      "and",
                      "or"
                    ]
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/ColumnBasedFilterRule"
                        },
                        {
                          "$ref": "#/components/schemas/EventBasedFilterRule"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "ad_audiences": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SegmentAdAudience"
                },
                "readOnly": true
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "usage": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SegmentUsage"
                },
                "readOnly": true
              }
            }
          }
        ],
        "title": "DynamicSegment",
        "x-tags": [
          "Segments"
        ]
      },
      "EventAttributeBasedFilterRule": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "operator": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "title": "EventAttributeBasedFilterRule",
        "x-tags": [
          "Segments"
        ]
      },
      "EventBasedFilterRule": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "event"
            ]
          },
          "event": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "properties": {
                "type": "object",
                "properties": {
                  "condition": {
                    "enum": [
                      "and",
                      "or"
                    ]
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/EventAttributeBasedFilterRule"
                    }
                  }
                }
              }
            }
          },
          "inverse": {
            "type": "boolean"
          },
          "times": {
            "type": "integer"
          },
          "within": {
            "type": "integer"
          }
        },
        "title": "EventBasedFilterRule",
        "x-tags": [
          "Segments"
        ]
      },
      "FilterOptions": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterOptionsField"
            }
          },
          "events": {
            "description": "optional. by default empty array will be returned if events are not required in filters. ",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterOptionsEvent"
            }
          },
          "attributes": {
            "description": "optional. by default empty array will be returned if attributes are not required in filters. ",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterOptionsAttribute"
            }
          },
          "segments": {
            "description": "optional. by default empty array will be returned if segments are not required in filters. ",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterOptionsSegment"
            }
          }
        },
        "required": [
          "fields"
        ],
        "title": "FilterOptions",
        "x-tags": [
          "Filter Options"
        ]
      },
      "FilterOptionsAttribute": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "data_type": {
            "enum": [
              "string",
              "number",
              "datetime",
              "boolean",
              "list"
            ]
          },
          "label": {
            "type": "string"
          },
          "filterable": {
            "type": "boolean"
          },
          "sortable": {
            "type": "boolean"
          },
          "value": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "title": "FilterOptionsAttribute",
        "x-tags": [
          "Filter Options"
        ]
      },
      "FilterOptionsEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "title": "FilterOptionsEvent",
        "x-tags": [
          "Filter Options"
        ]
      },
      "FilterOptionsField": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "data_type": {
            "enum": [
              "string",
              "number",
              "datetime",
              "boolean",
              "list"
            ]
          },
          "label": {
            "type": "string"
          },
          "filterable": {
            "type": "boolean"
          },
          "sortable": {
            "type": "boolean"
          },
          "value": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "object",
                "number"
              ]
            }
          }
        },
        "title": "FilterOptionsField",
        "x-tags": [
          "Filter Options"
        ]
      },
      "FilterOptionsSegment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "title": "FilterOptionsEvent",
        "x-tags": [
          "Filter Options"
        ]
      },
      "FixedAmountBasedDiscount": {
        "description": "promotion_type = discount",
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "discount_type": {
            "type": "string",
            "const": "fixed-amount"
          },
          "discount_fixed_amount": {
            "type": "integer"
          },
          "customer_group_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "minimum_quantity": {
            "description": "It refers to the minimum quantity of a specific item a customer must purchase to qualify for the promotion.",
            "type": "integer",
            "default": 1
          },
          "maximum_quantity": {
            "description": "It refers to the maximum quantity of a specific item a customer can purchase in order to qualify for the promotion. If this field is set to null, it indicates that there is no limit.",
            "type": [
              "integer",
              "null"
            ]
          }
        },
        "required": [
          "discount_type",
          "discount_fixed_amount",
          "customer_group_id",
          "minimum_quantity",
          "maximum_quantity"
        ],
        "title": "FixedAmountBasedDiscount"
      },
      "FixedAmountDiscountRule": {
        "type": "object",
        "properties": {
          "discount_type": {
            "type": "string",
            "const": "fixed-amount"
          },
          "fixed_discount_amount": {
            "type": "number"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "product_id",
                "variant_id",
                "minimum_quantity",
                "maximum_quantity",
                "minimum_value",
                "maximum_value"
              ],
              "properties": {
                "product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "minimum_quantity": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "maximum_quantity": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "minimum_value": {
                  "type": [
                    "number",
                    "null"
                  ]
                },
                "maximum_value": {
                  "type": [
                    "number",
                    "null"
                  ]
                }
              }
            }
          },
          "category_id": {
            "description": "Array of category ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "discount_type",
          "fixed_discount_amount",
          "products",
          "category_id"
        ],
        "title": "FixedAmountDiscountRule",
        "x-tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "FixedChargeAction": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "fixed-charge"
          },
          "value": {
            "description": "Flat charge amount",
            "type": "number",
            "minimum": 0
          }
        },
        "additionalProperties": false,
        "required": [
          "type",
          "value"
        ],
        "title": "FixedChargeAction"
      },
      "FixedPriceCouponPromotion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CouponPromotionCommonDetail"
          },
          {
            "type": "object",
            "required": [
              "details",
              "applies_to_product"
            ],
            "properties": {
              "details": {
                "$ref": "#/components/schemas/FixedPriceRule"
              },
              "applies_to_product": {
                "enum": [
                  "product"
                ]
              }
            }
          }
        ],
        "title": "FixedPriceCouponPromotion"
      },
      "FixedPricePromotion": {
        "description": "promotion_type = fixed-price",
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "promotion_type": {
            "enum": [
              "fixed-price"
            ]
          },
          "starts_at": {
            "type": "string"
          },
          "expires_at": {
            "description": "null means never expires.",
            "type": [
              "string",
              "null"
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "offer_price",
                "customer_group_id",
                "minimum_quantity",
                "maximum_quantity"
              ],
              "properties": {
                "offer_price": {
                  "type": "number"
                },
                "customer_group_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "minimum_quantity": {
                  "description": "It refers to the minimum quantity of a specific item a customer must purchase to qualify for the promotion.",
                  "type": "integer",
                  "default": 1
                },
                "maximum_quantity": {
                  "description": "It refers to the maximum quantity of a specific item a customer can purchase in order to qualify for the promotion. If this field is set to null, it indicates that there is no limit.",
                  "type": [
                    "integer",
                    "null"
                  ]
                }
              }
            }
          }
        },
        "required": [
          "promotion_type",
          "starts_at",
          "details"
        ],
        "title": "FixedPricePromotion"
      },
      "FixedPriceRule": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/FixedPriceRuleBasedQuantity"
          },
          {
            "$ref": "#/components/schemas/FixedPriceRuleBasedAmount"
          }
        ],
        "title": "FixedPriceRule",
        "x-tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "FixedPriceRuleBasedAmount": {
        "type": "object",
        "properties": {
          "spending_criteria_type": {
            "type": "string",
            "const": "minimum-purchase-amount"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "product_id",
                "variant_id",
                "minimum_purchase_amount",
                "maximum_purchase_amount",
                "offer_price"
              ],
              "properties": {
                "product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "minimum_purchase_amount": {
                  "type": "number"
                },
                "maximum_purchase_amount": {
                  "description": "null means there is no limit.",
                  "type": [
                    "number",
                    "null"
                  ]
                },
                "offer_price": {
                  "type": "number"
                }
              }
            }
          }
        },
        "required": [
          "spending_criteria_type",
          "products"
        ],
        "title": "FixedPriceRuleBasedAmount",
        "x-tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "FixedPriceRuleBasedQuantity": {
        "type": "object",
        "properties": {
          "spending_criteria_type": {
            "type": "string",
            "const": "minimum-quantity"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "product_id",
                "variant_id",
                "minimum_quantity",
                "maximum_quantity",
                "offer_price"
              ],
              "properties": {
                "product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "minimum_quantity": {
                  "type": "integer",
                  "minimum": 1
                },
                "maximum_quantity": {
                  "description": "null means there is no limit.",
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "offer_price": {
                  "type": "number"
                }
              }
            }
          }
        },
        "required": [
          "spending_criteria_type",
          "products"
        ],
        "title": "FixedPriceRuleBasedQuantity",
        "x-tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "FreeAction": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "free"
          }
        },
        "additionalProperties": false,
        "required": [
          "type"
        ],
        "title": "FreeAction"
      },
      "FreeGoodCouponPromotion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CouponPromotionCommonDetail"
          },
          {
            "type": "object",
            "required": [
              "details",
              "applies_to_product"
            ],
            "properties": {
              "details": {
                "$ref": "#/components/schemas/FreeGoodsRule"
              },
              "applies_to_product": {
                "enum": [
                  "product"
                ]
              }
            }
          }
        ],
        "title": "FreeGoodCouponPromotion"
      },
      "FreeGoodsPromotion": {
        "description": "promotion_type = free-goods",
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "promotion_type": {
            "enum": [
              "free-goods"
            ]
          },
          "starts_at": {
            "type": "string",
            "format": "date-time"
          },
          "expires_at": {
            "description": "null means never expires.",
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "details": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "required": [
                    "customer_group_id"
                  ],
                  "properties": {
                    "customer_group_id": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                {
                  "oneOf": [
                    {
                      "title": "ScaleAutomatically",
                      "required": [
                        "auto_scale",
                        "slab"
                      ],
                      "properties": {
                        "auto_scale": {
                          "description": "The **auto_scale** key determines whether the promotion should be automatically adjusted based on the ratio between the quantities bought and the quantities received.\\n\\nIf **true**: The promotion will be applied dynamically according to the ratio of the buy quantity to the get quantity. For example, if the promotion is \\\"Buy 2, Get 1\\\" and the customer buys 4 items, they would receive 2 free items (scaling based on the original ratio).\\n\\nIf **false**: The promotion will be applied strictly according to the predefined conditions. For example, even if the customer buys more items, they will receive the fixed free quantity as defined in the original promotion (e.g., buying 4 would still only get them 1 free item).",
                          "type": "boolean"
                        },
                        "slab": {
                          "type": "object",
                          "properties": {
                            "buy_quantity": {
                              "type": "integer"
                            },
                            "get_quantity": {
                              "type": "integer"
                            },
                            "quantity_condition": {
                              "description": "Defines how the system will evaluate the buy_quantity to determine if the promotion should be applied.",
                              "enum": [
                                "less",
                                "less-or-equal",
                                "greater",
                                "greater-or-equal"
                              ]
                            }
                          },
                          "required": [
                            "buy_quantity",
                            "get_quantity",
                            "quantity_condition"
                          ]
                        }
                      }
                    },
                    {
                      "title": "CustomSlabs",
                      "required": [
                        "slabs"
                      ],
                      "properties": {
                        "slabs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "buy_quantity",
                              "get_quantity",
                              "quantity_condition"
                            ],
                            "properties": {
                              "buy_quantity": {
                                "type": "integer"
                              },
                              "get_quantity": {
                                "type": "integer"
                              },
                              "quantity_condition": {
                                "description": "Defines how the system will evaluate the buy_quantity to determine if the promotion should be applied.",
                                "enum": [
                                  "less",
                                  "less-or-equal",
                                  "greater",
                                  "greater-or-equal"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              ],
              "type": "object"
            }
          }
        },
        "required": [
          "promotion_type",
          "starts_at",
          "details"
        ],
        "title": "FreeGoodsPromotion"
      },
      "FreeGoodsRule": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/AutoScaleBasedOnQuantity"
          },
          {
            "$ref": "#/components/schemas/AutoScaleBasedOnAmount"
          },
          {
            "$ref": "#/components/schemas/CustomSlabsBasedOnQuantity"
          },
          {
            "$ref": "#/components/schemas/CustomSlabsBasedOnAmount"
          }
        ],
        "title": "FreeGoodsRule",
        "x-tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "FreeShipingCouponPromotion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CouponPromotionCommonDetail"
          }
        ],
        "title": "FreeShipingCouponPromotion"
      },
      "IntegerAttribute": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "integer"
          },
          "attribute_type": {
            "enum": [
              "Integer"
            ]
          },
          "is_readonly": {
            "type": "boolean",
            "readOnly": true
          },
          "last_updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "title": "IntegerAttribute",
        "x-tags": [
          "Customers"
        ]
      },
      "InventoryActivity": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "string"
          },
          "product_name": {
            "type": "string"
          },
          "variant_id": {
            "type": "string"
          },
          "variant_name": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "warehouse_id": {
            "type": "string"
          },
          "warehouse": {
            "$ref": "#/components/schemas/WarehouseBasicDetail"
          },
          "activity_type": {
            "enum": [
              "add",
              "reserve",
              "reduce",
              "adjust",
              "update"
            ]
          },
          "quantity": {
            "type": "integer"
          },
          "reason": {
            "type": "string",
            "maxLength": 512
          },
          "lot_batch": {
            "type": "string"
          },
          "mfg_date": {
            "type": "string",
            "format": "date"
          },
          "exp_date": {
            "type": "string",
            "format": "date"
          },
          "manufacturer": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "InventoryActivity",
        "x-tags": [
          "Catalog"
        ]
      },
      "InventoryCheckResponse": {
        "type": "object",
        "properties": {
          "inventory_status": {
            "enum": [
              "fulfilled",
              "partially-fulfilled",
              "not-fulfilled"
            ]
          },
          "total_fulfilled_products": {
            "type": "integer"
          },
          "total_fulfilled_warehouses": {
            "type": "integer"
          },
          "inventory": {
            "type": "object",
            "properties": {
              "products": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "product_id": {
                      "type": "string"
                    },
                    "variant_id": {
                      "type": "string"
                    },
                    "allow_backorder": {
                      "type": "boolean"
                    },
                    "track_inventory": {
                      "type": "boolean"
                    },
                    "requested_quantity": {
                      "type": "integer"
                    },
                    "stock_quantity": {
                      "type": "integer"
                    },
                    "allowed_quantity": {
                      "type": "integer"
                    },
                    "inventory_status": {
                      "enum": [
                        "fulfilled",
                        "partially-fulfilled",
                        "not-fulfilled"
                      ]
                    },
                    "warehouses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "warehouse_id": {
                            "type": "string"
                          },
                          "warehouse_name": {
                            "type": "string"
                          },
                          "stock_quantity": {
                            "type": "integer"
                          },
                          "inventory_status": {
                            "enum": [
                              "fulfilled",
                              "partially-fulfilled",
                              "not-fulfilled"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "warehouses": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "warehouse_id": {
                      "type": "string"
                    },
                    "warehouse_name": {
                      "type": "string"
                    },
                    "inventory_status": {
                      "enum": [
                        "fulfilled",
                        "partially-fulfilled",
                        "not-fulfilled"
                      ]
                    },
                    "products": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "product_id": {
                            "type": "string"
                          },
                          "variant_id": {
                            "type": "string"
                          },
                          "stock_quantity": {
                            "type": "integer"
                          },
                          "allowed_quantity": {
                            "type": "integer"
                          },
                          "inventory_status": {
                            "enum": [
                              "fulfilled",
                              "partially-fulfilled",
                              "not-fulfilled"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "title": "InventoryCheckResponse"
      },
      "InventoryDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ItemWiseInventory"
          },
          {
            "type": "object",
            "properties": {
              "details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WarehouseWiseInventory"
                }
              }
            }
          }
        ],
        "title": "InventoryDetail",
        "x-tags": [
          "Catalog"
        ]
      },
      "Invoice": {
        "description": "Invoice model",
        "type": "object",
        "properties": {
          "invoice_number": {
            "type": "string"
          },
          "invoice_date": {
            "type": "string",
            "format": "date-time"
          },
          "irn_number": {
            "description": "Invoice Reference Number",
            "type": "string"
          },
          "ack_number": {
            "description": "Acknowledgement Number",
            "type": "string"
          },
          "ack_date": {
            "description": "Acknowledgement Date",
            "type": "string",
            "format": "date-time"
          },
          "signed_qr_code": {
            "type": "string"
          },
          "gatepass_barcode": {
            "type": "string"
          },
          "seller_details": {
            "$ref": "#/components/schemas/Warehouse"
          },
          "billing_address": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "shipping_address": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "subtotal": {
            "type": "number"
          },
          "shipping_amount": {
            "type": "number"
          },
          "coupon_code": {
            "type": "string"
          },
          "coupon_discount_percent": {
            "type": "number"
          },
          "coupon_discount_amount": {
            "type": "number"
          },
          "total_tax": {
            "type": "number"
          },
          "grand_total": {
            "type": "number"
          },
          "tax_summary": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "tax_rate": {
                  "type": "number"
                },
                "taxable_value": {
                  "type": "number"
                },
                "igst": {
                  "type": "number"
                },
                "cgst": {
                  "type": "number"
                },
                "sgst": {
                  "type": "number"
                }
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "Invoice",
        "x-tags": [
          "Shipping"
        ]
      },
      "InvoiceDetail": {
        "description": "InvoiceDetail model",
        "allOf": [
          {
            "$ref": "#/components/schemas/Invoice"
          },
          {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvoiceItem"
                }
              }
            }
          }
        ],
        "title": "InvoiceDetail",
        "x-tags": [
          "Shipping"
        ]
      },
      "InvoiceItem": {
        "description": "InvoiceItem model",
        "type": "object",
        "properties": {
          "sku": {
            "type": "string"
          },
          "product_name": {
            "type": "string"
          },
          "product_image_url": {
            "type": "string"
          },
          "listing_price": {
            "type": "number"
          },
          "selling_price": {
            "type": "number"
          },
          "qty": {
            "type": "integer"
          },
          "free_qty": {
            "type": "integer"
          },
          "tax_type": {
            "type": "string"
          },
          "tax_rate": {
            "type": "number"
          },
          "hsncode": {
            "type": "string"
          },
          "batch_number": {
            "type": "string"
          },
          "expiry": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          }
        },
        "title": "InvoiceItem",
        "x-tags": [
          "Shipping"
        ]
      },
      "ItemWiseInventory": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "string"
          },
          "product_name": {
            "type": "string"
          },
          "variant_id": {
            "type": "string"
          },
          "variant_name": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "track_quantity": {
            "type": "boolean"
          },
          "allow_backorder": {
            "type": "boolean"
          },
          "track_lot_bacth": {
            "type": "boolean"
          },
          "received_quantity": {
            "type": "integer"
          },
          "reserved_quantity": {
            "type": "integer"
          },
          "sold_quantity": {
            "type": "integer"
          },
          "adjusted_quantity": {
            "type": "integer"
          },
          "stock_quantity": {
            "type": "integer"
          }
        },
        "title": "ItemWiseInventory",
        "x-tags": [
          "Catalog"
        ]
      },
      "KycDocument": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "document_number": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "file": {
            "description": "file attachment will be required or optional as per store setting.",
            "type": "string",
            "format": "binary",
            "writeOnly": true
          },
          "document_type_id": {
            "type": "string",
            "writeOnly": true
          },
          "status": {
            "enum": [
              "submitted",
              "approved",
              "rejected"
            ],
            "readOnly": true
          },
          "title": {
            "type": "string",
            "readOnly": true
          },
          "file_url": {
            "type": "string",
            "readOnly": true
          },
          "verification_type": {
            "enum": [
              "automatic",
              "manual"
            ],
            "readOnly": true
          },
          "is_verified": {
            "type": "boolean",
            "readOnly": true
          },
          "verified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_by": {
            "enum": [
              "customer",
              "admin"
            ],
            "readOnly": true
          },
          "created_by_user_id": {
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_by": {
            "enum": [
              "customer",
              "admin"
            ],
            "readOnly": true
          },
          "modified_by_user_id": {
            "type": "string",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_reason": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "document_number",
          "document_type_id"
        ],
        "title": "KycDocument",
        "x-tags": [
          "Customers"
        ]
      },
      "KycDocumentConfig": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "document_type": {
            "enum": [
              "gst",
              "pan",
              "other"
            ]
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "active": {
            "type": "boolean",
            "default": true
          },
          "is_mandatory": {
            "type": "boolean"
          },
          "is_attachment_required": {
            "type": "boolean"
          },
          "verification_type": {
            "enum": [
              "auto",
              "manual"
            ]
          }
        },
        "required": [
          "document_type",
          "title",
          "is_mandatory",
          "is_attachment_required",
          "verification_type"
        ],
        "title": "KycDocumentConfig",
        "x-tags": [
          "Store"
        ]
      },
      "ListAttribute": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "attribute_type": {
            "enum": [
              "List"
            ]
          },
          "is_readonly": {
            "type": "boolean",
            "readOnly": true
          },
          "last_updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "title": "ListAttribute",
        "x-tags": [
          "Customers"
        ]
      },
      "LotBatchWiseInventory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ItemWiseInventory"
          },
          {
            "type": "object",
            "properties": {
              "lot_batch": {
                "type": "string"
              },
              "mfg_date": {
                "type": "string",
                "format": "date"
              },
              "exp_date": {
                "type": "string",
                "format": "date"
              },
              "manufacturer": {
                "type": "string"
              }
            }
          }
        ],
        "title": "LotBatchWiseInventory",
        "x-tags": [
          "Catalog"
        ]
      },
      "LoyaltyMember": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "customer_id": {
                "type": "string"
              },
              "customer_name": {
                "type": "string"
              }
            }
          },
          {
            "$ref": "#/components/schemas/CustomerLoyalty"
          }
        ],
        "title": "LoyaltyMember",
        "x-tags": [
          "Customers"
        ]
      },
      "LoyaltyPointActivity": {
        "type": "object",
        "properties": {
          "activity": {
            "enum": [
              "order",
              "credit-note",
              "tier-upgrade",
              "tier-downgrade",
              "no-purchase-activity",
              "points-carryforward",
              "signup",
              "bonus",
              "other"
            ]
          },
          "action": {
            "enum": [
              "add",
              "remove"
            ]
          },
          "title": {
            "type": "string"
          },
          "loyalty_points": {
            "type": "integer"
          },
          "reference_number": {
            "type": "string"
          },
          "internal_note": {
            "type": "string"
          },
          "remarks": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "activity",
          "action",
          "title",
          "loyalty_points"
        ],
        "title": "LoyaltyPointActivity",
        "x-tags": [
          "Customers"
        ]
      },
      "LoyaltyPointPayment": {
        "description": "Loyalty point redemption.",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderPaymentInfo"
          }
        ],
        "title": "LoyaltyPointPayment",
        "x-tags": [
          "Orders"
        ]
      },
      "LoyaltyProgram": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "description": "name of loyalty program",
            "type": "string"
          },
          "renewal_type": {
            "description": "frequency at which loyalty program will be renewed.",
            "enum": [
              "yearly",
              "never",
              "custom"
            ]
          },
          "starts_at": {
            "description": "If renewal_type is \"custom\", a corresponding valid date must be specified; for other types, the value should be null.",
            "type": [
              "string",
              "null"
            ],
            "format": "date"
          },
          "date_of_reset": {
            "description": "If renewal_type is \"custom\", a corresponding valid date must be specified; for other types, the value should be null.",
            "type": [
              "string",
              "null"
            ],
            "format": "date"
          },
          "tier_upgrade_criteria": {
            "description": "to decide tier upgradation based on no of orders or total purchase value",
            "enum": [
              "total-spent",
              "total-orders",
              "custom"
            ]
          },
          "points_earning_type": {
            "description": "Defines how points are earned. \"dynamic\" means points are calculated based on a rate (points_earning_rate), \"fixed\" means a fixed number of points are given.",
            "enum": [
              "dynamic",
              "fixed"
            ]
          },
          "status": {
            "enum": [
              "draft",
              "active",
              "inactive"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "tiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyTier"
            }
          }
        },
        "required": [
          "name",
          "renewal_type",
          "starts_at",
          "date_of_reset",
          "tier_upgrade_criteria",
          "points_earning_type",
          "tiers"
        ],
        "title": "LoyaltyProgram",
        "x-tags": [
          "Customers"
        ]
      },
      "LoyaltyTier": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "description": "name of loyalty tier",
            "type": "string"
          },
          "total_spent_threshold": {
            "description": "It should be null if tier upgrade criteria is total orders only.",
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0
          },
          "total_orders_threshold": {
            "description": "It should be null if tier upgrade criteria is total spent only.",
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0
          },
          "points_earning_rate": {
            "description": "The rate at which points are earned. For point earning type = dynamic",
            "type": [
              "number",
              "null"
            ]
          },
          "fixed_points": {
            "description": "Fixed loyalty points for all orders. For point earning type = fixed",
            "type": [
              "integer",
              "null"
            ]
          },
          "point_value": {
            "description": "The monetary value of one loyalty point.",
            "type": "number",
            "default": 1
          },
          "earn_points_with_promotion": {
            "description": "Indicates whether customers can earn loyalty points on orders that have promotions applied.",
            "type": "boolean",
            "default": true
          },
          "redeem_points_with_promotion": {
            "description": "Indicates whether customers can redeem loyalty points when placing orders that have promotions applied.",
            "type": "boolean",
            "default": true
          },
          "is_initial": {
            "description": "only one tier will have value as True",
            "type": "boolean",
            "readOnly": true
          },
          "next_tier_id": {
            "description": "id of next loyalty tier",
            "type": [
              "integer",
              "null"
            ],
            "readOnly": true
          }
        },
        "required": [
          "name",
          "total_spent_threshold",
          "total_orders_threshold",
          "points_earning_rate",
          "fixed_points",
          "point_value",
          "earn_points_with_promotion",
          "redeem_points_with_promotion"
        ],
        "title": "LoyaltyTier",
        "x-tags": [
          "Customers"
        ]
      },
      "LoyaltyTierActivity": {
        "type": "object",
        "properties": {
          "activity": {
            "enum": [
              "tier-upgrade",
              "tier-downgrade",
              "other"
            ]
          },
          "tier_id": {
            "type": "string"
          },
          "tier_name": {
            "type": "string"
          },
          "total_spent": {
            "type": "integer"
          },
          "total_orders": {
            "type": "integer"
          },
          "remarks": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "title": "LoyaltyTierActivity",
        "x-tags": [
          "Customers"
        ]
      },
      "ManageShippingOption": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ShippingZoneBasedShippingOption"
          },
          {
            "$ref": "#/components/schemas/WarehouseBasedShippingOption"
          }
        ],
        "title": "ManageShippingOption",
        "x-tags": [
          "Store"
        ]
      },
      "ManualPackingDetail": {
        "type": "object",
        "properties": {
          "packing_option": {
            "enum": [
              "manual"
            ]
          },
          "total_boxes": {
            "type": "integer"
          },
          "total_weight": {
            "type": "number"
          },
          "boxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentBox"
            }
          }
        },
        "title": "ManualPackingDetail"
      },
      "ManualPaymentMethod": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "payment_instructions": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "name",
          "description",
          "payment_instructions"
        ],
        "title": "ManualPaymentMethod",
        "x-tags": [
          "Store"
        ]
      },
      "ManualSegment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SegmentInfo"
          },
          {
            "type": "object",
            "properties": {
              "segment_members": {
                "description": "accepts array of email ids. (valid emails only). \n send null value if members list is empty or to remove all existing members.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": "string"
                },
                "writeOnly": true
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "ad_audiences": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SegmentAdAudience"
                },
                "readOnly": true
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "usage": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SegmentUsage"
                },
                "readOnly": true
              }
            }
          }
        ],
        "title": "ManualSegment",
        "x-tags": [
          "Segments"
        ]
      },
      "ManualShippingMethod": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "shipping_method_type": {
            "enum": [
              "manual",
              "local-pickup"
            ]
          },
          "type": {
            "enum": [
              "manual",
              "local-pickup"
            ],
            "readOnly": true
          },
          "fulfillment_type": {
            "enum": [
              "delivery",
              "collect-in-store"
            ],
            "readOnly": true
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "readOnly": true
          },
          "logo": {
            "type": [
              "string",
              "null"
            ],
            "readOnly": true
          },
          "is_connected": {
            "type": "boolean",
            "default": true,
            "readOnly": true
          },
          "is_forward_shipping": {
            "type": "boolean",
            "default": true
          },
          "is_return_shipping": {
            "type": "boolean",
            "default": true
          },
          "maximum_weight": {
            "description": "can be null if there is no limit on weight.",
            "type": [
              "number",
              "null"
            ]
          },
          "enable_shipping_rate": {
            "type": "boolean"
          },
          "shipping_rate_name": {
            "description": "required if enable_shipping_rate = true",
            "type": "string"
          },
          "shipping_rate_fixed_price": {
            "description": "can be null if shipping_rate_condition is provided.",
            "type": [
              "number",
              "null"
            ]
          },
          "shipping_rate_condition": {
            "description": "can be null if shipping_rate_fixed_price is provided.",
            "$ref": "#/components/schemas/ManualShippingRateCondition"
          },
          "delivery_leadtime_minimum": {
            "description": "in days.",
            "type": "integer"
          },
          "delivery_leadtime_maximum": {
            "description": "in days.",
            "type": "integer"
          },
          "shipping_zone_id": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "writeOnly": true
          },
          "warehouse_id": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "writeOnly": true
          },
          "shipping_zone": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            },
            "readOnly": true
          },
          "warehouses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            },
            "readOnly": true
          },
          "status": {
            "enum": [
              "active",
              "inactive"
            ]
          }
        },
        "required": [
          "name",
          "shipping_method_type",
          "type",
          "description",
          "logo",
          "is_connected",
          "is_forward_shipping",
          "is_return_shipping",
          "enable_shipping_rate",
          "delivery_leadtime_minimum",
          "delivery_leadtime_maximum",
          "shipping_zone_id",
          "warehouse_id"
        ],
        "title": "ManualShippingMethod",
        "x-tags": [
          "Shipping"
        ]
      },
      "ManualShippingRateCondition": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/ShippingRateBasedOnItemWeight"
          },
          {
            "$ref": "#/components/schemas/ShippingRateBasedOnOrderValue"
          }
        ],
        "title": "ManualShippingRateCondition",
        "x-tags": [
          "Shipping"
        ]
      },
      "MeasurementUnit": {
        "type": "object",
        "properties": {
          "weight": {
            "enum": [
              "gm"
            ]
          },
          "dimension": {
            "enum": [
              "cm"
            ]
          }
        },
        "title": "MeasurementUnit",
        "x-tags": [
          "Store"
        ]
      },
      "MediaDocumentFile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MediaFileInfo"
          },
          {
            "type": "object",
            "properties": {
              "url": {
                "type": "object",
                "properties": {
                  "document": {
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          }
        ],
        "title": "MediaDocumentFile",
        "x-tags": [
          "Media Gallery"
        ]
      },
      "MediaFile": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/MediaImageFile"
          },
          {
            "$ref": "#/components/schemas/MediaVideoFile"
          },
          {
            "$ref": "#/components/schemas/MediaDocumentFile"
          }
        ],
        "title": "MediaFile",
        "x-tags": [
          "Media Gallery"
        ]
      },
      "MediaFileInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "file_name": {
            "type": "string"
          },
          "file_extension": {
            "type": "string",
            "readOnly": true
          },
          "file_size": {
            "description": "in bytes",
            "type": "integer",
            "readOnly": true
          },
          "file_type": {
            "enum": [
              "image",
              "video",
              "document"
            ],
            "readOnly": true
          },
          "mime_type": {
            "type": "string",
            "readOnly": true
          },
          "title": {
            "type": "string"
          },
          "alternate_text": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "meta_data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "folder_id": {
            "type": "string"
          },
          "upload_source": {
            "enum": [
              "local-storage",
              "external-url"
            ],
            "readOnly": true
          },
          "status": {
            "enum": [
              "ready",
              "uploaded",
              "pending"
            ],
            "readOnly": true
          },
          "usage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaFileUsage"
            },
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "title": "MediaFileInfo",
        "x-tags": [
          "Media Gallery"
        ]
      },
      "MediaFileUploadRequest": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/MediaFileUploadRequestForLocalStorage"
          },
          {
            "$ref": "#/components/schemas/MediaFileUploadRequestForExternalUrl"
          }
        ],
        "title": "MediaFileUploadRequest"
      },
      "MediaFileUploadRequestForExternalUrl": {
        "type": "object",
        "properties": {
          "upload_source": {
            "enum": [
              "external-url"
            ]
          },
          "external_url": {
            "type": "string"
          },
          "folder_id": {
            "description": "Optional. If provided, file will be uploaded into the specified folder.",
            "type": "string"
          }
        },
        "required": [
          "upload_source",
          "external_url"
        ],
        "title": "MediaFileUploadRequestForExternalUrl",
        "x-tags": [
          "Media Gallery"
        ]
      },
      "MediaFileUploadRequestForLocalStorage": {
        "type": "object",
        "properties": {
          "upload_source": {
            "enum": [
              "local-storage"
            ]
          },
          "file_type": {
            "enum": [
              "image",
              "video",
              "document"
            ]
          },
          "file_name": {
            "type": "string"
          },
          "file_size": {
            "description": "in bytes",
            "type": "integer"
          },
          "folder_id": {
            "description": "Optional. If provided, file will be uploaded into the specified folder.",
            "type": "string"
          }
        },
        "required": [
          "upload_source",
          "file_type",
          "file_name",
          "file_size"
        ],
        "title": "MediaFileUploadRequestForLocalStorage",
        "x-tags": [
          "Media Gallery"
        ]
      },
      "MediaFileUsage": {
        "type": "object",
        "properties": {
          "used_in": {
            "description": "section where file is used. e.g. product, campaign",
            "enum": [
              "product",
              "product_variant",
              "campaign",
              "warehouse"
            ]
          },
          "used_in_reference_id": {
            "description": "id of the reference object. e.g. product id, campaign id",
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "title": "MediaFileUsage",
        "x-tags": [
          "Media Gallery"
        ]
      },
      "MediaFolder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "parent_folder_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "name"
        ],
        "title": "MediaFolder",
        "x-tags": [
          "Media Gallery"
        ]
      },
      "MediaImageFile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MediaFileInfo"
          },
          {
            "type": "object",
            "properties": {
              "external_url": {
                "type": "string",
                "readOnly": true
              },
              "url": {
                "type": "object",
                "properties": {
                  "image_original": {
                    "type": "string",
                    "readOnly": true
                  },
                  "image_standard": {
                    "type": "string",
                    "readOnly": true
                  },
                  "image_thumbnail": {
                    "type": "string",
                    "readOnly": true
                  },
                  "image_blur": {
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          }
        ],
        "title": "MediaImageFile",
        "x-tags": [
          "Media Gallery"
        ]
      },
      "MediaVideoFile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MediaFileInfo"
          },
          {
            "type": "object",
            "properties": {
              "video_duration": {
                "type": "string",
                "readOnly": true
              },
              "url": {
                "type": "object",
                "properties": {
                  "video_preview_url": {
                    "type": "string",
                    "readOnly": true
                  },
                  "video_stream_hls_url": {
                    "type": "string"
                  },
                  "video_stream_dash_url": {
                    "type": "string",
                    "readOnly": true
                  },
                  "image_thumbnail": {
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          }
        ],
        "title": "MediaVideoFile",
        "x-tags": [
          "Media Gallery"
        ]
      },
      "NetbankingPayment": {
        "description": "Payments using payment gateway netbanking option.",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderPaymentInfo"
          },
          {
            "type": "object",
            "properties": {
              "bank_name": {
                "type": "string"
              }
            }
          }
        ],
        "title": "NetbankingPayment"
      },
      "NotificationChannelPreferences": {
        "description": "Set specific channel preferences",
        "type": "object",
        "properties": {
          "email": {
            "description": "Indicates whether the user has opted to receive notifications via email.",
            "type": "boolean",
            "default": true
          },
          "sms": {
            "description": "Indicates whether the user has opted to receive notifications via SMS.",
            "type": "boolean",
            "default": true
          },
          "whatsapp": {
            "description": "Indicates whether the user has opted to receive notifications via WhatsApp.",
            "type": "boolean",
            "default": true
          }
        },
        "title": "NotificationChannelPreferences"
      },
      "NotificationPreferences": {
        "description": "Set channel preferences for each type of ",
        "type": "object",
        "properties": {
          "transactional": {
            "description": "These notifications are typically critical for user engagement, providing updates, confirmations, or alerts related to their account activities.",
            "$ref": "#/components/schemas/NotificationChannelPreferences"
          },
          "promotional": {
            "description": "These notifications aim to engage users with promotional content and enhance their overall experience with the platform.",
            "$ref": "#/components/schemas/NotificationChannelPreferences"
          },
          "newsletter": {
            "description": "These notifications are often sent periodically as part of a subscription service.\n",
            "$ref": "#/components/schemas/NotificationChannelPreferences"
          }
        },
        "title": "NotificationPreferences"
      },
      "NumberAttribute": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "attribute_type": {
            "enum": [
              "Number"
            ]
          },
          "is_readonly": {
            "type": "boolean",
            "readOnly": true
          },
          "last_updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "title": "NumberAttribute",
        "x-tags": [
          "Customers"
        ]
      },
      "ObjectAttribute": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "object"
          },
          "attribute_type": {
            "enum": [
              "Object"
            ]
          },
          "is_readonly": {
            "type": "boolean",
            "readOnly": true
          },
          "last_updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "title": "ObjectAttribute",
        "x-tags": [
          "Customers"
        ]
      },
      "Order": {
        "type": "object",
        "properties": {
          "order_number": {
            "type": "string"
          },
          "order_date": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "awaiting_approval",
              "cancelled",
              "shipped",
              "delivered",
              "awaiting_shipment"
            ]
          },
          "payment_status": {
            "type": "string",
            "enum": [
              "pending",
              "success",
              "failed",
              "partially_paid",
              "refunded"
            ]
          },
          "payment_success_date": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "customer_email": {
            "type": [
              "string",
              "null"
            ]
          },
          "customer_phone": {
            "type": [
              "string",
              "null"
            ]
          },
          "customer_note": {
            "type": [
              "string",
              "null"
            ]
          },
          "is_promotion_applied": {
            "type": "boolean"
          },
          "promotion_discount_amount": {
            "type": [
              "integer",
              "null"
            ]
          },
          "is_coupon_applied": {
            "type": "boolean"
          },
          "coupon_code": {
            "type": [
              "string",
              "null"
            ]
          },
          "coupon_discount_amount": {
            "type": [
              "number",
              "null"
            ],
            "format": "double"
          },
          "on_subscription": {
            "type": "boolean"
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          },
          "item_total_tax": {
            "type": "number",
            "format": "double"
          },
          "subtotal_including_tax": {
            "type": "number",
            "format": "double"
          },
          "shipping_amount": {
            "type": "number",
            "format": "double"
          },
          "shipping_total_tax": {
            "type": "number",
            "format": "double"
          },
          "shipping_amount_including_tax": {
            "type": "number",
            "format": "double"
          },
          "total_tax": {
            "type": "number",
            "format": "double"
          },
          "grand_total": {
            "type": "number",
            "format": "double"
          },
          "loyalty_point_redeemed": {
            "type": "integer"
          },
          "credit_balance_used": {
            "type": "integer"
          },
          "to_be_paid": {
            "type": "number",
            "format": "double"
          },
          "loyalty_point_earned": {
            "type": "integer"
          },
          "order_items_count": {
            "type": "integer"
          },
          "currency": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "code": {
                "type": "string"
              },
              "symbol": {
                "type": "string"
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "Order",
        "x-tags": [
          "Orders"
        ]
      },
      "OrderActivity": {
        "type": "object",
        "properties": {
          "activity_type": {
            "type": "string",
            "readOnly": true
          },
          "order_status": {
            "type": "string",
            "readOnly": true
          },
          "comment": {
            "type": "string"
          },
          "user_type": {
            "enum": [
              "customer",
              "admin",
              "system"
            ],
            "readOnly": true
          },
          "user_name": {
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "comment"
        ],
        "title": "OrderActivity",
        "x-tags": [
          "Orders"
        ]
      },
      "OrderDetail": {
        "type": "object",
        "properties": {
          "order_number": {
            "type": "string"
          },
          "order_date": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "awaiting_approval",
              "cancelled",
              "shipped",
              "delivered",
              "awaiting_shipment"
            ]
          },
          "payment_status": {
            "type": "string",
            "enum": [
              "pending",
              "success",
              "failed",
              "partially_paid",
              "refunded"
            ]
          },
          "payment_success_date": {
            "type": "string",
            "format": "date-time"
          },
          "customer_id": {
            "type": "string"
          },
          "customer_email": {
            "type": [
              "string",
              "null"
            ]
          },
          "customer_phone": {
            "type": [
              "string",
              "null"
            ]
          },
          "customer_note": {
            "type": [
              "string",
              "null"
            ]
          },
          "is_promotion_applied": {
            "type": "boolean"
          },
          "promotion_discount_amount": {
            "type": [
              "integer",
              "null"
            ]
          },
          "is_coupon_applied": {
            "type": "boolean"
          },
          "coupon_code": {
            "type": [
              "string",
              "null"
            ]
          },
          "coupon_discount_amount": {
            "type": [
              "number",
              "null"
            ],
            "format": "double"
          },
          "on_subscription": {
            "type": "boolean"
          },
          "fulfillment_type": {
            "enum": [
              "collect-in-store",
              "delivery",
              "partial-collect-and-delivery"
            ]
          },
          "fulfillment_preferences": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PartialCollectAndDelivery"
              },
              {
                "type": "null"
              }
            ]
          },
          "sales_channel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          },
          "subtotal_tax": {
            "type": "number",
            "format": "double"
          },
          "subtotal_including_tax": {
            "type": "number",
            "format": "double"
          },
          "shipping_amount": {
            "type": "number",
            "format": "double"
          },
          "shipping_tax_rate": {
            "type": "number",
            "format": "double"
          },
          "shipping_total_tax": {
            "type": "number",
            "format": "double"
          },
          "shipping_amount_including_tax": {
            "type": "number",
            "format": "double"
          },
          "total_tax": {
            "type": "number",
            "format": "double"
          },
          "grand_total": {
            "type": "number",
            "format": "double"
          },
          "loyalty_point_redeemed": {
            "type": "integer"
          },
          "credit_balance_used": {
            "type": "integer"
          },
          "to_be_paid": {
            "type": "number",
            "format": "double"
          },
          "loyalty_point_earned": {
            "type": "integer"
          },
          "order_items_count": {
            "type": "integer"
          },
          "order_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          },
          "billing_address": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "shipping_address": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "currency": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "code": {
                "type": "string"
              },
              "symbol": {
                "type": "string"
              }
            }
          },
          "feedback": {
            "type": [
              "string",
              "null"
            ]
          },
          "allowed_actions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "applied_coupons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppliedCoupon"
            }
          },
          "applied_promotions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppliedPromotion"
            }
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPayment"
            }
          },
          "shipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderShipment"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "OrderDetail",
        "x-tags": [
          "Orders"
        ]
      },
      "OrderItem": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "string",
            "readOnly": true
          },
          "product_name": {
            "type": "string",
            "readOnly": true
          },
          "product_image_url": {
            "type": [
              "string",
              "null"
            ],
            "readOnly": true
          },
          "sku": {
            "type": "string"
          },
          "on_offer": {
            "type": "boolean",
            "readOnly": true
          },
          "on_promotion": {
            "type": "boolean",
            "readOnly": true
          },
          "on_subscription": {
            "type": "boolean"
          },
          "subscription_plan": {
            "type": [
              "string",
              "null"
            ]
          },
          "subscription_interval": {
            "type": [
              "integer",
              "null"
            ],
            "readOnly": true
          },
          "subscription_frequency": {
            "type": [
              "string",
              "null"
            ],
            "readOnly": true
          },
          "quantity": {
            "type": "integer"
          },
          "free_quantity": {
            "type": "integer",
            "readOnly": true
          },
          "is_free_item": {
            "type": "boolean",
            "readOnly": true
          },
          "selling_price": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "listing_price": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "promotion_discount_amount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "coupon_discount_amount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "tax_type": {
            "enum": [
              "GST"
            ],
            "readOnly": true
          },
          "tax_rate": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "tax_amount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "shipping_additional_cost": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "required": [
          "sku",
          "quantity"
        ],
        "title": "OrderItem",
        "x-tags": [
          "Orders"
        ]
      },
      "OrderList": {
        "description": "order list model",
        "type": "object",
        "properties": {
          "id": {
            "description": "Order id. Same as order number.",
            "type": "string"
          },
          "order_number": {
            "description": "Unique number associated with the order.",
            "type": "string"
          },
          "order_date": {
            "description": "Date and time when the order was placed.",
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "description": "Current status of the order (e.g., \"pending,\" \"processing,\" \"shipped,\" etc.).",
            "type": "string",
            "enum": [
              "draft",
              "awaiting_approval",
              "cancelled",
              "shipped",
              "delivered",
              "awaiting_shipment",
              "pending",
              "payment_failed",
              "schedule_requested"
            ]
          },
          "payment_status": {
            "description": "Current payment status of the order (e.g., \"pending,\" \"success,\" \"failed\").",
            "type": "string",
            "enum": [
              "pending",
              "success",
              "failed",
              "partially_paid",
              "refunded"
            ]
          },
          "payment_success_date": {
            "description": "Date and time when the payment for the order was successfully processed.",
            "type": [
              "string",
              "null"
            ]
          },
          "fulfillment_type": {
            "enum": [
              "collect-in-store",
              "delivery"
            ]
          },
          "on_subscription": {
            "description": "Indicates whether the order includes subscription items.",
            "type": "boolean"
          },
          "grand_total": {
            "description": "Total amount for the order, including all items, taxes, and discounts.",
            "type": "number",
            "format": "double"
          },
          "loyalty_point_redeemed": {
            "description": "Number of loyalty points redeemed in the order.",
            "type": "integer"
          },
          "credit_balance_used": {
            "description": "Amount of credit balance used in the order.",
            "type": "integer"
          },
          "to_be_paid": {
            "description": "Amount remaining to be paid for the order.",
            "type": "number",
            "format": "double"
          },
          "order_items_count": {
            "description": "Total count of items included in the order.",
            "type": "integer"
          },
          "order_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          },
          "customer_id": {
            "type": "string"
          },
          "customer_note": {
            "type": [
              "string",
              "null"
            ]
          },
          "billing_address": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "shipping_address": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "loyalty_point_earned": {
            "type": "integer"
          },
          "currency": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "code": {
                "type": "string"
              },
              "symbol": {
                "type": "string"
              }
            }
          },
          "sales_channel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "OrderList",
        "x-tags": [
          "Orders"
        ]
      },
      "OrderPayment": {
        "description": "Order Payment",
        "oneOf": [
          {
            "$ref": "#/components/schemas/CardPayment"
          },
          {
            "$ref": "#/components/schemas/NetbankingPayment"
          },
          {
            "$ref": "#/components/schemas/UpiPayment"
          },
          {
            "$ref": "#/components/schemas/WalletPayment"
          },
          {
            "$ref": "#/components/schemas/BankTransfer"
          },
          {
            "$ref": "#/components/schemas/LoyaltyPointPayment"
          }
        ],
        "title": "OrderPayment"
      },
      "OrderPaymentInfo": {
        "description": "Common fields in all types of payments.",
        "type": "object",
        "properties": {
          "transaction_type": {
            "enum": [
              "payment",
              "refund"
            ]
          },
          "request_number": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "payment_status": {
            "enum": [
              "pending",
              "success",
              "failed",
              "partially_paid",
              "refund_initiated"
            ]
          },
          "payment_date": {
            "type": "string",
            "format": "date-time"
          },
          "payment_reference_number": {
            "type": [
              "string",
              "null"
            ]
          },
          "payment_method": {
            "enum": [
              "Credit Card",
              "Debit Card",
              "Netbanking",
              "UPI",
              "Wallet",
              "Loyalty Point",
              "IMPS",
              "NEFT",
              "RTGS"
            ]
          },
          "icon_url": {
            "type": "string"
          }
        },
        "title": "OrderPaymentInfo",
        "x-tags": [
          "Orders"
        ]
      },
      "OrderReceiptJsonFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Order"
          },
          {
            "type": "object",
            "properties": {
              "billing_address": {
                "$ref": "#/components/schemas/CustomerAddress"
              },
              "shipping_address": {
                "$ref": "#/components/schemas/CustomerAddress"
              },
              "order_items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrderItem"
                }
              },
              "payments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrderPayment"
                }
              }
            }
          }
        ],
        "title": "OrderReceiptJsonFormat"
      },
      "OrderShipment": {
        "description": "Order shipment model",
        "type": "object",
        "properties": {
          "reference_number": {
            "type": "string"
          },
          "status": {
            "enum": [
              "pending",
              "approved",
              "shipped",
              "delivered",
              "cancelled"
            ]
          },
          "total_weight": {
            "type": "number"
          },
          "total_boxes": {
            "type": "integer"
          },
          "shipment_items_count": {
            "type": "integer"
          },
          "shipment_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentItem"
            }
          },
          "shipping_amount": {
            "type": "number",
            "format": "double"
          },
          "shipping_tax_amount": {
            "type": "number",
            "format": "double"
          },
          "shipping_amount_including_tax": {
            "type": "number",
            "format": "double"
          },
          "courier_company_id": {
            "type": "string"
          },
          "courier_company_name": {
            "type": "string"
          },
          "shipping_label_url": {
            "type": "string"
          },
          "awb_no": {
            "type": "string"
          },
          "eta_delivery": {
            "type": "string"
          },
          "shipped_date": {
            "type": "string",
            "format": "date-time"
          },
          "delivered_date": {
            "type": "string",
            "format": "date-time"
          },
          "cancellation_reason": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "OrderShipment",
        "x-tags": [
          "Orders"
        ]
      },
      "OrderStats": {
        "type": "object",
        "properties": {
          "total_order": {
            "type": "integer"
          },
          "total_revenue": {
            "type": "number"
          },
          "live_order": {
            "type": "integer"
          },
          "live_order_revenue": {
            "type": "number"
          },
          "completed_order": {
            "type": "integer"
          },
          "completed_order_revenue": {
            "type": "number"
          },
          "cancelled_order": {
            "type": "integer"
          },
          "cancelled_order_revenue": {
            "type": "number"
          },
          "conversion_rate": {
            "type": "number"
          }
        },
        "title": "OrderStats"
      },
      "OtherServiceProvider": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "service_type": {
            "enum": [
              "shipping",
              "payment",
              "chat",
              "cms"
            ],
            "readOnly": true
          },
          "description": {
            "type": "string",
            "readOnly": true
          },
          "short_description": {
            "type": "string",
            "readOnly": true
          },
          "logo": {
            "type": "string",
            "readOnly": true
          },
          "website_url": {
            "type": "string",
            "readOnly": true
          },
          "api_doc_url": {
            "type": "string",
            "readOnly": true
          },
          "required_credentials_params": {
            "description": "json object in key \u0026 value pair.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "input_field_name": {
                  "type": "string"
                },
                "input_field_label": {
                  "type": "string"
                },
                "input_field_type": {
                  "enum": [
                    "text",
                    "number",
                    "boolean",
                    "email",
                    "password"
                  ]
                }
              }
            },
            "readOnly": true
          },
          "is_connected": {
            "type": "boolean",
            "default": false,
            "readOnly": true
          },
          "is_connection_expired": {
            "type": "boolean",
            "default": true,
            "readOnly": true
          },
          "supports_test_connection": {
            "type": "boolean",
            "default": true,
            "readOnly": true
          },
          "api_credentials": {
            "description": "json object in key \u0026 value pair. Keys must match with params specified in required_credentials_params object (input_field_name).",
            "type": "object"
          },
          "status": {
            "default": "active",
            "enum": [
              "active",
              "inactive",
              "error"
            ]
          },
          "features": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "is_supported": {
                  "type": "boolean"
                },
                "features": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "is_supported": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            "readOnly": true
          }
        },
        "title": "OtherServiceProvider",
        "x-tags": [
          "Store"
        ]
      },
      "Pagination": {
        "description": "pagination metadata structure",
        "type": "object",
        "properties": {
          "total_records": {
            "type": "integer"
          },
          "total_pages": {
            "type": "integer"
          },
          "previous_page": {
            "type": [
              "integer",
              "null"
            ],
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "default": 25
          },
          "next_page": {
            "type": [
              "integer",
              "null"
            ],
            "nullable": true
          }
        },
        "title": "Pagination"
      },
      "PartialCollectAndDelivery": {
        "type": "object",
        "properties": {
          "pickup": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "product_id",
                "product_name",
                "variant_id",
                "variant_name",
                "quantity"
              ],
              "properties": {
                "product_id": {
                  "type": "string"
                },
                "product_name": {
                  "type": "string",
                  "readOnly": true
                },
                "variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "variant_name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "readOnly": true
                },
                "quantity": {
                  "type": "integer"
                }
              }
            }
          },
          "delivery": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "product_id",
                "product_name",
                "variant_id",
                "variant_name",
                "quantity"
              ],
              "properties": {
                "product_id": {
                  "type": "string"
                },
                "product_name": {
                  "type": "string",
                  "readOnly": true
                },
                "variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "variant_name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "readOnly": true
                },
                "quantity": {
                  "type": "integer"
                }
              }
            }
          },
          "shipping_address": {
            "$ref": "#/components/schemas/CustomerAddress"
          }
        },
        "required": [
          "pickup",
          "delivery",
          "shipping_address"
        ],
        "title": "PartialCollectAndDelivery"
      },
      "Payment": {
        "description": "Common fields in inbound and refund payments.",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentCommonFields"
          },
          {
            "$ref": "#/components/schemas/PaymentMethodDetail"
          }
        ],
        "title": "Payment",
        "x-tags": [
          "Payments"
        ]
      },
      "PaymentCommonFields": {
        "description": "Common fields in inbound and refund payments.",
        "type": "object",
        "properties": {
          "transaction_type": {
            "enum": [
              "payment",
              "refund"
            ]
          },
          "request_number": {
            "type": "string"
          },
          "transaction_date": {
            "type": "string",
            "format": "date-time"
          },
          "transaction_amount": {
            "type": "number",
            "format": "double"
          },
          "settled_amount": {
            "type": "number",
            "format": "double",
            "default": 0
          },
          "unsettled_amount": {
            "type": "number",
            "format": "double",
            "default": 0
          },
          "payment_method": {
            "enum": [
              "Credit Card",
              "Debit Card",
              "Netbanking",
              "UPI",
              "Wallet",
              "IMPS",
              "NEFT",
              "RTGS"
            ]
          },
          "payment_reference_number": {
            "type": "string"
          },
          "payment_mode": {
            "enum": [
              "Bank-Transfer",
              "Payment-Gateway"
            ]
          },
          "payment_gateway": {
            "enum": [
              "Bank-Transfer",
              "PayU"
            ]
          },
          "status": {
            "enum": [
              "settled",
              "partially_settled",
              "unsettled"
            ]
          },
          "customer_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "customer_name": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "title": "PaymentCommonFields",
        "x-tags": [
          "Payments"
        ]
      },
      "PaymentDetail": {
        "description": "Payment info with settlement details.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Payment"
          },
          {
            "type": "object",
            "properties": {
              "settlement": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PaymentSettlement"
                }
              },
              "allowed_actions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "title": "PaymentDetail",
        "x-tags": [
          "Payments"
        ]
      },
      "PaymentMethodBankTransfer": {
        "type": "object",
        "properties": {
          "bank_account_number": {
            "type": "string"
          },
          "bank_name": {
            "type": "string"
          }
        },
        "title": "PaymentMethodBankTransfer",
        "x-tags": [
          "Payments"
        ]
      },
      "PaymentMethodCard": {
        "type": "object",
        "properties": {
          "card_number": {
            "type": "string"
          },
          "card_type": {
            "type": "string"
          }
        },
        "title": "PaymentMethodCard",
        "x-tags": [
          "Payments"
        ]
      },
      "PaymentMethodDetail": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "icon_url": {
                "type": "string"
              }
            }
          },
          {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentMethodCard"
              },
              {
                "$ref": "#/components/schemas/PaymentMethodNb"
              },
              {
                "$ref": "#/components/schemas/PaymentMethodWallet"
              },
              {
                "$ref": "#/components/schemas/PaymentMethodUpi"
              },
              {
                "$ref": "#/components/schemas/PaymentMethodBankTransfer"
              }
            ]
          }
        ],
        "title": "PaymentMethodDetail",
        "x-tags": [
          "Payments"
        ]
      },
      "PaymentMethodNb": {
        "type": "object",
        "properties": {
          "bank_name": {
            "type": "string"
          }
        },
        "title": "PaymentMethodNB",
        "x-tags": [
          "Payments"
        ]
      },
      "PaymentMethodUpi": {
        "type": "object",
        "properties": {
          "upi_id": {
            "type": "string"
          }
        },
        "title": "PaymentMethodUPI",
        "x-tags": [
          "Payments"
        ]
      },
      "PaymentMethodWallet": {
        "type": "object",
        "properties": {
          "wallet_name": {
            "type": "string"
          }
        },
        "title": "PaymentMethodWallet",
        "x-tags": [
          "Payments"
        ]
      },
      "PaymentSettlement": {
        "description": "Payment settlement details.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "settlement_option": {
                "enum": [
                  "order",
                  "refund",
                  "payment"
                ]
              },
              "settlement_date": {
                "type": "string",
                "format": "date-time"
              },
              "settled_amount": {
                "type": "string"
              }
            }
          },
          {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaymentSettlementWithOrder"
              },
              {
                "$ref": "#/components/schemas/PaymentSettlementWithRefund"
              },
              {
                "$ref": "#/components/schemas/RefundForPaymentSettlement"
              }
            ]
          }
        ],
        "title": "PaymentSettlement",
        "x-tags": [
          "Payments"
        ]
      },
      "PaymentSettlementWithOrder": {
        "description": "Payment settlement with orders",
        "type": "object",
        "properties": {
          "order_number": {
            "type": "string"
          },
          "order_date": {
            "type": "string",
            "format": "date-time"
          },
          "order_amount": {
            "type": "number",
            "format": "double"
          },
          "order_status": {
            "enum": [
              "awaiting-approval",
              "awaiting-shipment",
              "shipped",
              "delivered"
            ]
          }
        },
        "title": "PaymentSettlementWithOrder",
        "x-tags": [
          "Payments"
        ]
      },
      "PaymentSettlementWithRefund": {
        "description": "Payment settlement with orders",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentSettlementWithRefundCommon"
          },
          {
            "$ref": "#/components/schemas/PaymentMethodDetail"
          }
        ],
        "title": "PaymentSettlementWithRefund",
        "x-tags": [
          "Payments"
        ]
      },
      "PaymentSettlementWithRefundCommon": {
        "description": "Payment settlement with orders",
        "type": "object",
        "properties": {
          "payment_method": {
            "type": "string"
          },
          "payment_reference_number": {
            "type": "string"
          },
          "request_number": {
            "type": "string"
          },
          "transaction_date": {
            "type": "string",
            "format": "date-time"
          },
          "transaction_amount": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "enum": [
              "success"
            ]
          }
        },
        "title": "PaymentSettlementWithRefundCommon",
        "x-tags": [
          "Payments"
        ]
      },
      "PaymentStats": {
        "type": "object",
        "properties": {
          "total_payments": {
            "type": "integer"
          },
          "totaL_payments_value": {
            "type": "number"
          },
          "total_refunds": {
            "type": "integer"
          },
          "total_refunds_value": {
            "type": "number"
          }
        },
        "title": "PaymentStats"
      },
      "PercentageBasedDiscount": {
        "description": "promotion_type = discount",
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "discount_type": {
            "type": "string",
            "const": "percentage"
          },
          "discount_percent": {
            "type": "number"
          },
          "customer_group_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "minimum_quantity": {
            "description": "It refers to the minimum quantity of a specific item a customer must purchase to qualify for the promotion.",
            "type": "integer",
            "default": 1
          },
          "maximum_quantity": {
            "description": "It refers to the maximum quantity of a specific item a customer can purchase in order to qualify for the promotion. If this field is set to null, it indicates that there is no limit.",
            "type": [
              "integer",
              "null"
            ]
          },
          "maximum_discount_amount": {
            "description": "When a value is specified, the discount amount will not exceed the defined maximum, ensuring that the promotion stays within a controlled discount range. If this field is set to null, it indicates that there is no limit to the discount amount.",
            "type": [
              "number",
              "null"
            ]
          }
        },
        "required": [
          "discount_type",
          "discount_percent",
          "customer_group_id",
          "minimum_quantity",
          "maximum_quantity",
          "maximum_discount_amount"
        ],
        "title": "PercentageBasedDiscount"
      },
      "PercentageDiscountRule": {
        "type": "object",
        "properties": {
          "discount_type": {
            "type": "string",
            "const": "percentage"
          },
          "discount_percent": {
            "type": "number"
          },
          "maximum_discount_amount": {
            "type": [
              "number",
              "null"
            ]
          },
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "product_id",
                "variant_id",
                "minimum_quantity",
                "maximum_quantity",
                "minimum_value",
                "maximum_value"
              ],
              "properties": {
                "product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "minimum_quantity": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "maximum_quantity": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "minimum_value": {
                  "type": [
                    "number",
                    "null"
                  ]
                },
                "maximum_value": {
                  "type": [
                    "number",
                    "null"
                  ]
                }
              }
            }
          },
          "category_id": {
            "description": "Array of category ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "discount_type",
          "discount_percent",
          "maximum_discount_amount",
          "products",
          "category_id"
        ],
        "title": "PercentageDiscountRule",
        "x-tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "Pincode": {
        "description": "Pincode model",
        "type": "object",
        "properties": {
          "pincode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state_name": {
            "type": "string"
          },
          "country_name": {
            "type": "string"
          },
          "country_iso_code": {
            "type": "string"
          }
        },
        "title": "Pincode",
        "x-tags": [
          "Store"
        ]
      },
      "PosDevice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "device_type": {
            "enum": [
              "pos-terminal"
            ]
          },
          "external_device_id": {
            "description": "A unique ID issued by the Vendor.",
            "type": "string"
          },
          "vendor": {
            "type": "string"
          },
          "model_number": {
            "type": "string"
          },
          "mac_address": {
            "type": [
              "string",
              "null"
            ]
          },
          "location_id": {
            "type": "string"
          },
          "location_name": {
            "type": "string",
            "readOnly": true
          },
          "status": {
            "enum": [
              "unpaired",
              "available",
              "claimed",
              "offline",
              "revoked"
            ],
            "readOnly": true
          },
          "is_busy": {
            "description": "This field specifies the device is occupied for a transaction.",
            "type": "boolean"
          }
        },
        "title": "PosDevice"
      },
      "PosPermission": {
        "type": "object",
        "properties": {
          "module_name": {
            "type": "string"
          },
          "resource_group": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "module_name",
          "resource_group",
          "description"
        ],
        "title": "PosPermission"
      },
      "PosRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "type": {
            "enum": [
              "global",
              "custom"
            ],
            "readOnly": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "module_name",
                "resource_group",
                "permission_type"
              ],
              "properties": {
                "module_name": {
                  "type": "string"
                },
                "resource_group": {
                  "type": "string"
                },
                "permission_type": {
                  "enum": [
                    "admin",
                    "readonly",
                    "none"
                  ]
                }
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "name",
          "type",
          "permissions"
        ],
        "title": "PosRole"
      },
      "PosUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "phone": {
            "description": "10 digit phone number without country code.",
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "pin": {
            "type": "integer",
            "readOnly": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "location_id": {
                  "type": "string"
                },
                "location_name": {
                  "type": "string",
                  "readOnly": true
                },
                "role_id": {
                  "type": "string"
                },
                "role_name": {
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          },
          "status": {
            "enum": [
              "active",
              "inactive",
              "blocked"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "title": "PosUser"
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "description": "product id",
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 128
          },
          "status": {
            "enum": [
              "draft",
              "active",
              "inactive"
            ],
            "readOnly": true
          },
          "active": {
            "type": "boolean"
          },
          "stock_available": {
            "type": "boolean"
          },
          "short_description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 256
          },
          "metadata": {
            "type": [
              "object",
              "null"
            ],
            "additionalProperties": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "product_type": {
            "enum": [
              "physical",
              "digital",
              "bundle"
            ]
          },
          "hsn_code": {
            "type": [
              "string",
              "null"
            ]
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "readOnly": true
                },
                "active": {
                  "type": "boolean",
                  "readOnly": true
                }
              }
            }
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAttribute"
            }
          },
          "variant_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariantOption"
            }
          },
          "reviews_rating_sum": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "reviews_count": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "is_featured": {
            "type": "boolean"
          },
          "on_offer": {
            "type": "boolean"
          },
          "on_promotion": {
            "type": "boolean"
          },
          "on_subscription": {
            "type": "boolean"
          },
          "has_variant": {
            "type": "boolean"
          },
          "variant_count": {
            "type": "integer",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "sku": {
            "type": "string",
            "maxLength": 64
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductImage"
            }
          }
        },
        "required": [
          "reviews_rating_sum",
          "reviews_count",
          "is_featured",
          "on_offer",
          "on_promotion",
          "on_subscription",
          "has_variant",
          "sku"
        ],
        "title": "Product",
        "x-tags": [
          "Catalog"
        ]
      },
      "ProductAnalyticsStats": {
        "type": "object",
        "properties": {
          "viewed": {
            "type": "integer"
          },
          "added_to_cart": {
            "type": "integer"
          },
          "removed_from_cart": {
            "type": "integer"
          },
          "checkout_started": {
            "type": "integer"
          },
          "purchased": {
            "type": "integer"
          }
        },
        "title": "ProductAnalyticsStats"
      },
      "ProductAttribute": {
        "type": "object",
        "properties": {
          "attribute_id": {
            "type": "string"
          },
          "attribute_name": {
            "type": "string",
            "readOnly": true
          },
          "attribute_type": {
            "type": "string",
            "enum": [
              "text",
              "number",
              "boolean",
              "date",
              "single-select",
              "multi-select",
              "color"
            ],
            "readOnly": true
          },
          "attribute_value": {
            "oneOf": [
              {
                "type": "string",
                "description": "string value for attribute type **text**, **single select** and **date**."
              },
              {
                "type": "number",
                "description": "numeric value for attribute type number."
              },
              {
                "type": "boolean",
                "description": "true/false for attribute type boolean."
              },
              {
                "type": "array",
                "description": "for attribute type = multi-select",
                "items": {
                  "type": "string"
                }
              },
              {
                "$ref": "#/components/schemas/ColorObject",
                "description": "for attribute type = color"
              }
            ]
          },
          "key": {
            "description": "Value in snake case.",
            "type": "string",
            "readOnly": true
          }
        },
        "examples": [],
        "title": "ProductAttribute",
        "x-tags": [
          "Catalog"
        ]
      },
      "ProductBasicDetail": {
        "type": "object",
        "properties": {
          "id": {
            "description": "product id or combination of product id and variant id separated by hyphen.",
            "type": "string",
            "readOnly": true
          },
          "product_id": {
            "type": "string"
          },
          "product_name": {
            "type": "string"
          },
          "product_type": {
            "enum": [
              "physical",
              "digital",
              "bundle"
            ]
          },
          "status": {
            "enum": [
              "draft",
              "active",
              "inactive"
            ],
            "readOnly": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reviews_rating_sum": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "reviews_count": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hsn_code": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 128
          },
          "variant_id": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 128
          },
          "variant_name": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 128
          },
          "slug": {
            "type": "string",
            "maxLength": 128
          },
          "sku": {
            "type": "string",
            "maxLength": 128
          },
          "associated_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssociatedOption"
            }
          },
          "active": {
            "type": "boolean"
          },
          "stock_available": {
            "type": "boolean"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductImage"
            }
          },
          "pricing": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPricing"
            }
          }
        },
        "title": "ProductBasicDetail",
        "x-tags": [
          "Catalog"
        ]
      },
      "ProductBundleItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductBasicDetail"
          },
          {
            "type": "object",
            "properties": {
              "quantity": {
                "type": "integer"
              }
            }
          }
        ],
        "title": "ProductBundelItem",
        "x-tags": [
          "Catalog"
        ]
      },
      "ProductCommonDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 128
          },
          "status": {
            "enum": [
              "draft",
              "active",
              "inactive"
            ]
          },
          "active": {
            "type": "boolean"
          },
          "stock_available": {
            "type": "boolean"
          },
          "short_description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 256
          },
          "metadata": {
            "type": [
              "object",
              "null"
            ],
            "additionalProperties": {
              "type": "string"
            }
          },
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "product_type": {
            "enum": [
              "physical",
              "digital",
              "bundle"
            ],
            "readOnly": true
          },
          "hsn_code": {
            "type": [
              "string",
              "null"
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAttribute"
            }
          },
          "seo": {
            "$ref": "#/components/schemas/Seo"
          },
          "variant_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariantOption"
            },
            "readOnly": true
          },
          "reviews_rating_sum": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "reviews_count": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "is_featured": {
            "type": "boolean"
          },
          "on_offer": {
            "type": "boolean",
            "default": false,
            "readOnly": true
          },
          "on_promotion": {
            "type": "boolean",
            "readOnly": true
          },
          "on_subscription": {
            "type": "boolean",
            "readOnly": true
          },
          "has_variant": {
            "type": "boolean",
            "readOnly": true
          },
          "variant_count": {
            "type": "integer",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "title": "ProductCommonDetail",
        "x-tags": [
          "Catalog"
        ]
      },
      "ProductDataSync": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "listing_price": {
            "type": "number"
          },
          "selling_price": {
            "type": "number"
          },
          "image_url": {
            "type": "string"
          },
          "stock_available": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "last_synced_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "ProductDataSync",
        "x-tags": [
          "Catalog"
        ]
      },
      "ProductDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Product"
          },
          {
            "type": "object",
            "properties": {
              "description": {
                "type": "string"
              },
              "videos": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductVideo"
                }
              },
              "pricing": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductPricing"
                }
              },
              "shipping": {
                "$ref": "#/components/schemas/ProductShipping"
              },
              "packaging": {
                "$ref": "#/components/schemas/ProductPackaging"
              },
              "promotions": {
                "$ref": "#/components/schemas/ProductPromotion"
              },
              "subscriptions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductSubscription"
                }
              },
              "sales_channels": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "sales_channel_sku": {
                      "type": "string"
                    }
                  }
                }
              },
              "related_products": {
                "type": "object",
                "properties": {
                  "upsell": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProductBasicDetail"
                    }
                  },
                  "cross_sell": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProductBasicDetail"
                    }
                  }
                }
              },
              "variants": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Variant"
                }
              },
              "bundle_items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductBundleItem"
                }
              },
              "seo": {
                "$ref": "#/components/schemas/Seo"
              },
              "integrations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductIntegrationSync"
                }
              }
            }
          }
        ],
        "title": "ProductDetail",
        "x-tags": [
          "Catalog"
        ]
      },
      "ProductImage": {
        "type": "object",
        "properties": {
          "title": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 128
          },
          "alternate_text": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 128
          },
          "sort_order": {
            "type": "integer",
            "format": "int32"
          },
          "url_tiny": {
            "type": "string",
            "maxLength": 512
          },
          "url_thumbnail": {
            "type": "string",
            "maxLength": 512
          },
          "url_standard": {
            "type": "string",
            "maxLength": 512
          },
          "url_zoom": {
            "type": "string",
            "maxLength": 512
          },
          "file_id": {
            "type": "string"
          },
          "file_type": {
            "enum": [
              "image"
            ]
          }
        },
        "title": "ProductImage",
        "x-tags": [
          "Catalog"
        ]
      },
      "ProductIntegrationSync": {
        "type": "object",
        "properties": {
          "integration_name": {
            "type": "string"
          },
          "sync_status": {
            "enum": [
              "pending",
              "success",
              "failed"
            ]
          },
          "last_updated": {
            "type": "string",
            "format": "date-time"
          },
          "last_synced": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "ProductIntegrationSync"
      },
      "ProductInventory": {
        "type": "object",
        "properties": {
          "variant_id": {
            "description": "required only if product has_variant = true. otherwise it can be excluded or pass null.\n",
            "type": "string"
          },
          "update_other_variants": {
            "description": "Can be used for the product having variants. if true, same inventry details will be updated to other variants which are not mentioned in request body.",
            "type": "boolean",
            "writeOnly": true
          },
          "track_quantity": {
            "type": "boolean"
          },
          "track_lot_batch": {
            "type": "boolean"
          },
          "allow_backorder": {
            "type": "boolean"
          },
          "stock": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "warehouse_id",
                "stock_quantity"
              ],
              "properties": {
                "sku": {
                  "type": "string",
                  "readOnly": true
                },
                "warehouse_id": {
                  "type": "string"
                },
                "warehouse_name": {
                  "type": "string",
                  "readOnly": true
                },
                "received_quantity": {
                  "type": "integer",
                  "readOnly": true
                },
                "reserved_quantity": {
                  "type": "integer",
                  "readOnly": true
                },
                "sold_quantity": {
                  "type": "integer",
                  "readOnly": true
                },
                "adjusted_quantity": {
                  "type": "integer",
                  "readOnly": true
                },
                "stock_quantity": {
                  "type": "integer"
                },
                "lot_batch": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "mfg_date": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date"
                },
                "exp_date": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date"
                },
                "manufacturer": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                }
              }
            }
          }
        },
        "title": "ProductInventory",
        "x-tags": [
          "Catalog"
        ]
      },
      "ProductInventoryActivity": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "string",
            "readOnly": true
          },
          "variant_id": {
            "description": "optional. can be null for non variant product.",
            "type": "string"
          },
          "warehouse_id": {
            "type": "string",
            "maxLength": 128
          },
          "sku": {
            "type": "string",
            "readOnly": true
          },
          "activity_type": {
            "enum": [
              "add",
              "reserve",
              "reduce"
            ]
          },
          "quantity": {
            "type": "integer"
          },
          "reason": {
            "type": "string",
            "maxLength": 512
          },
          "lot_batch": {
            "type": [
              "string",
              "null"
            ]
          },
          "mfg_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date"
          },
          "exp_date": {
            "type": [
              "string",
              "null"
            ],
            "format": "date"
          },
          "manufacturer": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "warehouse_id",
          "activity_type",
          "quantity",
          "reason"
        ],
        "x-tags": [
          "Catalog"
        ]
      },
      "ProductPackaging": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "pack_width": {
            "type": "number",
            "format": "float"
          },
          "pack_height": {
            "type": "number",
            "format": "float"
          },
          "pack_length": {
            "type": "number",
            "format": "float"
          },
          "pack_dry_weight": {
            "type": "number",
            "format": "float"
          },
          "units_per_pack": {
            "type": "integer",
            "format": "int32"
          },
          "vertical_rotation": {
            "description": "Indicates whether items can be rotated during packing or if they must be kept in a strictly vertical orientation.",
            "type": "boolean"
          },
          "shipper_width": {
            "type": "number",
            "format": "float"
          },
          "shipper_height": {
            "type": "number",
            "format": "float"
          },
          "shipper_length": {
            "type": "number",
            "format": "float"
          },
          "shipper_dry_weight": {
            "type": "number",
            "format": "float"
          },
          "units_per_shipper": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "pack_width",
          "pack_height",
          "pack_length",
          "pack_dry_weight",
          "units_per_pack",
          "vertical_rotation"
        ],
        "title": "ProductPackaging",
        "x-tags": [
          "Catalog"
        ]
      },
      "ProductPricing": {
        "type": "object",
        "properties": {
          "customer_group_id": {
            "description": "customer group id. for different pricing model in case of multiple customer groups.",
            "type": [
              "string",
              "null"
            ]
          },
          "cost_price": {
            "type": [
              "number",
              "null"
            ],
            "format": "double"
          },
          "listing_price": {
            "type": "number",
            "format": "double"
          },
          "selling_price": {
            "type": "number",
            "format": "double"
          },
          "min_order_quantity": {
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          "max_order_quantity": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int32"
          },
          "incremental_quantity": {
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          "tax_type": {
            "enum": [
              "GST"
            ],
            "readOnly": true
          },
          "tax_rate": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "customer_group_id",
          "cost_price",
          "listing_price",
          "selling_price",
          "tax_rate"
        ],
        "title": "ProductPricing",
        "x-tags": [
          "Catalog"
        ]
      },
      "ProductPromotion": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/DiscountBasedPromotion"
          },
          {
            "$ref": "#/components/schemas/FixedPricePromotion"
          },
          {
            "$ref": "#/components/schemas/VolumeBasedPromotion"
          },
          {
            "$ref": "#/components/schemas/FreeGoodsPromotion"
          }
        ],
        "title": "ProductPromotion",
        "x-tags": [
          "Catalog"
        ]
      },
      "ProductReview": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "product_id": {
            "type": "string",
            "readOnly": true
          },
          "rating": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "review_text": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 128,
            "readOnly": true
          },
          "email": {
            "type": "string",
            "maxLength": 128,
            "readOnly": true
          },
          "status": {
            "enum": [
              "pending",
              "approved",
              "rejected",
              "archived"
            ]
          },
          "is_featured": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductImage"
            }
          },
          "videos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVideo",
              "type": "object"
            }
          },
          "review_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "review_reply": {
            "type": "string"
          }
        },
        "required": [
          "product_id",
          "rating",
          "review_text",
          "name",
          "email",
          "status",
          "is_featured",
          "review_date"
        ],
        "x-tags": [
          "Catalog"
        ]
      },
      "ProductShipping": {
        "type": "object",
        "properties": {
          "handling_charge": {
            "description": "A handling charge is an additional fee applied to cover the costs associated with preparing, packaging, and processing an order for shipment or delivery.",
            "type": "number",
            "minimum": 0
          }
        },
        "required": [
          "handling_charge"
        ],
        "title": "ProductShipping",
        "x-tags": [
          "Catalog"
        ]
      },
      "ProductSubscription": {
        "type": "object",
        "properties": {
          "subscription_plan_id": {
            "type": "string",
            "readOnly": true
          },
          "subscription_plan": {
            "type": "string"
          },
          "billing_interval": {
            "type": "integer",
            "format": "int32"
          },
          "billing_frequency": {
            "enum": [
              "monthly"
            ]
          },
          "billing_limit": {
            "type": [
              "integer",
              "null"
            ]
          },
          "billing_trial_days": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "order_interval": {
            "type": [
              "integer",
              "null"
            ]
          },
          "order_frequency": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "monthly"
            ]
          },
          "order_limit": {
            "type": [
              "integer",
              "null"
            ]
          },
          "fulfill_separately": {
            "type": "boolean"
          },
          "subscription_price": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "suscription_price",
                "minimum_quantity",
                "customer_group_id"
              ],
              "properties": {
                "suscription_price": {
                  "type": "number",
                  "format": "double"
                },
                "minimum_quantity": {
                  "type": "integer",
                  "default": 1
                },
                "customer_group_id": {
                  "description": "customer group id.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          }
        },
        "required": [
          "subscription_plan",
          "billing_interval",
          "billing_frequency",
          "billing_limit",
          "billing_trial_days",
          "fulfill_separately",
          "subscription_price"
        ],
        "title": "ProductSubscription",
        "x-tags": [
          "Catalog"
        ]
      },
      "ProductVideo": {
        "type": "object",
        "properties": {
          "title": {
            "type": [
              "string",
              "null"
            ]
          },
          "alternate_text": {
            "type": [
              "string",
              "null"
            ]
          },
          "sort_order": {
            "type": "integer"
          },
          "video_preview_url": {
            "type": "string"
          },
          "video_stream_hls_url": {
            "type": "string"
          },
          "video_stream_dash_url": {
            "type": "string"
          },
          "image_thumbnail_url": {
            "type": "string"
          },
          "video_duration": {
            "type": "integer"
          },
          "file_id": {
            "type": "string"
          }
        },
        "title": "ProductVideo",
        "x-tags": [
          "Catalog"
        ]
      },
      "Promotion": {
        "allOf": [
          {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DiscountCouponPromotion"
              },
              {
                "$ref": "#/components/schemas/FreeGoodCouponPromotion"
              },
              {
                "$ref": "#/components/schemas/BuyXGetYCouponPromotion"
              },
              {
                "$ref": "#/components/schemas/VolumeBasedCouponPromotion"
              },
              {
                "$ref": "#/components/schemas/FreeShipingCouponPromotion"
              }
            ]
          },
          {
            "type": "object",
            "required": [
              "promotion_type"
            ],
            "properties": {
              "promotion_type": {
                "enum": [
                  "discount",
                  "free-goods",
                  "free-shipping",
                  "buy-x-get-y",
                  "volume-based"
                ]
              }
            }
          }
        ],
        "title": "Promotion",
        "x-tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "PromotionDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Promotion"
          },
          {
            "type": "object",
            "properties": {
              "terms_and_conditions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "title": "PromotionDetail",
        "x-tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "RefundForPaymentSettlement": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RefundForPaymentSettlementCommon"
          },
          {
            "$ref": "#/components/schemas/PaymentMethodDetail"
          }
        ],
        "title": "RefundForPaymentSettlement",
        "x-tags": [
          "Payments"
        ]
      },
      "RefundForPaymentSettlementCommon": {
        "type": "object",
        "properties": {
          "payment_method": {
            "type": "string"
          },
          "payment_reference_number": {
            "type": "string"
          },
          "request_number": {
            "type": "string"
          },
          "transaction_date": {
            "type": "string",
            "format": "date-time"
          },
          "transaction_amount": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "enum": [
              "settled"
            ]
          }
        },
        "title": "RefundForPaymentSettlementCommon",
        "x-tags": [
          "Payments"
        ]
      },
      "Rounding": {
        "description": "Define how to round the shipping cost",
        "type": "object",
        "properties": {
          "unit": {
            "type": "number",
            "exclusiveMinimum": 0
          },
          "method": {
            "type": "string",
            "enum": [
              "nearest",
              "ceil",
              "floor"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "unit",
          "method"
        ],
        "title": "Rounding"
      },
      "SalesChannel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "sales_channel_sku": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "sales_channel_sku"
        ],
        "title": "SalesChannel"
      },
      "Segment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SegmentInfo"
          }
        ],
        "title": "Segment",
        "x-tags": [
          "Segments"
        ]
      },
      "SegmentAdAudience": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "audience_match_field": {
            "type": [
              "string",
              "null"
            ]
          },
          "service_provider_id": {
            "type": "string"
          },
          "service_provider_name": {
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "last_synced_status": {
            "description": "default status = pending",
            "enum": [
              "success",
              "failed",
              "pending"
            ],
            "readOnly": true
          },
          "last_synced_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "total_people_synced": {
            "type": "integer",
            "readOnly": true
          }
        },
        "required": [
          "name",
          "service_provider_id"
        ],
        "title": "SegmentAdAudience",
        "x-tags": [
          "Segments"
        ]
      },
      "SegmentAdAudienceSyncHistory": {
        "type": "object",
        "properties": {
          "synced_status": {
            "description": "default status = pending",
            "enum": [
              "success",
              "failed",
              "pending"
            ]
          },
          "synced_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time"
          },
          "request_payload": {
            "type": "string"
          },
          "response_data": {
            "type": "string"
          }
        },
        "title": "SegmentAdAudienceSyncHistory",
        "x-tags": [
          "Segments"
        ]
      },
      "SegmentDetail": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ManualSegment"
          },
          {
            "$ref": "#/components/schemas/DynamicSegment"
          }
        ],
        "title": "SegmentDetail",
        "x-tags": [
          "Segments"
        ]
      },
      "SegmentInfo": {
        "type": "object",
        "properties": {
          "id": {
            "description": "segment id",
            "type": "string",
            "readOnly": true
          },
          "name": {
            "description": "segment name",
            "type": "string"
          },
          "segment_type": {
            "enum": [
              "dynamic",
              "manual"
            ]
          },
          "status": {
            "description": "default status is draft",
            "enum": [
              "draft",
              "active",
              "inactive",
              "archived"
            ]
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "meta": {
            "description": "meta data in key-value pair. example - [{\"key\":\"value\"}]",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "description": {
            "type": "string"
          },
          "people_count": {
            "type": "integer",
            "default": 0,
            "readOnly": true
          },
          "usage_count": {
            "type": "integer",
            "default": 0,
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "archived_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "segment_type"
        ],
        "title": "SegmentInfo",
        "x-tags": [
          "Segments"
        ]
      },
      "SegmentMember": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "readOnly": true
          },
          "phone": {
            "type": "string",
            "readOnly": true
          },
          "first_name": {
            "type": "string",
            "readOnly": true
          },
          "last_name": {
            "type": "string",
            "readOnly": true
          },
          "first_seen": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "last_seen": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "title": "SegmentMember",
        "x-tags": [
          "Segments"
        ]
      },
      "SegmentUsage": {
        "type": "object",
        "properties": {
          "campaigns": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "modified_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        },
        "title": "SegmentUsage",
        "x-tags": [
          "Segments"
        ]
      },
      "Seo": {
        "type": "object",
        "properties": {
          "title": {
            "type": [
              "string",
              "null"
            ]
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "keywords": {
            "type": [
              "array",
              "null"
            ]
          },
          "slug": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "description",
          "keywords",
          "slug"
        ],
        "title": "Seo"
      },
      "ServiceProvider": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ShippingServiceProvider"
          },
          {
            "$ref": "#/components/schemas/OtherServiceProvider"
          }
        ],
        "title": "ServiceProvider",
        "x-tags": [
          "Store"
        ]
      },
      "Shipment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ShipmentInfo"
          },
          {
            "type": "object",
            "properties": {
              "shipment_items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShipmentItem"
                }
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "packing": {
                "$ref": "#/components/schemas/ShipmentPackaging"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "progression": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShipmentProgression"
                }
              }
            }
          }
        ],
        "title": "Shipment",
        "x-tags": [
          "Shipping"
        ]
      },
      "ShipmentBox": {
        "type": "object",
        "properties": {
          "box_name": {
            "type": "string"
          },
          "box_length": {
            "type": "number"
          },
          "box_width": {
            "type": "number"
          },
          "box_height": {
            "type": "number"
          },
          "box_weight": {
            "type": "number"
          },
          "items_count": {
            "type": [
              "integer",
              "null"
            ]
          },
          "box_count": {
            "type": [
              "integer",
              "null"
            ]
          }
        },
        "title": "ShipmentBox",
        "x-tags": [
          "Shipping"
        ]
      },
      "ShipmentBulkUpdate": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "shipment_number",
            "status"
          ],
          "properties": {
            "shipment_number": {
              "type": "string"
            },
            "status": {
              "enum": [
                "shipped",
                "in_transit",
                "out_for_delivery",
                "delivered",
                "return_to_origin",
                "lost"
              ]
            },
            "shipped_date": {
              "description": "required if shipped_date is not updated yet for this shipment.",
              "type": "string",
              "format": "date-time"
            },
            "out_for_delivery_date": {
              "description": "required if status is out_for_delivery.",
              "type": "string",
              "format": "date-time"
            },
            "delivered_date": {
              "description": "required if status is delivered.",
              "type": "string",
              "format": "date-time"
            },
            "returned_date": {
              "description": "required if status is return_to_origin.",
              "type": "string",
              "format": "date-time"
            },
            "awb_no": {
              "type": "string"
            },
            "courier_company_name": {
              "type": "string"
            },
            "shipping_label_url": {
              "type": "string"
            }
          }
        },
        "title": "ShipmentBulkUpdate",
        "x-tags": [
          "Shipping"
        ]
      },
      "ShipmentDetail": {
        "type": "object",
        "properties": {
          "order_number": {
            "type": "string"
          },
          "order_date": {
            "type": "string",
            "format": "date-time"
          },
          "order_status": {
            "type": "string"
          },
          "payment_status": {
            "enum": [
              "pending",
              "success",
              "failed"
            ]
          },
          "customer_name": {
            "type": "string"
          },
          "shipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Shipment"
            }
          },
          "allowed_actions": {
            "description": "dynamic values as per current status of the shipment.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "title": "ShipmentDetail",
        "x-tags": [
          "Shipping"
        ]
      },
      "ShipmentInfo": {
        "type": "object",
        "properties": {
          "order_number": {
            "type": "string"
          },
          "order_status": {
            "type": "string"
          },
          "shipment_number": {
            "type": "string"
          },
          "warehouse_id": {
            "type": "string"
          },
          "warehouse_name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "total_weight": {
            "type": "number"
          },
          "total_boxes": {
            "type": "integer"
          },
          "shipment_items_count": {
            "type": "integer"
          },
          "shipping_amount": {
            "type": "number",
            "format": "double"
          },
          "shipping_tax_amount": {
            "type": "number",
            "format": "double"
          },
          "shipping_amount_including_tax": {
            "type": "number",
            "format": "double"
          },
          "courier_company_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "courier_company_name": {
            "type": [
              "string",
              "null"
            ]
          },
          "courier_company_image_url": {
            "type": [
              "string",
              "null"
            ]
          },
          "awb_no": {
            "type": [
              "string",
              "null"
            ]
          },
          "shipping_label_url": {
            "type": [
              "string",
              "null"
            ]
          },
          "eta_delivery": {
            "type": [
              "string",
              "null"
            ]
          },
          "shipped_date": {
            "type": [
              "string",
              "null"
            ]
          },
          "delivered_date": {
            "type": [
              "string",
              "null"
            ]
          },
          "slo": {
            "type": "object",
            "properties": {
              "expected_date": {
                "type": "string",
                "format": "date"
              },
              "actual_date": {
                "type": "string",
                "format": "date"
              },
              "difference": {
                "type": "string"
              }
            }
          },
          "cancellation_reason": {
            "type": [
              "string",
              "null"
            ]
          },
          "customer_id": {
            "type": "string"
          },
          "customer_name": {
            "type": "string"
          },
          "shipping_address_line1": {
            "type": "string"
          },
          "shipping_address_line2": {
            "type": "string"
          },
          "shipping_landmark": {
            "type": "string"
          },
          "shipping_pincode": {
            "type": "string"
          },
          "shipping_city": {
            "type": "string"
          },
          "shipping_state": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "modified_at": {
            "type": "string"
          }
        },
        "title": "ShipmentInfo",
        "x-tags": [
          "Shipping"
        ]
      },
      "ShipmentItem": {
        "description": "Shipment item model",
        "type": "object",
        "properties": {
          "product_id": {
            "type": "string"
          },
          "product_name": {
            "type": "string",
            "readOnly": true
          },
          "variant_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "variant_name": {
            "type": [
              "string",
              "null"
            ],
            "readOnly": true
          },
          "product_image_url": {
            "type": [
              "string",
              "null"
            ],
            "readOnly": true
          },
          "sku": {
            "type": "string",
            "readOnly": true
          },
          "quantity": {
            "type": "integer"
          },
          "free_quantity": {
            "type": "integer"
          },
          "is_free_item": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "required": [
          "product_id",
          "variant_id",
          "quantity"
        ],
        "title": "ShipmentItem",
        "x-tags": [
          "Orders"
        ]
      },
      "ShipmentList": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "order_number": {
                "type": "string"
              }
            }
          },
          {
            "$ref": "#/components/schemas/ShipmentInfo"
          }
        ],
        "title": "ShipmentList",
        "x-tags": [
          "Shipping"
        ]
      },
      "ShipmentPackaging": {
        "type": "object",
        "properties": {
          "package_option": {
            "enum": [
              "Automatic",
              "Custom"
            ]
          },
          "boxes_count": {
            "type": "integer"
          },
          "boxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShipmentBox"
            }
          }
        },
        "title": "ShipmentPackaging",
        "x-tags": [
          "Shipping"
        ]
      },
      "ShipmentProgression": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "readOnly": true
          },
          "is_current": {
            "type": "boolean",
            "readOnly": true
          },
          "is_completed": {
            "type": "boolean",
            "readOnly": true
          },
          "completion_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "title": "ShipmentProgression",
        "x-tags": [
          "Shipping"
        ]
      },
      "ShipperBox": {
        "type": "object",
        "properties": {
          "id": {
            "description": "product/variant id",
            "type": "string"
          },
          "name": {
            "description": "product - variant name",
            "type": "string"
          },
          "length": {
            "description": "in cm",
            "type": "integer"
          },
          "width": {
            "description": "in cm",
            "type": "integer"
          },
          "height": {
            "description": "in cm",
            "type": "integer"
          },
          "dry_weight": {
            "description": "in kilo gram",
            "type": "number"
          },
          "units_per_shipper": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "name",
          "length",
          "width",
          "height",
          "dry_weight",
          "units_per_shipper"
        ],
        "title": "ShipperBox",
        "x-tags": [
          "Catalog"
        ]
      },
      "ShippingConfig": {
        "type": "object",
        "properties": {
          "packaging_optimisation_logic": {
            "description": "- cost - the lowest cost of shipment\n- bins_utilization - max. utilization inside packing spaces\n- bins_number - the smallest possible number of packing spaces",
            "enum": [
              "cost",
              "bins_utilization",
              "bins_number"
            ]
          },
          "location_priority": {
            "enum": [
              "manual",
              "distance",
              "inventory"
            ]
          },
          "warehouse_id": {
            "description": "optional. required only if location_priority = manual. Value should be array of warehouses ids.",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "approval_option": {
            "default": "auto",
            "enum": [
              "auto",
              "manual"
            ]
          },
          "shipping_option": {
            "default": "auto",
            "enum": [
              "auto",
              "manual"
            ]
          },
          "default_weight": {
            "description": "Specifies the default weight (in kilograms) used to calculate shipping costs when product packing details are missing. This value ensures that shipping estimates can still be generated in the absence of product packing information.",
            "type": "number"
          }
        },
        "title": "ShippingConfig",
        "x-tags": [
          "Store"
        ]
      },
      "ShippingCostAction": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/FreeAction"
          },
          {
            "$ref": "#/components/schemas/FixedChargeAction"
          },
          {
            "$ref": "#/components/schemas/DiscountAction"
          },
          {
            "$ref": "#/components/schemas/DynamicAction"
          }
        ],
        "title": "ShippingCostAction"
      },
      "ShippingCostCondition": {
        "type": "object",
        "oneOf": [
          {
            "additionalProperties": false,
            "title": "Order Total",
            "required": [
              "order_total"
            ],
            "properties": {
              "order_total": {
                "$ref": "#/components/schemas/Comparison"
              }
            }
          },
          {
            "additionalProperties": false,
            "title": "Shipping Mode",
            "required": [
              "shipping_mode"
            ],
            "properties": {
              "shipping_mode": {
                "description": "e.g. [\"air\",\"surface\"]",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          {
            "additionalProperties": false,
            "title": "Shipping Providers",
            "required": [
              "providers"
            ],
            "properties": {
              "providers": {
                "description": "e.g. [\"dhl\",\"fedex\"]",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "title": "ShippingCostCondition"
      },
      "ShippingCostPolicy": {
        "type": "object",
        "properties": {
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShippingRule"
            }
          },
          "default_action": {
            "$ref": "#/components/schemas/ShippingCostAction"
          }
        },
        "additionalProperties": false,
        "required": [
          "rules",
          "default_action"
        ],
        "title": "ShippingCostPolicy"
      },
      "ShippingOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "is_connected": {
            "type": "boolean"
          },
          "is_forward_shipping": {
            "type": "boolean"
          },
          "is_return_shipping": {
            "type": "boolean"
          },
          "logo": {
            "type": [
              "string",
              "null"
            ]
          },
          "type": {
            "enum": [
              "auto",
              "manual"
            ]
          },
          "status": {
            "enum": [
              "active",
              "inactive"
            ]
          }
        },
        "title": "ShippingOption"
      },
      "ShippingRateBasedOnItemWeight": {
        "description": "",
        "anyOf": [
          {
            "$ref": "#/components/schemas/ShippingRateBasedOnWeightSlabs"
          },
          {
            "$ref": "#/components/schemas/ShippingRatePerKgFixedPrice"
          }
        ],
        "title": "ShippingRateBasedOnItemWeight",
        "x-tags": [
          "Shipping"
        ]
      },
      "ShippingRateBasedOnOrderValue": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "rate_based_on": {
            "enum": [
              "order-value"
            ]
          },
          "slabs": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "order_value",
                "shipping_rate",
                "condition"
              ],
              "properties": {
                "order_value": {
                  "type": "number"
                },
                "shipping_rate": {
                  "type": "number"
                },
                "condition": {
                  "enum": [
                    "less-or-equal",
                    "greater"
                  ]
                }
              }
            }
          }
        },
        "required": [
          "rate_based_on",
          "slabs"
        ],
        "title": "ShippingRateBasedOnOrderValue",
        "x-tags": [
          "Shipping"
        ]
      },
      "ShippingRateBasedOnWeightSlabs": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "rate_based_on": {
            "enum": [
              "item-weight"
            ]
          },
          "rate_type": {
            "enum": [
              "weight-slabs"
            ]
          },
          "slabs": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "weight",
                "shipping_rate",
                "condition"
              ],
              "properties": {
                "weight": {
                  "type": "number"
                },
                "shipping_rate": {
                  "type": "number"
                },
                "condition": {
                  "enum": [
                    "less-or-equal",
                    "greater"
                  ]
                }
              }
            }
          }
        },
        "required": [
          "rate_based_on",
          "rate_type",
          "slabs"
        ],
        "title": "ShippingRateBasedOnWeightSlabs",
        "x-tags": [
          "Shipping"
        ]
      },
      "ShippingRatePerKgFixedPrice": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "rate_based_on": {
            "enum": [
              "item-weight"
            ]
          },
          "rate_type": {
            "enum": [
              "fixed-price-per-kg"
            ]
          },
          "shipping_rate_per_kg": {
            "type": "number"
          }
        },
        "required": [
          "rate_based_on",
          "rate_type",
          "shipping_rate_per_kg"
        ],
        "title": "ShippingRatePerKgFixedPrice",
        "x-tags": [
          "Shipping"
        ]
      },
      "ShippingRule": {
        "type": "object",
        "properties": {
          "condition": {
            "$ref": "#/components/schemas/ShippingCostCondition"
          },
          "action": {
            "$ref": "#/components/schemas/ShippingCostAction"
          }
        },
        "additionalProperties": false,
        "required": [
          "condition",
          "action"
        ],
        "title": "ShippingRule"
      },
      "ShippingServiceProvider": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "service_type": {
            "enum": [
              "shipping",
              "payment",
              "chat",
              "cms"
            ],
            "readOnly": true
          },
          "description": {
            "type": "string",
            "readOnly": true
          },
          "short_description": {
            "type": "string",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "const": "auto",
            "readOnly": true
          },
          "fulfillment_type": {
            "type": "string",
            "const": "delivery",
            "readOnly": true
          },
          "logo": {
            "type": "string",
            "readOnly": true
          },
          "website_url": {
            "type": "string",
            "readOnly": true
          },
          "api_doc_url": {
            "type": "string",
            "readOnly": true
          },
          "required_credentials_params": {
            "description": "json object in key \u0026 value pair.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "input_field_name": {
                  "type": "string"
                },
                "input_field_label": {
                  "type": "string"
                },
                "input_field_type": {
                  "enum": [
                    "text",
                    "number",
                    "boolean",
                    "email",
                    "password"
                  ]
                }
              }
            },
            "readOnly": true
          },
          "is_connected": {
            "type": "boolean",
            "default": false,
            "readOnly": true
          },
          "is_forward_shipping": {
            "type": "boolean",
            "default": false,
            "readOnly": true
          },
          "is_return_shipping": {
            "type": "boolean",
            "default": false,
            "readOnly": true
          },
          "is_connection_expired": {
            "type": "boolean",
            "default": true,
            "readOnly": true
          },
          "supports_test_connection": {
            "type": "boolean",
            "default": true,
            "readOnly": true
          },
          "api_credentials": {
            "description": "json object in key \u0026 value pair. Keys must match with params specified in required_credentials_params object (input_field_name).",
            "type": "object"
          },
          "status": {
            "default": "active",
            "enum": [
              "active",
              "inactive",
              "error"
            ]
          },
          "features": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "is_supported": {
                  "type": "boolean"
                },
                "features": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "is_supported": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            "readOnly": true
          },
          "warehouse_id": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "writeOnly": true
          },
          "shipping_zone_id": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "writeOnly": true
          },
          "warehouses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            },
            "readOnly": true
          },
          "shipping_zone": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            },
            "readOnly": true
          }
        },
        "title": "ShippingServiceProvider",
        "x-tags": [
          "Store"
        ]
      },
      "ShippingStats": {
        "type": "object",
        "properties": {
          "to_be_shipped": {
            "type": "integer"
          },
          "in_transit": {
            "type": "integer"
          },
          "on_hold": {
            "type": "integer"
          },
          "delivered": {
            "type": "integer"
          },
          "late_delivered": {
            "type": "integer"
          },
          "returned_to_origin": {
            "type": "integer"
          }
        },
        "title": "ShippingStats"
      },
      "ShippingZoneBasedShippingOption": {
        "type": "object",
        "properties": {
          "based_on": {
            "type": "string",
            "const": "shipping-zone"
          },
          "shipping_zone_id": {
            "type": "string"
          },
          "service_provider_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "based_on",
          "shipping_zone_id",
          "service_provider_id"
        ],
        "title": "ShippingZoneBasedShippingOption",
        "x-tags": [
          "Store"
        ]
      },
      "ShippingZoneDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "countries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Country"
            }
          },
          "active": {
            "type": "boolean",
            "default": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "available_shipping_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShippingOption"
            },
            "readOnly": true
          }
        },
        "title": "ShippingZoneDetail",
        "x-tags": [
          "Store"
        ]
      },
      "StoreConfig": {
        "type": "object",
        "properties": {
          "is_kyc_enabled": {
            "type": "boolean",
            "default": false
          },
          "is_customer_group_enabled": {
            "type": "boolean",
            "default": false
          },
          "tax": {
            "$ref": "#/components/schemas/TaxConfig"
          },
          "shipping": {
            "$ref": "#/components/schemas/ShippingConfig"
          },
          "customer_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerGroup"
            },
            "readOnly": true
          },
          "kyc_documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KycDocumentConfig"
            },
            "readOnly": true
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Channel"
            },
            "readOnly": true
          },
          "brand": {
            "$ref": "#/components/schemas/Brand"
          },
          "subscription": {
            "$ref": "#/components/schemas/SubscriptionSetting"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "measurement": {
            "$ref": "#/components/schemas/MeasurementUnit"
          }
        },
        "title": "StoreConfig",
        "x-tags": [
          "Store"
        ]
      },
      "StoreShippingBox": {
        "description": "",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "length": {
            "type": "number"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          },
          "empty_box_weight": {
            "type": "number"
          },
          "max_weight_box_can_carry": {
            "type": "number"
          },
          "empty_box_price": {
            "type": "number"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "name",
          "length",
          "width",
          "height",
          "empty_box_weight",
          "max_weight_box_can_carry",
          "empty_box_price"
        ],
        "title": "ShippingBox"
      },
      "StoreShippingBoxDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "length": {
            "type": "number"
          },
          "width": {
            "type": "number"
          },
          "height": {
            "type": "number"
          },
          "empty_box_weight": {
            "type": "number"
          },
          "max_weight_box_can_carry": {
            "type": "number"
          },
          "empty_box_price": {
            "type": "number"
          },
          "warehouse_id": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "writeOnly": true
          },
          "warehouses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseDetail"
            },
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "name",
          "length",
          "width",
          "height",
          "empty_box_weight",
          "max_weight_box_can_carry",
          "empty_box_price",
          "warehouse_id"
        ],
        "title": "StoreShippingBoxDetail",
        "x-tags": [
          "Store"
        ]
      },
      "StoreTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "template_type": {
            "enum": [
              "terms-of-service",
              "refund-policy",
              "email",
              "invoice",
              "web-layer",
              "whatsapp",
              "chat",
              "push-notification",
              "webhook"
            ]
          },
          "activity": {
            "description": "example - signup, order-confirmation, order-cancelled, order-refunded, cart-abandoned, etc.",
            "type": [
              "string",
              "null"
            ]
          },
          "content_title": {
            "description": "to be used in email subject or notification heading if provided.",
            "type": [
              "string",
              "null"
            ]
          },
          "content_type": {
            "enum": [
              "html",
              "markdown",
              "plaintext"
            ]
          },
          "content": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "template_type",
          "content_type",
          "content"
        ],
        "title": "StoreTemplate",
        "x-tags": [
          "Store"
        ]
      },
      "StoreTemplateDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "template_type": {
            "enum": [
              "terms-of-service",
              "refund-policy",
              "email",
              "invoice",
              "web-layer",
              "whatsapp",
              "chat",
              "push-notification",
              "webhook"
            ]
          },
          "activity": {
            "description": "example - signup, order-confirmation, order-cancelled, order-refunded, cart-abandoned, etc.",
            "type": [
              "string",
              "null"
            ]
          },
          "content_title": {
            "description": "to be used in email subject, notification heading if provided.",
            "type": [
              "string",
              "null"
            ]
          },
          "content_type": {
            "enum": [
              "html",
              "markdown",
              "plaintext"
            ]
          },
          "content": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "name",
          "template_type",
          "content_type",
          "content"
        ],
        "title": "StoreTemplateDetail",
        "x-tags": [
          "Store"
        ]
      },
      "StringAttribute": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "attribute_type": {
            "enum": [
              "String"
            ]
          },
          "is_readonly": {
            "type": "boolean",
            "readOnly": true
          },
          "last_updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "title": "StringAttribute",
        "x-tags": [
          "Customers"
        ]
      },
      "Subscription": {
        "description": "Subscription model",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "subscription_number": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sub_total": {
            "type": "number",
            "format": "double"
          },
          "shipping_amount": {
            "type": "number",
            "format": "double"
          },
          "total_tax": {
            "type": "number",
            "format": "double"
          },
          "net_amount": {
            "type": "number",
            "format": "double"
          },
          "billing_frequency": {
            "enum": [
              "Monthly",
              "Quarterly",
              "Half-yearly",
              "Yearly"
            ]
          },
          "billing_interval": {
            "type": "integer",
            "default": 1
          },
          "billing_limit": {
            "type": "integer",
            "default": 0
          },
          "fulfill_separately": {
            "type": "boolean"
          },
          "fulfillment_frequency": {
            "enum": [
              "Monthly",
              "Quarterly",
              "Half-yearly",
              "Yearly"
            ]
          },
          "fulfillment_interval": {
            "type": "integer",
            "default": 1
          },
          "fulfillment_limit": {
            "type": "integer",
            "default": 0
          },
          "billing_trial_days": {
            "type": "integer",
            "default": 0
          },
          "status": {
            "enum": [
              "draft",
              "active",
              "inactive"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "Subscription",
        "x-tags": [
          "Orders"
        ]
      },
      "SubscriptionCustomer": {
        "description": "Subscription Customer model",
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string"
          },
          "customer_name": {
            "type": "string"
          },
          "customer_profile_image_url": {
            "type": "string"
          },
          "subscription_start_date": {
            "type": "string",
            "format": "date-time"
          },
          "subscription_end_date": {
            "type": "string",
            "format": "date-time"
          },
          "subscription_status": {
            "enum": [
              "active",
              "paused",
              "stopped",
              "cancelled"
            ]
          },
          "subscription_next_billing_date": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "SubscriptionCustomer",
        "x-tags": [
          "Orders"
        ]
      },
      "SubscriptionSetting": {
        "type": "object",
        "properties": {
          "charge_automatically": {
            "type": "boolean"
          },
          "retry_and_dunning": {
            "type": "boolean"
          },
          "retry_and_dunning_rules": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "object",
              "required": [
                "days",
                "retry_payment",
                "send_notification"
              ],
              "properties": {
                "days": {
                  "description": "days after first payment failure",
                  "type": "integer"
                },
                "retry_payment": {
                  "type": "boolean"
                },
                "send_notification": {
                  "type": "boolean"
                }
              }
            }
          },
          "retry_final_step_action": {
            "description": "send null value for no action.",
            "enum": [
              "mark-as-unpaid",
              "cancel-subscription"
            ]
          },
          "pause_during_trial": {
            "type": "boolean"
          },
          "pause_when_past_due": {
            "type": "boolean"
          },
          "pause_indefinitely": {
            "type": "boolean"
          },
          "skip_next_interval": {
            "type": "boolean"
          },
          "skip_next_interval_threshold": {
            "description": "days before next shipment. required if skip_next_interval = true",
            "type": "integer",
            "default": 0
          }
        },
        "required": [
          "charge_automatically",
          "retry_and_dunning",
          "pause_during_trial",
          "pause_when_past_due",
          "pause_indefinitely",
          "skip_next_interval"
        ],
        "title": "SubscriptionSetting",
        "x-tags": [
          "Store"
        ]
      },
      "TaxConfig": {
        "type": "object",
        "properties": {
          "tax_type": {
            "enum": [
              "GST"
            ]
          },
          "taxable_location": {
            "enum": [
              "shipping-address",
              "billing-address"
            ]
          },
          "is_product_price_include_tax": {
            "description": "This field indicates whether the product prices, handling charges already include applicable taxes.\n\n- If set to true, the product prices are inclusive of tax, meaning no additional tax will be added during checkout.\n\n- If set to false, taxes are excluded from the listed prices and will be calculated and added separately at checkout.",
            "type": "boolean"
          },
          "is_tax_apply_after_discount": {
            "type": "boolean"
          },
          "is_discount_apply_after_tax": {
            "type": "boolean"
          },
          "shipping_tax_rate": {
            "type": "number"
          },
          "handling_charge_tax_rate": {
            "description": "This represents the tax rate percentage applied specifically to handling charge in shipping. A handling charge is an additional fee applied to cover the costs associated with preparing, packaging, and processing an order for shipment or delivery.",
            "type": "number"
          }
        },
        "title": "TaxConfig",
        "x-tags": [
          "Store"
        ]
      },
      "TopSellingProduct": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "string"
          },
          "product_name": {
            "type": "string"
          },
          "product_image_url": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "product_variant_id": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "order_count": {
            "type": "integer"
          },
          "customer_count": {
            "type": "integer"
          },
          "average_selling_price": {
            "type": "number"
          }
        },
        "title": "TopSellingProduct"
      },
      "UpdateBundleProduct": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductCommonDetail"
          },
          {
            "type": "object",
            "properties": {
              "description": {
                "description": "Array of category ids.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "categories": {
                "description": "Array of category ids.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "images": {
                "description": "Array of image file ids.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "videos": {
                "description": "Array of video file ids.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "pricing": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductPricing"
                }
              },
              "promotions": {
                "$ref": "#/components/schemas/ProductPromotion"
              },
              "subscriptions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductSubscription"
                }
              },
              "sales_channels": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SalesChannel"
                }
              },
              "bundle_items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "product_id",
                    "variant_id",
                    "quantity"
                  ],
                  "properties": {
                    "product_id": {
                      "type": "string"
                    },
                    "variant_id": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "quantity": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "title": "UpdateBundleProduct",
        "x-tags": [
          "Catalog"
        ]
      },
      "UpdateCustomerAttribute": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "active": {
            "type": "boolean",
            "default": true
          },
          "is_visible": {
            "type": "boolean",
            "default": true
          },
          "is_filterable": {
            "type": "boolean",
            "default": true
          }
        },
        "title": "UpdateCustomerAttribute",
        "x-tags": [
          "Customers"
        ]
      },
      "UpdateDigitalProduct": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/UpdateProductWithoutVariant"
          },
          {
            "$ref": "#/components/schemas/UpdateProductWithVariant"
          }
        ],
        "title": "UpdateDigitalProduct",
        "x-tags": [
          "Catalog"
        ]
      },
      "UpdateKycDocument": {
        "type": "object",
        "properties": {
          "document_number": {
            "type": "string"
          },
          "document_type_id": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "file": {
            "description": "file attachment will be required or optional as per store setting.",
            "type": "string",
            "format": "binary"
          },
          "status": {
            "enum": [
              "submitted",
              "approved",
              "rejected"
            ]
          },
          "modified_reason": {
            "type": "string"
          }
        },
        "required": [
          "document_number",
          "document_type_id",
          "modified_reason"
        ],
        "title": "UpdateKycDocument",
        "x-tags": [
          "Customers"
        ]
      },
      "UpdateKycDocumentConfig": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "active": {
            "type": "boolean",
            "default": true
          },
          "is_mandatory": {
            "type": "boolean"
          },
          "is_attachment_required": {
            "type": "boolean"
          },
          "verification_type": {
            "enum": [
              "automatic",
              "manual"
            ]
          }
        },
        "required": [
          "title",
          "is_mandatory",
          "is_attachment_required",
          "verification_type"
        ],
        "title": "UpdateKycDocumentConfig",
        "x-tags": [
          "Store"
        ]
      },
      "UpdateOrder": {
        "type": "object",
        "properties": {
          "shipping_address": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "is_billing_same_as_shipping": {
            "type": "boolean"
          },
          "billing_address": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          },
          "coupon_code": {
            "type": "string"
          }
        },
        "required": [
          "shipping_address",
          "is_billing_same_as_shipping",
          "items"
        ],
        "title": "UpdateOrder",
        "x-tags": [
          "Orders"
        ]
      },
      "UpdatePhysicalProductWithVariant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateProductWithVariant"
          }
        ],
        "title": "UpdatePhysicalProductWithVariant",
        "x-tags": [
          "Catalog"
        ]
      },
      "UpdatePhysicalProductWithoutVariant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateProductWithoutVariant"
          },
          {
            "type": "object",
            "properties": {
              "sku": {
                "type": "string"
              },
              "shipping": {
                "$ref": "#/components/schemas/ProductShipping"
              },
              "packaging": {
                "$ref": "#/components/schemas/ProductPackaging"
              },
              "related_products": {
                "type": "object",
                "properties": {
                  "cross_sell": {
                    "description": "Array of IDs. The ID value should be the product ID if a non-variant product is selected. For variant products, the ID should be a combination of the product ID and variant ID, separated by a hyphen ('-').",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "upsell": {
                    "description": "Array of IDs. The ID value should be the product ID if a non-variant product is selected. For variant products, the ID should be a combination of the product ID and variant ID, separated by a hyphen ('-').",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "title": "UpdatePhysicalProductWithoutVariant",
        "x-tags": [
          "Catalog"
        ]
      },
      "UpdateProduct": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/UpdatePhysicalProductWithoutVariant"
          },
          {
            "$ref": "#/components/schemas/UpdatePhysicalProductWithVariant"
          },
          {
            "$ref": "#/components/schemas/UpdateDigitalProduct"
          },
          {
            "$ref": "#/components/schemas/UpdateBundleProduct"
          }
        ],
        "title": "UpdateProduct",
        "x-tags": [
          "Catalog"
        ]
      },
      "UpdateProductWithVariant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductCommonDetail"
          },
          {
            "type": "object",
            "properties": {
              "description": {
                "description": "Array of category ids.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "categories": {
                "description": "Array of category ids.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "title": "UpdateProductWithVariant",
        "x-tags": [
          "Catalog"
        ]
      },
      "UpdateProductWithoutVariant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductCommonDetail"
          },
          {
            "type": "object",
            "properties": {
              "description": {
                "description": "Array of category ids.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "categories": {
                "description": "Array of category ids.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "images": {
                "description": "Array of image file ids.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "videos": {
                "description": "Array of video file ids.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "pricing": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductPricing"
                }
              },
              "promotions": {
                "$ref": "#/components/schemas/ProductPromotion"
              },
              "subscriptions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductSubscription"
                }
              },
              "sales_channels": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SalesChannel"
                }
              },
              "variants": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "name",
                    "associated_options",
                    "is_default"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "associated_options": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AssociatedOption"
                      }
                    },
                    "is_default": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "title": "UpdateProductWithoutVariant",
        "x-tags": [
          "Catalog"
        ]
      },
      "UpdateShippingZone": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "countries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "country_alias": {
                  "type": "string"
                },
                "all_states": {
                  "type": "boolean",
                  "default": true
                },
                "state_alias": {
                  "description": "required if all_regions=false",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true
          }
        },
        "title": "UpdateShippingZone",
        "x-tags": [
          "Store"
        ]
      },
      "UpdateVariant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/VariantCommonDetail"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "associated_options": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssociatedOption"
                }
              },
              "description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "videos": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "seo": {
                "$ref": "#/components/schemas/Seo"
              },
              "shipping": {
                "$ref": "#/components/schemas/ProductShipping"
              },
              "packaging": {
                "$ref": "#/components/schemas/ProductPackaging"
              },
              "sales_channels": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SalesChannel"
                }
              },
              "related_products": {
                "type": "object",
                "properties": {
                  "cross_sell": {
                    "description": "Array of IDs. The ID value should be the product ID if a non-variant product is selected. For variant products, the ID should be a combination of the product ID and variant ID, separated by a hyphen ('-').",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "upsell": {
                    "description": "Array of IDs. The ID value should be the product ID if a non-variant product is selected. For variant products, the ID should be a combination of the product ID and variant ID, separated by a hyphen ('-').",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "promotions": {
                "$ref": "#/components/schemas/ProductPromotion"
              },
              "subscriptions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductSubscription"
                }
              }
            }
          }
        ],
        "examples": [],
        "title": "UpdateVariant",
        "x-tags": [
          "Catalog"
        ]
      },
      "UpiPayment": {
        "description": "UPI Payment",
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderPaymentInfo"
          },
          {
            "type": "object",
            "properties": {
              "upi_id": {
                "type": "string"
              }
            }
          }
        ],
        "title": "UpiPayment"
      },
      "Variant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/VariantCommonDetail"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "associated_options": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssociatedOption"
                }
              },
              "images": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductImage"
                }
              }
            }
          }
        ],
        "examples": [],
        "title": "Variant",
        "x-tags": [
          "Catalog"
        ]
      },
      "VariantBulkUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "description": "variant id",
            "type": "string"
          },
          "shipping": {
            "$ref": "#/components/schemas/ProductShipping"
          },
          "packaging": {
            "$ref": "#/components/schemas/ProductPackaging"
          }
        },
        "examples": [],
        "title": "VariantBulkUpdate",
        "x-tags": [
          "Catalog"
        ]
      },
      "VariantCommonDetail": {
        "type": "object",
        "properties": {
          "id": {
            "description": "variant id",
            "type": "string",
            "readOnly": true
          },
          "active": {
            "type": "boolean"
          },
          "stock_available": {
            "type": "boolean"
          },
          "is_default": {
            "type": "boolean"
          },
          "short_description": {
            "type": [
              "string",
              "null"
            ]
          },
          "metadata": {
            "type": [
              "object",
              "null"
            ],
            "additionalProperties": {
              "type": "string"
            }
          },
          "sku": {
            "description": "variant sku. can be null for digital product.",
            "type": [
              "string",
              "null"
            ]
          },
          "slug": {
            "description": "variant sku. can be null for digital product.",
            "type": "string"
          },
          "hsn_code": {
            "type": "string",
            "readOnly": true
          },
          "on_offer": {
            "type": "boolean",
            "readOnly": true
          },
          "on_promotion": {
            "type": "boolean",
            "readOnly": true
          },
          "on_subscription": {
            "type": "boolean",
            "readOnly": true
          },
          "product_type": {
            "enum": [
              "physical",
              "digital"
            ],
            "readOnly": true
          },
          "product_id": {
            "type": "string",
            "readOnly": true
          },
          "product_name": {
            "type": "string",
            "readOnly": true
          },
          "pricing": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPricing"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "variant_attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAttribute"
            }
          }
        },
        "examples": [],
        "title": "VariantCommonDetail",
        "x-tags": [
          "Catalog"
        ]
      },
      "VariantDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Variant"
          },
          {
            "type": "object",
            "properties": {
              "description": {
                "type": "string"
              },
              "videos": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductVideo"
                }
              },
              "seo": {
                "$ref": "#/components/schemas/Seo"
              },
              "shipping": {
                "$ref": "#/components/schemas/ProductShipping"
              },
              "packaging": {
                "$ref": "#/components/schemas/ProductPackaging"
              },
              "sales_channels": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SalesChannel"
                }
              },
              "related_products": {
                "type": "object",
                "properties": {
                  "upsell": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProductBasicDetail"
                    }
                  },
                  "cross_sell": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProductBasicDetail"
                    }
                  }
                }
              },
              "promotions": {
                "$ref": "#/components/schemas/ProductPromotion"
              },
              "subscriptions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductSubscription"
                }
              }
            }
          }
        ],
        "examples": [],
        "title": "VariantDetail",
        "x-tags": [
          "Catalog"
        ]
      },
      "VariantOption": {
        "type": "object",
        "properties": {
          "attribute_id": {
            "type": "string"
          },
          "attribute_value": {
            "description": "The attribute value can be represented as an array of strings for single-select attribute types. For color attribute types, the value will be represented as a color object, which contains color details with name and hexcode.",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/ColorObject"
                }
              ]
            }
          },
          "attribute_name": {
            "type": "string"
          },
          "attribute_type": {
            "enum": [
              "single-select",
              "color"
            ]
          },
          "key": {
            "description": "value in snake case.",
            "type": "string"
          }
        },
        "title": "VariantOption"
      },
      "Visitor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "os": {
            "type": "string"
          },
          "device": {
            "type": "string"
          },
          "browser": {
            "type": "string"
          },
          "last_seen": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "Visitor",
        "x-tags": [
          "Customers"
        ]
      },
      "VisitorDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Visitor"
          },
          {
            "type": "object",
            "properties": {
              "segments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "title": "VisitorDetail",
        "x-tags": [
          "Customers"
        ]
      },
      "VolumeBasedCouponPromotion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CouponPromotionCommonDetail"
          },
          {
            "type": "object",
            "required": [
              "details",
              "applies_to_product"
            ],
            "properties": {
              "details": {
                "$ref": "#/components/schemas/VolumeBasedRule"
              },
              "applies_to_product": {
                "enum": [
                  "product"
                ]
              }
            }
          }
        ],
        "title": "VolumeBasedCouponPromotion"
      },
      "VolumeBasedPromotion": {
        "description": "promotion_type = volume-based",
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "promotion_type": {
            "enum": [
              "volume-based"
            ]
          },
          "starts_at": {
            "type": "string"
          },
          "expires_at": {
            "description": "null means never expires.",
            "type": [
              "string",
              "null"
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "customer_group_id",
                "slabs"
              ],
              "properties": {
                "customer_group_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "slabs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "quantity",
                      "quantity_condition",
                      "discount_percent"
                    ],
                    "properties": {
                      "quantity": {
                        "type": "integer"
                      },
                      "quantity_condition": {
                        "description": "This key defines how the system will evaluate the quantity to determine if the promotion should be applied, based on the specified slab.",
                        "enum": [
                          "less",
                          "less-or-equal",
                          "greater",
                          "greater-or-equal"
                        ]
                      },
                      "discount_percent": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "promotion_type",
          "starts_at",
          "details"
        ],
        "title": "VolumeBasedPromotion"
      },
      "VolumeBasedRule": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "product_id",
                "variant_id",
                "slabs"
              ],
              "properties": {
                "product_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "variant_id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "slabs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "quantity",
                      "condition",
                      "discount_percent"
                    ],
                    "properties": {
                      "quantity": {
                        "type": "integer"
                      },
                      "condition": {
                        "enum": [
                          "less-or-equal",
                          "greater"
                        ]
                      },
                      "discount_percent": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          },
          "maximum_discount_amount": {
            "type": [
              "number",
              "null"
            ]
          }
        },
        "required": [
          "products",
          "maximum_discount_amount"
        ],
        "title": "VolumeBasedRule",
        "x-tags": [
          "Coupons \u0026 promotions"
        ]
      },
      "WalletPayment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderPaymentInfo"
          },
          {
            "type": "object",
            "properties": {
              "wallet_name": {
                "type": "string"
              }
            }
          }
        ],
        "title": "WalletPayment"
      },
      "Warehouse": {
        "description": "Validations:\n\n1) Either 'can_receive_stock' or 'accepts_returns' must be set to true.\n2) 'can_receive_stock' cannot be set to false while the warehouse has existing inventory.\n3) 'is_checkout_point' must be true when the warehouse type is 'retail-store'.\n4) If 'can_receive_stock' is false then 'can_ship_parcel' and 'can_collect' fields should be false.",
        "type": "object",
        "properties": {
          "id": {
            "description": "warehouse id",
            "type": "string",
            "readOnly": true
          },
          "name": {
            "description": "legal name",
            "type": "string"
          },
          "warehouse_type": {
            "enum": [
              "retail-store",
              "distribution-center"
            ]
          },
          "active": {
            "type": "boolean",
            "default": true
          },
          "gstin": {
            "type": [
              "string",
              "null"
            ]
          },
          "city": {
            "type": "string"
          },
          "address_line1": {
            "type": "string"
          },
          "address_line2": {
            "type": [
              "string",
              "null"
            ]
          },
          "landmark": {
            "type": [
              "string",
              "null"
            ]
          },
          "pincode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "country_code": {
            "type": "string",
            "default": "+91"
          },
          "contact_phone": {
            "description": "10 digit number without country code.",
            "type": "number"
          },
          "contact_email": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "image_url": {
            "type": [
              "string",
              "null"
            ]
          },
          "seller_warehouse_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "can_receive_stock": {
            "type": "boolean"
          },
          "can_ship_parcel": {
            "type": "boolean"
          },
          "can_collect": {
            "type": "boolean"
          },
          "is_checkout_point": {
            "description": "this field will be always true for warehouse_type = retail-store.",
            "type": "boolean"
          },
          "accepts_returns": {
            "type": "boolean"
          },
          "opening_hours": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "required": [
          "name",
          "warehouse_type",
          "city",
          "address_line1",
          "pincode",
          "state",
          "country",
          "contact_phone",
          "contact_email",
          "can_receive_stock",
          "can_ship_parcel",
          "can_collect",
          "is_checkout_point",
          "accepts_returns"
        ],
        "title": "Warehouse",
        "x-tags": [
          "Store"
        ]
      },
      "WarehouseBasedShippingOption": {
        "type": "object",
        "properties": {
          "based_on": {
            "type": "string",
            "const": "warehouse"
          },
          "warehouse_id": {
            "type": "string"
          },
          "service_provider_id": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "based_on",
          "warehouse_id",
          "service_provider_id"
        ],
        "title": "WarehouseBasedShippingOption",
        "x-tags": [
          "Store"
        ]
      },
      "WarehouseBasicDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "address_line1": {
            "type": "string"
          },
          "pincode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          }
        },
        "title": "WarehouseBasicDetail",
        "x-tags": [
          "Catalog"
        ]
      },
      "WarehouseDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Warehouse"
          },
          {
            "type": "object",
            "properties": {
              "shipping_boxes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StoreShippingBox"
                },
                "readOnly": true
              },
              "shipping_providers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShippingOption"
                },
                "readOnly": true
              },
              "manual_methods": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShippingOption"
                },
                "readOnly": true
              },
              "available_shipping_options": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShippingOption"
                },
                "readOnly": true
              }
            }
          }
        ],
        "title": "WarehouseDetail",
        "x-tags": [
          "Store"
        ]
      },
      "WarehouseWiseInventory": {
        "type": "object",
        "properties": {
          "lot_bacth": {
            "type": "string"
          },
          "mfg_date": {
            "type": "string",
            "format": "date"
          },
          "exp_date": {
            "type": "string",
            "format": "date"
          },
          "manufacturer": {
            "type": "string"
          },
          "warehouse_id": {
            "type": "string"
          },
          "warehouse": {
            "$ref": "#/components/schemas/WarehouseBasicDetail"
          },
          "received_quantity": {
            "type": "integer"
          },
          "reserved_quantity": {
            "type": "integer"
          },
          "sold_quantity": {
            "type": "integer"
          },
          "adjusted_quantity": {
            "type": "integer"
          },
          "stock_quantity": {
            "type": "integer"
          }
        },
        "title": "WarehouseWiseInventory",
        "x-tags": [
          "Catalog"
        ]
      },
      "Webhook": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "endpoint": {
            "type": "string",
            "format": "uri"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "order.created"
            }
          },
          "custom_headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "status": {
            "enum": [
              "active",
              "inactive",
              "error"
            ]
          },
          "webhook_secret_key": {
            "description": "This will be shown only once during create. For all GET requests, this will be redacted.",
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "id",
          "name",
          "endpoint",
          "events",
          "custom_headers",
          "status",
          "webhook_secret_key",
          "created_at",
          "modified_at"
        ],
        "title": "Webhook",
        "x-tags": [
          "Webhooks"
        ]
      },
      "WebhookDeliveryLog": {
        "type": "object",
        "properties": {
          "delivery_id": {
            "description": "The unique delivery_id for the Webhook delivery attempt",
            "type": "string",
            "readOnly": true
          },
          "event_id": {
            "description": "The unique id for that event. Shared across all delivery attempts of the same event.",
            "type": "string",
            "readOnly": true
          },
          "webhook_id": {
            "type": "string"
          },
          "webhook_name": {
            "type": "string"
          },
          "endpoint": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "retry_attempt": {
            "type": "integer"
          },
          "next_retry_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "success",
              "failed"
            ]
          },
          "response_code": {
            "type": "integer"
          },
          "duration_ms": {
            "type": "integer"
          },
          "error_message": {
            "type": [
              "string",
              "null"
            ]
          },
          "is_test": {
            "type": "boolean"
          }
        },
        "required": [
          "delivery_id",
          "event_id",
          "webhook_id",
          "webhook_name",
          "endpoint",
          "event",
          "timestamp",
          "retry_attempt",
          "next_retry_at",
          "status",
          "response_code",
          "duration_ms",
          "error_message",
          "is_test"
        ],
        "title": "WebhookDeliveryLog",
        "x-tags": [
          "Webhooks"
        ]
      },
      "WebhookDeliveryLogDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WebhookDeliveryLog"
          },
          {
            "type": "object",
            "required": [
              "request_headers",
              "request_body",
              "response_headers",
              "response_body"
            ],
            "properties": {
              "request_headers": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "request_body": {
                "type": "object"
              },
              "response_headers": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "response_body": {
                "type": "string"
              }
            }
          }
        ],
        "title": "WebhookDeliveryLogDetail",
        "x-tags": [
          "Webhooks"
        ]
      },
      "WebhookEvent": {
        "type": "object",
        "properties": {
          "event_id": {
            "description": "The unique id for that event. Shared across all delivery attempts of the same event.",
            "type": "string",
            "readOnly": true
          },
          "event": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "is_test": {
            "type": "boolean"
          }
        },
        "required": [
          "event_id",
          "event",
          "timestamp",
          "is_test"
        ],
        "title": "WebhookEvent",
        "x-tags": [
          "Webhooks"
        ]
      },
      "WebhookEventDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WebhookEvent"
          },
          {
            "type": "object",
            "required": [
              "payload",
              "deliveries",
              "webhook_relations"
            ],
            "properties": {
              "payload": {
                "type": "object"
              },
              "deliveries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebhookDeliveryLog"
                }
              },
              "webhook_relations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "webhook_id",
                    "webhook_name"
                  ],
                  "properties": {
                    "webhook_id": {
                      "type": "string"
                    },
                    "webhook_name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "title": "WebhookEventDetail",
        "x-tags": [
          "Webhooks"
        ]
      },
      "WebhookEventType": {
        "type": "object",
        "properties": {
          "event": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "event",
          "description"
        ],
        "title": "WebhookEventType",
        "x-tags": [
          "Webhooks"
        ]
      },
      "WebhookStats": {
        "type": "object",
        "properties": {
          "delivered": {
            "type": "integer"
          },
          "delivered_in_first_attempt": {
            "type": "integer"
          },
          "delivered_in_second_attempt": {
            "type": "integer"
          },
          "delivered_in_third_attempt": {
            "type": "integer"
          },
          "delivered_in_fourth_attempt": {
            "type": "integer"
          },
          "failed": {
            "type": "integer"
          },
          "total_deliveries": {
            "type": "integer"
          },
          "total_events": {
            "type": "integer"
          },
          "average_latency": {
            "type": "number"
          },
          "p50_latency": {
            "type": "number"
          },
          "p75_latency": {
            "type": "number"
          },
          "p95_latency": {
            "type": "number"
          }
        },
        "required": [
          "delivered",
          "delivered_in_first_attempt",
          "delivered_in_second_attempt",
          "delivered_in_third_attempt",
          "delivered_in_fourth_attempt",
          "failed",
          "total_deliveries",
          "total_events",
          "average_latency",
          "p50_latency",
          "p75_latency",
          "p95_latency"
        ],
        "title": "WebhookStats",
        "x-tags": [
          "Webhooks"
        ]
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                },
                "code": {
                  "type": "string"
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "fieldname": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Requested resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "success": {
                  "type": "boolean"
                },
                "code": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Not authorized for given operation on the Resource",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Not authorized for given operation on the Resource."
                },
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "code": {
                  "type": "string",
                  "example": "unauthorized"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "columnBasedFilters": {
        "name": "filters",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "{\"condition\":\"AND\",\"filters\":[{\"type\":\"data\",\"field\":\"status\",\"operator\":\"equals\",\"value\":\"success\"}]}"
        },
        "description": "JSON object"
      },
      "pageLimit": {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 25,
          "minimum": 1
        },
        "description": "no of rows per page"
      },
      "pageNumber": {
        "name": "page",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 1,
          "minimum": 1
        },
        "description": "page number of pagination list"
      },
      "searchKeyword": {
        "name": "search",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "search keyword"
      },
      "sortByOptions": {
        "name": "sort_by",
        "in": "query",
        "required": false,
        "schema": {
          "description": "json string in format {'field_name':'asc', 'other_field_name':'desc', ...}",
          "type": "string"
        },
        "description": "JSON string format: {\"field1\":\"asc\", \"field2\":\"desc\"}"
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "http",
        "scheme": "bearer"
      },
      "X-Api-Key": {
        "name": "X-Api-Key",
        "type": "apiKey",
        "in": "header"
      }
    }
  },
  "tags": [
    {
      "name": "Analytics",
      "description": "Analytics"
    },
    {
      "name": "Catalog",
      "description": "Catalog"
    },
    {
      "name": "Coupons \u0026 promotions",
      "description": "Coupons \u0026 promotions"
    },
    {
      "name": "Customers",
      "description": "Customers"
    },
    {
      "name": "Filter Options",
      "description": "Filter Options"
    },
    {
      "name": "Inventories",
      "description": "Inventories"
    },
    {
      "name": "Media Gallery",
      "description": "Media Gallery"
    },
    {
      "name": "Metrics",
      "description": "Metrics"
    },
    {
      "name": "Orders",
      "description": "Orders"
    },
    {
      "name": "Payments",
      "description": "Payments"
    },
    {
      "name": "POS",
      "description": "POS"
    },
    {
      "name": "POSAdmin",
      "description": "Admin endpoints to be used as proxy in pos"
    },
    {
      "name": "Segments",
      "description": "Segments"
    },
    {
      "name": "Shipping",
      "description": "Shipping"
    },
    {
      "name": "SSE",
      "description": "SSE"
    },
    {
      "name": "Store",
      "description": "Store"
    },
    {
      "name": "Webhooks",
      "description": "Webhooks"
    }
  ],
  "security": [
    {
      "Authorization": []
    }
  ]
}
