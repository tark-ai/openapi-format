{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0",
    "title": "CE Storefront APIs - Auth",
    "summary": "Customer-facing e-commerce API for building exceptional shopping experiences",
    "description": "Public-facing API for Commerce Engine storefronts, enabling seamless shopping experiences with product browsing, cart management, checkout processing, user accounts, and order tracking. Perfect for building web, mobile, and headless commerce applications.",
    "contact": {
      "name": "Support",
      "email": "support@commercengine.io",
      "url": "https://www.commercengine.io/contact-us"
    },
    "license": {
      "url": "https://www.commercengine.io/contact-us",
      "name": "All Rights Reserved"
    }
  },
  "servers": [
    {
      "url": "https://staging.api.commercengine.io/api/v1/{store_id}/storefront",
      "description": "Staging Server",
      "variables": {
        "store_id": {
          "description": "Store ID",
          "default": "store_id"
        }
      },
      "x-speakeasy-server-id": "staging"
    },
    {
      "url": "https://prod.api.commercengine.io/api/v1/{store_id}/storefront",
      "description": "Prod Server",
      "variables": {
        "store_id": {
          "description": "Store ID",
          "default": "store_id"
        }
      },
      "x-speakeasy-server-id": "prod"
    }
  ],
  "paths": {
    "/auth/anonymous": {
      "post": {
        "operationId": "get-anonymous-token",
        "summary": "Anonymous user",
        "description": "This API’s focus is on anonymous users who have not undergone the formal account creation process. These anonymous users are associated with a unique ID, ensuring that even in the absence of a fully realized account, there is a distinct and trackable identity for each user. \nTo interact with the system, each anonymous user is issued an access token. This access token plays a dual role in the system: it serves as a means of authenticating the user and it also acts as a tool for authorization, determining what actions the authenticated user is permitted to perform.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A string containing a descriptive message related to the success or failure of the anonymous user creation or authentication.",
                      "type": "string"
                    },
                    "success": {
                      "description": "A boolean value indicates the success or failure of the anonymous user operation.`true` for success `false` for failure.",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "user": {
                          "description": "Information about the user, including their name, email, profile image, etc.",
                          "$ref": "#/components/schemas/AnonymousUser"
                        },
                        "access_token": {
                          "description": "It is a string-based token utilized for authentication and authorization.",
                          "type": "string"
                        },
                        "refresh_token": {
                          "description": "It is a string-based token designed for refreshing the user's access token. ",
                          "type": "string"
                        }
                      },
                      "required": [
                        "user",
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-anonymous-token",
          "description": "API reference for the get-anonymous-token operation"
        },
        "security": [
          {
            "X-Api-Key": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "getAnonymousToken"
      }
    },
    "/auth/change-password": {
      "post": {
        "operationId": "change-password",
        "summary": "Change password",
        "description": "The Change Password API is a key feature designed to provide a secure and standardized method for users to update their passwords.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "old_password": {
                    "description": "The old password associated with the user's account. This parameter is crucial for verifying the user's identity before allowing a password change.",
                    "type": "string"
                  },
                  "new_password": {
                    "description": "The new password that the user intends to set for their account. This parameter is necessary for updating the password to enhance account security.",
                    "type": "string"
                  },
                  "confirm_password": {
                    "description": "A confirmation of the new password.",
                    "type": "string"
                  }
                },
                "required": [
                  "old_password",
                  "new_password",
                  "confirm_password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the change password operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "access_token": {
                          "description": "It is a string-based token utilized for authentication and authorization.",
                          "type": "string"
                        },
                        "refresh_token": {
                          "description": "It is a string-based token designed for refreshing the user's access token.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/change-password",
          "description": "API reference for the change-password operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "changePassword"
      }
    },
    "/auth/forgot-password": {
      "post": {
        "operationId": "forgot-password",
        "summary": "Forgot password",
        "description": "The Forgot Password API provides a secure mechanism for users to initiate the password recovery process. This API provides one-time password (OTP) token, which facilitas the resetting of user’s account password.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "A string representing the email address.",
                    "type": "string"
                  },
                  "phone": {
                    "description": "10 digit phone number without country code.",
                    "type": "string"
                  },
                  "country_code": {
                    "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.\nUse this key along with phone. Not necessary for email.",
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "phone",
                  "country_code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "otp_token": {
                          "description": "A string representing the OTP token which facilitas the resetting of user’s account password.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "otp_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/forgot-password",
          "description": "API reference for the forgot-password operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "forgotPassword"
      }
    },
    "/auth/generate-otp": {
      "post": {
        "operationId": "generate-otp",
        "summary": "Generate OTP",
        "description": "Generating a One-Time Password (OTP) typically involves creating a random code that is sent to a user for authentication or verification purposes.",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GenerateOtpWithPhone"
                  },
                  {
                    "$ref": "#/components/schemas/GenerateOtpWithEmail"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "otp_token": {
                          "description": "A string representing the OTP token.",
                          "type": "string"
                        },
                        "otp_action": {
                          "description": "This is used for verifying OTP or using subsequent APIs call.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "otp_token",
                        "otp_action"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/generate-otp",
          "description": "API reference for the generate-otp operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "generateOtp"
      }
    },
    "/auth/login/email": {
      "post": {
        "operationId": "login-with-email",
        "summary": "Login with email",
        "description": "This API enables users to authenticate into the system using their email address. It provides a secure way for users to Login by verifying their identity through a one-time password (OTP) sent to their email address.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "User's email address.",
                    "type": "string",
                    "format": "email"
                  },
                  "register_if_not_exists": {
                    "description": "This is used to send OTP to unregistered phone. By default it sends OTP to registered phone only. \nTo send OTP to unregistered phone it should be pass with true value like this,\n\"register_if_not_exists\": true",
                    "type": "boolean"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the Login process.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "otp_token": {
                          "description": "The otp token is a unique code that is used for authentication during the Login process.",
                          "type": "string"
                        },
                        "otp_action": {
                          "description": "It is used for verifying OTP and using subsequent API call.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "otp_token",
                        "otp_action"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/login-with-email",
          "description": "API reference for the login-with-email operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "loginWithEmail"
      }
    },
    "/auth/login/password": {
      "post": {
        "operationId": "login-with-password",
        "summary": "Login with password",
        "description": "This API endpoint allows users to Login using their password. It requires the following parameters: email/phone and password. Also allows users to securely Login and obtain access and refresh tokens for subsequent API calls.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "oneOf": [
                  {
                    "required": [
                      "phone",
                      "password"
                    ],
                    "title": "phone",
                    "properties": {
                      "phone": {
                        "description": "User's phone number.",
                        "type": "string"
                      },
                      "country_code": {
                        "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.\nUse this key along with phone. Not necessary for email.",
                        "type": "string",
                        "default": "+91"
                      },
                      "password": {
                        "description": "The password associated with the user's account.",
                        "type": "string"
                      }
                    }
                  },
                  {
                    "required": [
                      "email",
                      "password"
                    ],
                    "title": "email",
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the Login process.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "user": {
                          "description": "Information about the user, including their name, email, profile image, etc.",
                          "$ref": "#/components/schemas/User"
                        },
                        "access_token": {
                          "description": "It is a string-based token utilized for authentication and authorization.",
                          "type": "string"
                        },
                        "refresh_token": {
                          "description": "It is a string-based token designed for refreshing the user's access token.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "user",
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/login-with-password",
          "description": "API reference for the login-with-password operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "loginWithPassword"
      }
    },
    "/auth/login/phone": {
      "post": {
        "operationId": "login-with-phone",
        "summary": "Login with phone",
        "description": "This API enables users to authenticate into the system using their phone number. It provides a secure way for users to log in by verifying their identity through a one-time password (OTP) sent to their registered phone.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "country_code": {
                    "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.",
                    "type": "string",
                    "default": "+91",
                    "const": "+91"
                  },
                  "phone": {
                    "description": "10 digit phone number without country code.",
                    "type": "string"
                  },
                  "register_if_not_exists": {
                    "description": "This is used to send OTP to unregistered phone. By default it sends OTP to registered phone only. \nTo send OTP to unregistered phone it should be pass with true value like this,\n\"register_if_not_exists\": true",
                    "type": "boolean"
                  }
                },
                "required": [
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the Login process.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "otp_token": {
                          "description": "The otp token is a unique code that is used for authentication during the Login/Register process.",
                          "type": "string"
                        },
                        "otp_action": {
                          "description": "It is used for verifying OTP and using subsequent API call.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "otp_token",
                        "otp_action"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/login-with-phone",
          "description": "API reference for the login-with-phone operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "loginWithPhone"
      }
    },
    "/auth/login/whatsapp": {
      "post": {
        "operationId": "login-with-whatsapp",
        "summary": "Login with whatsapp",
        "description": "This API enables users to authenticate into the system using their WhatsApp Number. It provides a secure way for users to Login by verifying their identity through a one-time password (OTP) sent to their WhatsApp Number.",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "country_code": {
                    "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.",
                    "const": "+91"
                  },
                  "phone": {
                    "description": "10 digit phone number without country code linked with WhatsApp.",
                    "type": "string"
                  },
                  "register_if_not_exists": {
                    "description": "This is used to send OTP to unregistered phone. By default it sends OTP to registered phone only. \nTo send OTP to unregistered phone it should be pass with true value like this,\n\"register_if_not_exists\": true",
                    "type": "boolean"
                  }
                },
                "required": [
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the Login process.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "otp_token": {
                          "description": "The otp token is a unique code that is used for authentication during the Login process.",
                          "type": "string"
                        },
                        "otp_action": {
                          "description": "It is used for verifying OTP and using subsequent API call.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "otp_token",
                        "otp_action"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/login-with-whatsapp",
          "description": "API reference for the login-with-whatsapp operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "loginWithWhatsapp"
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "logout",
        "summary": "Logout user",
        "description": "The Logout User API initiate the logout process for a user. Upon a successful request, the API responds with a confirmation message. If the user is not found or there's an issue with the request, an error response is returned with an appropriate message.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "access_token": {
                          "description": "It is a string-based token utilized for authentication and authorization.",
                          "type": "string"
                        },
                        "refresh_token": {
                          "description": "It is a string-based token designed for refreshing the user's access token.",
                          "type": "string"
                        },
                        "user": {
                          "description": "An object representing user details.",
                          "$ref": "#/components/schemas/User"
                        }
                      },
                      "required": [
                        "access_token",
                        "refresh_token",
                        "user"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/logout",
          "description": "API reference for the logout operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "logout"
      }
    },
    "/auth/refresh-token": {
      "post": {
        "operationId": "refresh-token",
        "summary": "Refresh access token",
        "description": "The Refresh Access Token API is an integral component designed to enhance security and user experience. It enables clients to refresh their access tokens seamlessly, extending user sessions without compromising security.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": {
                    "description": "A string representing the refresh token.",
                    "type": "string"
                  }
                },
                "required": [
                  "refresh_token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "access_token": {
                          "description": "It is a string-based token utilized for authentication and authorization.",
                          "type": "string"
                        },
                        "refresh_token": {
                          "description": "It is a string-based token designed for refreshing the user's access token.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/refresh-token",
          "description": "API reference for the refresh-token operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "refreshToken"
      }
    },
    "/auth/register/email": {
      "post": {
        "operationId": "register-with-email",
        "summary": "Register with email",
        "description": "The API allows users to register with their email address. This endpoint enables the registration process by requesting the user's email, first name, last name, phone number.\nThe response will include a message indicating the success or failure of the registration process, as well as additional information such as the user's information, access token and refresh token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "A string representing the email address.",
                    "type": "string"
                  },
                  "first_name": {
                    "description": "A string representing the first name.",
                    "type": "string"
                  },
                  "last_name": {
                    "description": "A string representing the last name.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "phone": {
                    "description": "A string representing the phone number.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "required": [
                  "email",
                  "first_name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the Registration process.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "user": {
                          "description": "An object representing user details.",
                          "$ref": "#/components/schemas/User"
                        },
                        "access_token": {
                          "description": "It is a string-based token utilized for authentication and authorization.",
                          "type": "string"
                        },
                        "refresh_token": {
                          "description": "It is a string-based token designed for refreshing the user's access token.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "user",
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/register-with-email",
          "description": "API reference for the register-with-email operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "registerWithEmail"
      }
    },
    "/auth/register/password": {
      "post": {
        "operationId": "register-with-password",
        "summary": "Register with password",
        "description": "The User Registration with Password API facilitates user onboarding by allowing registration through a combination of phone number and email. API collects essential registration details, including phone number, email, password and the confirmation of the chosen password.\nThe response will include a message indicating the success or failure of the registration process, as well as additional information such as the user's information, access token and refresh token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RegisterWithEmailPassword"
                  },
                  {
                    "$ref": "#/components/schemas/RegisterWithPhonePassword"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the Registration process.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "user": {
                          "description": "An object representing user details.",
                          "$ref": "#/components/schemas/User"
                        },
                        "access_token": {
                          "description": "It is a string-based token utilized for authentication and authorization.",
                          "type": "string"
                        },
                        "refresh_token": {
                          "description": "It is a string-based token designed for refreshing the user's access token.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "user",
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/register-with-password",
          "description": "API reference for the register-with-password operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "registerWithPassword"
      }
    },
    "/auth/register/phone": {
      "post": {
        "operationId": "register-with-phone",
        "summary": "Register with phone",
        "description": "This API provides the functionality to register a user using their phone number. This allows you to securely register users and obtain access and refresh tokens for subsequent API calls.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "country_code": {
                    "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "const": "+91"
                  },
                  "phone": {
                    "description": "10 digit phone number without country code.",
                    "type": "string"
                  },
                  "first_name": {
                    "description": "A string representing the first name.",
                    "type": "string"
                  },
                  "last_name": {
                    "description": "A string representing the last name.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "email": {
                    "description": "A string representing the email address.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "required": [
                  "phone",
                  "first_name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the Registration process.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "user": {
                          "description": "An object representing user details.",
                          "$ref": "#/components/schemas/User"
                        },
                        "access_token": {
                          "description": "It is a string-based token utilized for authentication and authorization.",
                          "type": "string"
                        },
                        "refresh_token": {
                          "description": "It is a string-based token designed for refreshing the user's access token.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "user",
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/register-with-phone",
          "description": "API reference for the register-with-phone operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "registerWithPhone"
      }
    },
    "/auth/register/whatsapp": {
      "post": {
        "operationId": "register-with-whatsapp",
        "summary": "Register with whatsapp",
        "description": "The API allows users to register with their WhatsApp. This endpoint enables the registration process by requesting the user's WhatsApp number, first name, last name, email.\nThe response will include a message indicating the success or failure of the registration process, as well as additional information such as the user's information, access token and refresh token.\n",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "country_code": {
                    "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "const": "+91"
                  },
                  "phone": {
                    "description": "10 digit whatsapp number without country code.",
                    "type": "string"
                  },
                  "first_name": {
                    "description": "A string representing the first name.",
                    "type": "string"
                  },
                  "last_name": {
                    "description": "A string representing the last name.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "email": {
                    "description": "A string representing the email address.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "required": [
                  "phone",
                  "first_name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the Registration process.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "user": {
                          "description": "An object representing user details.",
                          "$ref": "#/components/schemas/User"
                        },
                        "access_token": {
                          "description": "It is a string-based token utilized for authentication and authorization.",
                          "type": "string"
                        },
                        "refresh_token": {
                          "description": "It is a string-based token designed for refreshing the user's access token.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "user",
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/register-with-whatsapp",
          "description": "API reference for the register-with-whatsapp operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "registerWithWhatsapp"
      }
    },
    "/auth/reset-password": {
      "post": {
        "operationId": "reset-password",
        "summary": "Reset password",
        "description": "Reset password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "new_password": {
                    "description": "The new password that the user wants to set for their account.",
                    "type": "string"
                  },
                  "confirm_password": {
                    "description": "A confirmation of the new password.",
                    "type": "string"
                  },
                  "otp_token": {
                    "description": "A string representing the OTP token which facilitas the resetting of user’s account password.",
                    "type": "string"
                  }
                },
                "required": [
                  "new_password",
                  "confirm_password",
                  "otp_token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the reset password operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "access_token": {
                          "description": "It is a string-based token utilized for authentication and authorization.",
                          "type": "string"
                        },
                        "refresh_token": {
                          "description": "It is a string-based token designed for refreshing the user's access token.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/reset-password",
          "description": "API reference for the reset-password operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "resetPassword"
      }
    },
    "/auth/user/{id}": {
      "get": {
        "operationId": "get-user-detail",
        "summary": "Retrieve a user",
        "description": "The Retrieve User API is designed to facilitate the retrieval of comprehensive user information from the system. A required parameter is a user-id of the user whose information needs to be retrieved.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the Registration process.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "user": {
                          "description": "An object containing the response content.",
                          "$ref": "#/components/schemas/User"
                        }
                      },
                      "required": [
                        "user"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-user-detail",
          "description": "API reference for the get-user-detail operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "getUserDetail"
      },
      "put": {
        "operationId": "update-user",
        "summary": "Update a user",
        "description": "The Update User API helps to efficiently modify and enhance user information within the system, ensuring that user profiles remain accurate and up-to-date. This API provides a secure and flexible mechanism for updating specific details while maintaining adherence to established conventions.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the Registration process.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "user": {
                          "description": "An object containing the response content.",
                          "$ref": "#/components/schemas/User"
                        }
                      },
                      "required": [
                        "user"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/update-user",
          "description": "API reference for the update-user operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "updateUser"
      }
    },
    "/auth/user/{id}/deactivate": {
      "put": {
        "operationId": "deactivate-user",
        "summary": "Deactivate account",
        "description": "The Deactivate Account API providing users with a straightforward method to deactivate their accounts. Upon successful deactivation, the API responds with a confirmation message. Error responses are detailed, aiding developers in addressing issues promptly.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the deactivate account operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "message",
                    "success"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/deactivate-user",
          "description": "API reference for the deactivate-user operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "deactivateUser"
      }
    },
    "/auth/user/{id}/notification-preferences": {
      "get": {
        "operationId": "get-notification-preferences",
        "summary": "Retrieve user notification preferences",
        "description": "The Retrieve Notification Preferences API allows clients to fetch a user's notification preferences based on their unique user identifier (user_id).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "notification_preferences": {
                          "description": "An object containing the user's notification preferences.",
                          "$ref": "#/components/schemas/NotificationPreferences"
                        }
                      },
                      "required": [
                        "notification_preferences"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-notification-preferences",
          "description": "API reference for the get-notification-preferences operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "getNotificationPreferences"
      },
      "post": {
        "operationId": "create-notification-preferences",
        "summary": "Create user notification preferences",
        "description": "Create user notification preferences API allows clients to create a user's notification preferences based on their unique user identifier (user_id).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notification_preferences": {
                    "description": "An object containing the user's notification preferences.",
                    "$ref": "#/components/schemas/NotificationPreferences"
                  }
                },
                "required": [
                  "notification_preferences"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "notification_preferences": {
                          "description": "An object containing the user's notification preferences.",
                          "$ref": "#/components/schemas/NotificationPreferences"
                        }
                      },
                      "required": [
                        "notification_preferences"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/create-notification-preferences",
          "description": "API reference for the create-notification-preferences operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "createNotificationPreferences"
      },
      "put": {
        "operationId": "update-notification-preferences",
        "summary": "Update user notification preferences",
        "description": "Update Notification Preferences API allows clients to update a user's notification preferences based on their unique user identifier (user_id).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notification_preferences": {
                    "description": "An object containing the user's notification preferences.",
                    "$ref": "#/components/schemas/NotificationPreferences"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "notification_preferences": {
                          "description": "An object containing the user's notification preferences.",
                          "$ref": "#/components/schemas/NotificationPreferences"
                        }
                      },
                      "required": [
                        "notification_preferences"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/update-notification-preferences",
          "description": "API reference for the update-notification-preferences operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "updateNotificationPreferences"
      }
    },
    "/auth/user/{id}/profile-image": {
      "post": {
        "operationId": "add-profile-image",
        "summary": "Add profile image",
        "description": "The Profile Image API streamlines the process of uploading profile images associating with user accounts, offering a user-centric approach to visual identity customization. Upon success, the API responds with a confirmation message. In case of errors, clear error messages facilitate quick issue resolution. Overall, the Profile Image API enhances user engagement by seamlessly integrating personalized visual elements into digital platforms.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "contentMediaType": "application/octet-stream"
                  }
                },
                "required": [
                  "image"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the add operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "profile_image_url": {
                          "description": "A string representing the URL to a profile image.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "profile_image_url"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/add-profile-image",
          "description": "API reference for the add-profile-image operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "addProfileImage"
      },
      "put": {
        "operationId": "update-profile-image",
        "summary": "Update profile image",
        "description": "The Profile Image API streamlines the process of updating profile images associating with user accounts, offering a user-centric approach to visual identity customization. Upon success, the API responds with a confirmation message. In case of errors, clear error messages facilitate quick issue resolution. Overall, the Profile Image API enhances user engagement by seamlessly integrating personalized visual elements into digital platforms.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "contentMediaType": "application/octet-stream"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the update operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "profile_image_url": {
                          "description": "A string representing the URL to a profile image.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "profile_image_url"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/update-profile-image",
          "description": "API reference for the update-profile-image operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "updateProfileImage"
      },
      "delete": {
        "operationId": "remove-profile-image",
        "summary": "Delete profile image",
        "description": "Delete profile image API streamlines the process of removing profile images associating with user accounts. Upon success, the API responds with a confirmation message. In case of errors, clear error messages facilitate quick issue resolution.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the delete operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "message",
                    "success"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/remove-profile-image",
          "description": "API reference for the remove-profile-image operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "removeProfileImage"
      },
      "get": {
        "operationId": "get-profile-image",
        "summary": "Retrieve a profile image",
        "description": "Retrieve user profile image API streamlines the process of retriving profile images associating with user accounts. Upon success, the API responds with a confirmation message. In case of errors, clear error messages facilitate quick issue resolution.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the retrieve operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "profile_image_url": {
                          "description": "A string representing the URL to a profile image.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "profile_image_url"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-profile-image",
          "description": "API reference for the get-profile-image operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "getProfileImage"
      }
    },
    "/auth/verified-email-phone": {
      "post": {
        "operationId": "check-verification-status",
        "summary": "Check email/phone verification status",
        "description": "The Check Verification Status API allows to verify the status of email and phone number verification for a specific user. Upon a successful request, the API responds with the verification status of the provided email and phone number. If the user is not found or there's an issue with the request, an error response is returned with an appropriate message.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "description": "A string representing the phone number.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "email": {
                    "description": "A string representing the email address.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A descriptive message confirming the success or failure of the operation.",
                      "type": "string"
                    },
                    "success": {
                      "description": "Indicates whether the request was successful or failure (true for success, false for failure).",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "verified_phone": {
                          "description": "An array containing verified phone numbers for the user",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "verified_email": {
                          "description": "An array containing verified email address for the user.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "verified_phone",
                        "verified_email"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/check-verification-status",
          "description": "API reference for the check-verification-status operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "checkVerificationStatus"
      }
    },
    "/auth/verify-otp": {
      "post": {
        "operationId": "verify-otp",
        "summary": "Verify OTP",
        "description": "This API endpoint allows you to verify a one-time password (OTP) for authentication purposes. By sending a request to this endpoint with the necessary parameters, you can confirm the validity of the OTP provided by the user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "otp": {
                    "description": "A string representing the one-time password.",
                    "type": "string"
                  },
                  "otp_token": {
                    "description": "A string representing the OTP token.",
                    "type": "string"
                  },
                  "otp_action": {
                    "description": "A string indicating the action to be performed.",
                    "type": "string",
                    "enum": [
                      "login",
                      "register",
                      "reset-password",
                      "verify-phone",
                      "verify-email",
                      "update-phone",
                      "update-email"
                    ]
                  }
                },
                "required": [
                  "otp",
                  "otp_token",
                  "otp_action"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "A string providing additional information about the response.",
                      "type": "string"
                    },
                    "success": {
                      "description": " A boolean indicating whether the operation was successful or not.",
                      "type": "boolean"
                    },
                    "content": {
                      "description": "An object containing the response content.",
                      "properties": {
                        "user": {
                          "description": "An object representing user details.",
                          "$ref": "#/components/schemas/User"
                        },
                        "access_token": {
                          "description": "A string representing the access token.",
                          "type": "string"
                        },
                        "refresh_token": {
                          "description": "A string representing the refresh token.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "user",
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/verify-otp",
          "description": "API reference for the verify-otp operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "x-speakeasy-group": "auth",
        "x-speakeasy-ignore": false,
        "x-speakeasy-name-override": "verifyOtp"
      }
    }
  },
  "components": {
    "schemas": {
      "AnonymousUser": {
        "$ref": "./components/schemas/AnonymousUser.json"
      },
      "GenerateOtpWithEmail": {
        "$ref": "./components/schemas/GenerateOtpWithEmail.json"
      },
      "GenerateOtpWithPhone": {
        "$ref": "./components/schemas/GenerateOtpWithPhone.json"
      },
      "NotificationPreferences": {
        "$ref": "./components/schemas/NotificationPreferences.json"
      },
      "RegisterWithEmailPassword": {
        "$ref": "./components/schemas/RegisterWithEmailPassword.json"
      },
      "RegisterWithPhonePassword": {
        "$ref": "./components/schemas/RegisterWithPhonePassword.json"
      },
      "User": {
        "$ref": "./components/schemas/User.json"
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "x-speakeasy-error-message": true
                },
                "success": {
                  "type": "boolean"
                },
                "code": {
                  "type": "string"
                },
                "error": {
                  "type": "object"
                }
              },
              "required": [
                "message",
                "success",
                "code"
              ]
            }
          }
        }
      },
      "NotFound": {
        "description": "Requested resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "x-speakeasy-error-message": true
                },
                "success": {
                  "type": "boolean"
                },
                "code": {
                  "type": "string"
                }
              },
              "required": [
                "message",
                "success",
                "code"
              ]
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Not authorized for given operation on the Resource",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "examples": [
                    "Not authorized for given operation on the Resource."
                  ],
                  "x-speakeasy-error-message": true
                },
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "code": {
                  "type": "string",
                  "examples": [
                    "unauthorized"
                  ]
                }
              },
              "required": [
                "message",
                "success",
                "code"
              ]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "http",
        "description": "Access token",
        "scheme": "bearer"
      },
      "X-Api-Key": {
        "type": "apiKey",
        "description": "API key for your store",
        "name": "X-Api-Key",
        "in": "header"
      }
    }
  },
  "tags": [
    {
      "name": "Auth",
      "description": "auth"
    }
  ],
  "externalDocs": {
    "url": "https://llm-docs.commercengine.io",
    "description": "Commerce Engine API Reference Documentation"
  }
}
