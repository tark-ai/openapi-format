{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0",
    "title": "CE Storefront APIs - POS",
    "summary": "Customer-facing e-commerce API for building exceptional shopping experiences",
    "description": "Public-facing API for Commerce Engine storefronts, enabling seamless shopping experiences with product browsing, cart management, checkout processing, user accounts, and order tracking. Perfect for building web, mobile, and headless commerce applications.",
    "contact": {
      "name": "Support",
      "email": "support@commercengine.io",
      "url": "https://www.commercengine.io/contact-us"
    },
    "license": {
      "url": "https://www.commercengine.io/contact-us",
      "name": "All Rights Reserved"
    }
  },
  "servers": [
    {
      "url": "https://staging.api.commercengine.io/api/v1/{store_id}/storefront",
      "description": "Staging Server",
      "variables": {
        "store_id": {
          "description": "Store ID",
          "default": "store_id"
        }
      },
      "x-speakeasy-server-id": "staging"
    },
    {
      "url": "https://prod.api.commercengine.io/api/v1/{store_id}/storefront",
      "description": "Prod Server",
      "variables": {
        "store_id": {
          "description": "Store ID",
          "default": "store_id"
        }
      },
      "x-speakeasy-server-id": "prod"
    }
  ],
  "paths": {
    "/pos/auth/login/email": {
      "post": {
        "operationId": "login-pos-device-with-email",
        "summary": "Login with email",
        "description": "Login to POS device using email. Login to POS device using phone.  The endpoint requires authentication with an API key that has the scope set to 'storefront' for a particular store, ensuring secure access for user login operation.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "location_id": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "location_id",
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "otp_token": {
                          "type": "string"
                        },
                        "otp_action": {
                          "type": "string",
                          "const": "login"
                        }
                      },
                      "required": [
                        "otp_token",
                        "otp_action"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/login-pos-device-with-email",
          "description": "API reference for the login-pos-device-with-email operation"
        },
        "security": [
          {
            "X-Api-Key": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "loginWithEmail"
      },
      "parameters": []
    },
    "/pos/auth/login/phone": {
      "post": {
        "operationId": "login-pos-device-with-phone",
        "summary": "Login with phone",
        "description": "Login to POS device using phone.  The endpoint requires authentication with an API key that has the scope set to 'storefront' for a particular store, ensuring secure access for user login operation.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "location_id": {
                    "type": "string"
                  },
                  "phone": {
                    "description": "10 digit phone number without country code.",
                    "type": "string"
                  },
                  "country_code": {
                    "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.",
                    "type": "string",
                    "default": "+91"
                  }
                },
                "required": [
                  "location_id",
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "otp_token": {
                          "type": "string"
                        },
                        "otp_action": {
                          "type": "string",
                          "const": "login"
                        }
                      },
                      "required": [
                        "otp_token",
                        "otp_action"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/login-pos-device-with-phone",
          "description": "API reference for the login-pos-device-with-phone operation"
        },
        "security": [
          {
            "X-Api-Key": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "loginWithPhone"
      },
      "parameters": []
    },
    "/pos/auth/login/whatsapp": {
      "post": {
        "operationId": "login-pos-device-with-whatsapp",
        "summary": "Login with whatsapp",
        "description": "Login to POS device using whatsapp. Login to POS device using phone.  The endpoint requires authentication with an API key that has the scope set to 'storefront' for a particular store, ensuring secure access for user login operation.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "location_id": {
                    "type": "string"
                  },
                  "phone": {
                    "description": "10 digit phone number without country code linked with WhatsApp.",
                    "type": "string"
                  },
                  "country_code": {
                    "description": "Two-letter code begin with a plus sign prefix that identifies different countries. By default it will be +91 if not provided.",
                    "type": "string",
                    "default": "+91"
                  }
                },
                "required": [
                  "location_id",
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "otp_token": {
                          "type": "string"
                        },
                        "otp_action": {
                          "type": "string",
                          "const": "login"
                        }
                      },
                      "required": [
                        "otp_token",
                        "otp_action"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/login-pos-device-with-whatsapp",
          "description": "API reference for the login-pos-device-with-whatsapp operation"
        },
        "security": [
          {
            "X-Api-Key": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "loginWithWhatsapp"
      },
      "parameters": []
    },
    "/pos/auth/logout": {
      "post": {
        "operationId": "logout-from-pos-device",
        "summary": "Logout",
        "description": "This endpoint ends the current loggedin session for the POS device. This action immediately invalidates the previously issued access token(s), preventing any further use. A new login is required to regain access.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "message",
                    "success"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/logout-from-pos-device",
          "description": "API reference for the logout-from-pos-device operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "verifyOtp"
      },
      "parameters": []
    },
    "/pos/auth/pair-device": {
      "post": {
        "operationId": "pair-pos-device",
        "summary": "Pair POS device",
        "description": "This endpoint allows a POS device to be activated by submitting a valid pairing code received via phone or email. The endpoint requires authentication with an API key that has the scope set to 'storefront' for a particular store, ensuring secure access for device activation operation.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pairing_code": {
                    "type": "string"
                  }
                },
                "required": [
                  "pairing_code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "device": {
                          "$ref": "#/components/schemas/PosDevice"
                        }
                      },
                      "required": [
                        "device"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/pair-pos-device",
          "description": "API reference for the pair-pos-device operation"
        },
        "security": [
          {
            "X-Api-Key": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "pairDevice"
      }
    },
    "/pos/auth/refresh-token": {
      "post": {
        "operationId": "refresh-pos-access-token",
        "summary": "Refresh POS access token",
        "description": "Refresh POS access token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": {
                    "type": "string"
                  }
                },
                "required": [
                  "refresh_token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "access_token": {
                          "type": "string"
                        },
                        "refresh_token": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/refresh-pos-access-token",
          "description": "API reference for the refresh-pos-access-token operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "refreshAccessToken"
      },
      "parameters": []
    },
    "/pos/auth/verify-otp": {
      "post": {
        "operationId": "verify-pos-login-otp",
        "summary": "Verify OTP",
        "description": "Verify POS login otp. Login to POS device using phone.  The endpoint requires authentication with an API key that has the scope set to 'storefront' for a particular store.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "otp": {
                    "description": "A string representing the one-time password.",
                    "type": "string"
                  },
                  "otp_token": {
                    "description": "A string representing the OTP token.",
                    "type": "string"
                  },
                  "otp_action": {
                    "description": "A string indicating the action to be performed.",
                    "enum": [
                      "login"
                    ]
                  }
                },
                "required": [
                  "otp",
                  "otp_token",
                  "otp_action"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/PosUser"
                        },
                        "access_token": {
                          "type": "string"
                        },
                        "refresh_token": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "user",
                        "access_token",
                        "refresh_token"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/verify-pos-login-otp",
          "description": "API reference for the verify-pos-login-otp operation"
        },
        "security": [
          {
            "X-Api-Key": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "verifyOtp"
      },
      "parameters": []
    },
    "/pos/carts": {
      "post": {
        "operationId": "pos-create-cart",
        "summary": "Create cart",
        "description": "Create cart",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UpdateCartItem"
                    }
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "items"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/create-cart",
          "description": "API reference for the create-cart operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "createCart"
      }
    },
    "/pos/carts/available-coupons": {
      "get": {
        "operationId": "pos-list-coupons",
        "summary": "Retrieve all coupons",
        "description": "Retrieve active coupons",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "coupons": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Coupon"
                          }
                        }
                      },
                      "required": [
                        "coupons"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-coupons",
          "description": "API reference for the list-coupons operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listCoupons"
      }
    },
    "/pos/carts/available-promotions": {
      "get": {
        "operationId": "pos-list-promotions",
        "summary": "Retrieve all promotions",
        "description": "All active promotions",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "promotions": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Promotion"
                          }
                        }
                      },
                      "required": [
                        "promotions"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-promotions",
          "description": "API reference for the list-promotions operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listPromotions"
      }
    },
    "/pos/carts/{id}": {
      "get": {
        "operationId": "pos-get-cart",
        "summary": "Retrieve cart detail",
        "description": "Retrieve cart detail",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "cart details"
                      ],
                      "readOnly": true
                    },
                    "success": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-cart",
          "description": "API reference for the get-cart operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "getCart"
      },
      "delete": {
        "operationId": "pos-delete-cart",
        "summary": "Delete cart",
        "description": "delete all items from the cart.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "All cart items are removed."
                      ],
                      "readOnly": true
                    },
                    "success": {
                      "type": "boolean",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "message",
                    "success"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/delete-cart",
          "description": "API reference for the delete-cart operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "deleteCart"
      }
    },
    "/pos/carts/{id}/address": {
      "post": {
        "operationId": "pos-create-cart-address",
        "summary": "Update cart address",
        "description": "Update billing and shipping address",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update billing and shipping address during checkout",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "oneOf": [
                  {
                    "title": "Registered User",
                    "description": "For registered users where address is previously added",
                    "required": [
                      "billing_address_id",
                      "shipping_address_id"
                    ],
                    "properties": {
                      "billing_address_id": {
                        "type": "string"
                      },
                      "shipping_address_id": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "title": "Guest User",
                    "description": "For guest checkout where address is not saved",
                    "required": [
                      "billing_address",
                      "shipping_address"
                    ],
                    "properties": {
                      "billing_address": {
                        "$ref": "#/components/schemas/CustomerAddress"
                      },
                      "shipping_address": {
                        "$ref": "#/components/schemas/CustomerAddress"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "Address updated successfully"
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/create-cart-address",
          "description": "API reference for the create-cart-address operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "createCartAddress"
      }
    },
    "/pos/carts/{id}/coupon": {
      "post": {
        "operationId": "pos-apply-coupon",
        "summary": "Apply coupon",
        "description": "Apply coupon",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "coupon_code": {
                    "type": "string",
                    "examples": [
                      "FLAT100OFF"
                    ]
                  }
                },
                "required": [
                  "coupon_code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/apply-coupon",
          "description": "API reference for the apply-coupon operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "applyCoupon"
      },
      "delete": {
        "operationId": "pos-remove-coupon",
        "summary": "Remove coupon",
        "description": "remove coupon from cart",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/remove-coupon",
          "description": "API reference for the remove-coupon operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "removeCoupon"
      }
    },
    "/pos/carts/{id}/credit-balance": {
      "post": {
        "operationId": "pos-redeem-credit-balance",
        "summary": "Use credit balance",
        "description": "Use credit balance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "credit_balance_used": {
                    "type": "number",
                    "format": "double",
                    "examples": [
                      200
                    ]
                  }
                },
                "required": [
                  "credit_balance_used"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/redeem-credit-balance",
          "description": "API reference for the redeem-credit-balance operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "redeemCreditBalance"
      },
      "delete": {
        "operationId": "pos-remove-credit-balance",
        "summary": "Remove credit balance",
        "description": "remove credit balance applied to cart",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/remove-credit-balance",
          "description": "API reference for the remove-credit-balance operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "removeCreditBalance"
      }
    },
    "/pos/carts/{id}/evaluate-coupons": {
      "get": {
        "operationId": "pos-evaluate-coupons",
        "summary": "Evaluate coupons",
        "description": "Evaluate applicable \u0026 inapplicable coupons based on the specified cart.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "applicable_coupons": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApplicableCoupon"
                          }
                        },
                        "inapplicable_coupons": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/InapplicableCoupon"
                          }
                        }
                      },
                      "required": [
                        "applicable_coupons",
                        "inapplicable_coupons"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/evaluate-coupons",
          "description": "API reference for the evaluate-coupons operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listPromotions"
      }
    },
    "/pos/carts/{id}/evaluate-promotions": {
      "get": {
        "operationId": "pos-evaluate-promotions",
        "summary": "Evaluate promotions",
        "description": "Evaluate applicable \u0026 inapplicable promotions based on the specified cart.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "applicable_promotions": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ApplicablePromotion"
                          }
                        },
                        "inapplicable_promotions": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/InapplicablePromotion"
                          }
                        }
                      },
                      "required": [
                        "applicable_promotions",
                        "inapplicable_promotions"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/evaluate-promotions",
          "description": "API reference for the evaluate-promotions operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listPromotions"
      }
    },
    "/pos/carts/{id}/fulfillment-preference": {
      "post": {
        "operationId": "pos-update-fulfillment-preference",
        "summary": "Update fulfillment preference",
        "description": "Update fulfillment preference",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CollectInStoreFulfillment"
                  },
                  {
                    "$ref": "#/components/schemas/DeliveryFulfillment"
                  },
                  {
                    "$ref": "#/components/schemas/PartialCollectAndDelivery"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "message",
                    "success"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/update-fulfillment-preference",
          "description": "API reference for the update-fulfillment-preference operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "updateFulfillmentPreference"
      }
    },
    "/pos/carts/{id}/items": {
      "post": {
        "operationId": "pos-update-cart",
        "summary": "Add/delete cart item",
        "description": "Add Item to cart. To delete item from cart, pass quantity = 0",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "cart id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCartItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/update-cart",
          "description": "API reference for the update-cart operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "updateCart"
      }
    },
    "/pos/carts/{id}/loyalty-points": {
      "post": {
        "operationId": "pos-redeem-loyalty-points",
        "summary": "Redeem loyalty points",
        "description": "Redeem loyalty points",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "loyalty_point_redeemed": {
                    "type": "integer",
                    "examples": [
                      1000
                    ],
                    "minimum": 1
                  }
                },
                "required": [
                  "loyalty_point_redeemed"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/redeem-loyalty-points",
          "description": "API reference for the redeem-loyalty-points operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "redeemLoyaltyPoints"
      },
      "delete": {
        "operationId": "pos-remove-loyalty-points",
        "summary": "Remove loyalty points",
        "description": "Remove loyalty points applied in cart",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cart ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/remove-loyalty-points",
          "description": "API reference for the remove-loyalty-points operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "removeLoyaltyPoints"
      }
    },
    "/pos/carts/{id}/update-customer": {
      "post": {
        "operationId": "update-pos-cart-customer",
        "summary": "Update cart customer",
        "description": "Link customer to the specified cart.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "cart id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PosUpdateCustomerWithId"
                  },
                  {
                    "$ref": "#/components/schemas/PosUpdateCustomerWithPhone"
                  },
                  {
                    "$ref": "#/components/schemas/PosUpdateCustomerWithEmail"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "cart": {
                          "$ref": "#/components/schemas/Cart"
                        }
                      },
                      "required": [
                        "cart"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/update-pos-cart-customer",
          "description": "API reference for the update-pos-cart-customer operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "updateCartCustomer"
      }
    },
    "/pos/catalog/categories": {
      "get": {
        "operationId": "pos-list-categories",
        "summary": "List all categories",
        "description": "Returns a list of your product categories. The categories are returned sorted by creation date, with the most recently created categories appearing first.",
        "parameters": [
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "$ref": "#/components/parameters/sortingParam"
          },
          {
            "name": "nested_level",
            "in": "query",
            "description": "return child categories up to nesting level",
            "schema": {
              "type": "integer",
              "default": 0,
              "maximum": 4,
              "minimum": 0
            }
          },
          {
            "name": "parent_category_id",
            "in": "query",
            "description": "To return child categories using category id.",
            "schema": {
              "type": "string",
              "example": "01JWZW41Y3FBKTZSP399SKANY7",
              "examples": [
                "01JWZW41Y3FBKTZSP399SKANY7"
              ]
            }
          },
          {
            "name": "parent_category_slug",
            "in": "query",
            "description": "To return child categories using category slug",
            "schema": {
              "type": "string",
              "example": "vitals"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "all categories"
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "categories": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductCategory"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "categories",
                        "pagination"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-categories",
          "description": "API reference for the list-categories operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listCategories"
      }
    },
    "/pos/catalog/products": {
      "get": {
        "operationId": "pos-list-products",
        "summary": "List all products",
        "description": "Returns a list of your products. The products are returned sorted by creation date, with the most recently created products appearing first.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/pageLimitParam"
          },
          {
            "$ref": "#/components/parameters/sortingParam"
          },
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "category_id",
            "in": "query",
            "description": "filter products by categories ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "name": "category_slug",
            "in": "query",
            "description": "filter products by categories slugs",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "inventory",
            "in": "query",
            "description": "Determines whether to include or exlude inventory details in response json",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "Products retrieved successfully."
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Product"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "products",
                        "pagination"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-products",
          "description": "API reference for the list-products operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listProducts"
      }
    },
    "/pos/catalog/products/cross-sell": {
      "get": {
        "operationId": "pos-list-crosssell-products",
        "summary": "Retrieve cross-sell products",
        "description": "Retrieves a list of products specified for cross selling. The cross-sell products are returned based on product ids specified in request param.",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "no of rows per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number in pagination",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "description": "Product ids of cart items",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "json to sort records",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Item"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "products",
                        "pagination"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-crosssell-products",
          "description": "API reference for the list-crosssell-products operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listCrosssellProducts"
      }
    },
    "/pos/catalog/products/search": {
      "post": {
        "operationId": "pos-search-products",
        "summary": "Search products",
        "description": "Search for products matching a specific words or characters given.",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchProduct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "skus": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Item"
                          }
                        },
                        "facet_distribution": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "integer"
                            }
                          }
                        },
                        "facet_stats": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "min": {
                                "type": "number"
                              },
                              "max": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "min",
                              "max"
                            ]
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "skus",
                        "facet_distribution",
                        "facet_stats",
                        "pagination"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/search-products",
          "description": "API reference for the search-products operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "searchProducts"
      }
    },
    "/pos/catalog/products/similar": {
      "get": {
        "operationId": "pos-list-similar-products",
        "summary": "Retrieve similar products",
        "description": "Retrieves a list of products similar to a specified product based on their attributes and category. The similar products are returned sorted by relevance, with the most closely matching products appearing first. Useful for providing product recommendations to your customers.",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "no of rows per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number in pagination",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "description": "to retrieve similar products of specified products",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "json to sort records",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Item"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "products",
                        "pagination"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-similar-products",
          "description": "API reference for the list-similar-products operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listSimilarProducts"
      }
    },
    "/pos/catalog/products/up-sell": {
      "get": {
        "operationId": "pos-list-upsell-products",
        "summary": "Retrieve up-sell products",
        "description": "Retrieves a list of products specified for upsell. The upsell products are returned based on product ids specified in request param.",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "no of rows per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number in pagination",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "description": "Product ids of cart items",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "json to sort records",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Masssage",
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "products": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Item"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "products",
                        "pagination"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-upsell-products",
          "description": "API reference for the list-upsell-products operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listUpsellProducts"
      }
    },
    "/pos/catalog/products/{product_id_or_slug}": {
      "get": {
        "operationId": "pos-get-product-detail",
        "summary": "Retrieve a product detail",
        "description": "Retrieves the details of an existing product. Supply either the unique product ID or the unique slug, and Commerce Engine will return the corresponding product information.",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "inventory",
            "in": "query",
            "description": "Determines whether to include or exlude inventory details in response json",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "product_id_or_slug",
            "in": "path",
            "description": "The unique identifier of the product. Can be either the product ID or the slug.",
            "required": true,
            "schema": {
              "type": "string",
              "examples": [
                "01XGCYCT8CRHXW4BG91JXCMDCW",
                "detox-candy"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "Products retrieved successfully."
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "product": {
                          "$ref": "#/components/schemas/ProductDetail"
                        }
                      },
                      "required": [
                        "product"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-product-detail",
          "description": "API reference for the get-product-detail operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "getProductDetail"
      }
    },
    "/pos/catalog/products/{product_id}/reviews": {
      "get": {
        "operationId": "pos-list-product-reviews",
        "summary": "List all product reviews",
        "description": "List of reviews for a specified product. The reviews are returned sorted by submission date, with the most recent reviews appearing first. You can filter the reviews by rating, reviewer, or date for more detailed analysis.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/pageLimitParam"
          },
          {
            "$ref": "#/components/parameters/sortingParam"
          },
          {
            "$ref": "#/components/parameters/searchKeyword"
          },
          {
            "name": "product_id",
            "in": "path",
            "description": "id of a particular product",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "review_tag",
            "in": "query",
            "description": "filter review with review tag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "reviews": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProductReview"
                          }
                        },
                        "review_tags": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": "string"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "reviews"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-product-reviews",
          "description": "API reference for the list-product-reviews operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listProductReviews"
      }
    },
    "/pos/catalog/products/{product_id}/variants": {
      "get": {
        "operationId": "pos-list-product-variants",
        "summary": "Retrieve product variants",
        "description": "Retrieves the variants of an existing product. Supply the unique product ID, and Commerce Engine will return the corresponding product variants information.",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "inventory",
            "in": "query",
            "description": "Determines whether to include or exlude inventory details in response json",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "product_id",
            "in": "path",
            "description": "ID of a particular product",
            "required": true,
            "schema": {
              "type": "string",
              "examples": [
                "01H7YK0C86V9PGT0HXRJVEZXJQ"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "Products retrieved successfully."
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "variants": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Variant"
                          }
                        }
                      },
                      "required": [
                        "variants"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-product-variants",
          "description": "API reference for the list-product-variants operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listProductVariants"
      }
    },
    "/pos/catalog/products/{product_id}/variants/{variant_id}": {
      "get": {
        "operationId": "pos-get-variant-detail",
        "summary": "Retrieve variant detail",
        "description": "Retrieves the details of a particular variant. Supply the unique product ID, and variant ID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "inventory",
            "in": "query",
            "description": "Determines whether to include or exlude inventory details in response json",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "product_id",
            "in": "path",
            "description": "product id",
            "required": true,
            "schema": {
              "type": "string",
              "examples": [
                "01H7YK0C86V9PGT0HXRJVEZXJQ"
              ]
            }
          },
          {
            "name": "variant_id",
            "in": "path",
            "description": "variant id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "Products retrieved successfully."
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "variant": {
                          "$ref": "#/components/schemas/VariantDetail"
                        }
                      },
                      "required": [
                        "variant"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-variant-detail",
          "description": "API reference for the get-variant-detail operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "getVariantDetail"
      }
    },
    "/pos/catalog/skus": {
      "get": {
        "operationId": "pos-list-skus",
        "summary": "List all SKUs",
        "description": "Returns a list of SKUs. The SKUs are returned sorted by creation date, with the most recently created SKUs appearing first.",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageParam"
          },
          {
            "$ref": "#/components/parameters/pageLimitParam"
          },
          {
            "$ref": "#/components/parameters/sortingParam"
          },
          {
            "$ref": "#/components/parameters/CustomerGroupId"
          },
          {
            "name": "category_id",
            "in": "query",
            "description": "filter sku by categories",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "explode": true,
            "style": "form"
          },
          {
            "name": "inventory",
            "in": "query",
            "description": "Determines whether to include or exlude inventory details in response json",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sku",
            "in": "query",
            "description": "array of sku",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "examples": [
                        "SKUs retrieved successfully."
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "skus": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Item"
                          },
                          "readOnly": true
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      },
                      "required": [
                        "skus",
                        "pagination"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-skus",
          "description": "API reference for the list-skus operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listSkus"
      }
    },
    "/pos/devices": {
      "get": {
        "operationId": "list-pos-devices",
        "summary": "List all available devices",
        "description": "List all available devices.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "devices": {
                          "$ref": "#/components/schemas/PosDevice"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-pos-devices",
          "description": "API reference for the list-pos-devices operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listAvailableDevices"
      },
      "parameters": []
    },
    "/pos/devices/{id}/claim": {
      "post": {
        "operationId": "claim-pos-device",
        "summary": "Claim device",
        "description": "Claim device",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "device id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "message",
                    "success"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/claim-pos-device",
          "description": "API reference for the claim-pos-device operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "claimDevice"
      }
    },
    "/pos/devices/{id}/unclaim": {
      "post": {
        "operationId": "unclaim-pos-device",
        "summary": "Unclaim device",
        "description": "Unclaim device",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "device id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "message",
                    "success"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/unclaim-pos-device",
          "description": "API reference for the unclaim-pos-device operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "unclaimDevice"
      }
    },
    "/pos/fulfillment-options": {
      "post": {
        "operationId": "get-pos-fulfillment-options",
        "summary": "Retrieve fulfillment options",
        "description": "This endpoint returns the available fulfillment options for a given cart and delivery pincode. It provides both delivery options and collect-in-store (Click \u0026 Collect) options, including details of store locations where the item can be collected.",
        "parameters": [],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartBasedServiceabilityCheck"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "summary": {
                          "type": "object",
                          "properties": {
                            "collect_available": {
                              "type": "boolean"
                            },
                            "deliver_available": {
                              "type": "boolean"
                            },
                            "recommended_fulfillment_type": {
                              "enum": [
                                "collect-in-store",
                                "delivery"
                              ]
                            },
                            "recommended_store": {
                              "$ref": "#/components/schemas/CollectInStore"
                            }
                          },
                          "required": [
                            "collect_available",
                            "deliver_available",
                            "recommended_fulfillment_type"
                          ]
                        },
                        "collect": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CollectInStore"
                          }
                        },
                        "deliver": {
                          "$ref": "#/components/schemas/PincodeServiceability"
                        }
                      },
                      "required": [
                        "summary"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-pos-fulfillment-options",
          "description": "API reference for the get-pos-fulfillment-options operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "fulfillmentOptions"
      },
      "parameters": []
    },
    "/pos/locations": {
      "get": {
        "operationId": "list-pos-locations",
        "summary": "List all locations",
        "description": "List all locations.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "locations": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PosLocation"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-pos-locations",
          "description": "API reference for the list-pos-locations operation"
        },
        "security": [
          {
            "X-Api-Key": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listLocations"
      },
      "parameters": []
    },
    "/pos/orders": {
      "post": {
        "operationId": "create-pos-order",
        "summary": "Create order",
        "description": "Creates a new order from a POS device.",
        "parameters": [],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cart_id"
                    ],
                    "properties": {
                      "cart_id": {
                        "type": "string"
                      },
                      "device_id": {
                        "description": "Optional. if provided, this device will be used for the payment of this order. Otherwise, already claimed device will be used for the payment purpose.",
                        "type": "string"
                      }
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PayWithCash"
                      },
                      {
                        "$ref": "#/components/schemas/PayWithUpi"
                      },
                      {
                        "$ref": "#/components/schemas/PayWithCard"
                      },
                      {
                        "$ref": "#/components/schemas/PayWithPaymentGateway"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "order": {
                          "$ref": "#/components/schemas/Order"
                        },
                        "payment_required": {
                          "description": "true if to_be_paid \u003e 0, otherwise false for zero value order.",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "order",
                        "payment_required"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/create-pos-order",
          "description": "API reference for the create-pos-order operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "createPosOrder"
      },
      "parameters": []
    },
    "/pos/orders/{order_number}/payment-status": {
      "get": {
        "operationId": "pos-get-payment-status",
        "summary": "Retrieve payment status",
        "description": "Retrieve payment status of a paricular order.",
        "parameters": [
          {
            "name": "order_number",
            "in": "path",
            "description": "order number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "order details",
                      "readOnly": true
                    },
                    "success": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "content": {
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "pending",
                            "success",
                            "failed",
                            "partially_paid"
                          ]
                        },
                        "amount_paid": {
                          "type": "number",
                          "format": "double"
                        },
                        "amount_unpaid": {
                          "type": "number",
                          "format": "double"
                        },
                        "is_retry_available": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "status",
                        "amount_paid",
                        "amount_unpaid",
                        "is_retry_available"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-payment-status",
          "description": "API reference for the get-payment-status operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "getPaymentStatus"
      }
    },
    "/pos/payments/payment-options": {
      "get": {
        "operationId": "pos-list-payment-options",
        "summary": "List all payment options",
        "description": "List all payment options",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "payment_options": {
                          "type": "array",
                          "items": {
                            "enum": [
                              "CASH",
                              "UPI",
                              "CARD",
                              "PG"
                            ]
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/list-payment-options",
          "description": "API reference for the list-payment-options operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "listPaymentMethods"
      }
    },
    "/pos/users/{id}": {
      "get": {
        "operationId": "get-pos-user",
        "summary": "Get POS User",
        "description": "Get POS User",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "content": {
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/PosUser"
                        }
                      },
                      "required": [
                        "user"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "message",
                    "success",
                    "content"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "externalDocs": {
          "url": "https://llm-docs.commercengine.io/operations/get-pos-user",
          "description": "API reference for the get-pos-user operation"
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "POS"
        ],
        "x-speakeasy-group": "pos",
        "x-speakeasy-ignore": true,
        "x-speakeasy-name-override": "getUserDetail"
      }
    }
  },
  "components": {
    "parameters": {
      "CustomerGroupId": {
        "name": "x-customer-group-id",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "This param is used to determine product pricing, promotions, and subscription rates.  If a valid customer group id is provided, pricing details will be retrieved accordingly.  If no matching data is found for the specified customer group id, the system will fall back to the default customer group id.  If no data is found for the default group either, the highest applicable price will be returned."
      },
      "pageLimitParam": {
        "name": "limit",
        "in": "query",
        "description": "no of rows per page",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1
        }
      },
      "pageParam": {
        "name": "page",
        "in": "query",
        "description": "page number of pagination list",
        "required": false,
        "schema": {
          "type": "number",
          "minimum": 1
        }
      },
      "searchKeyword": {
        "name": "search",
        "in": "query",
        "description": "search keyword",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "sortingParam": {
        "name": "sort_by",
        "in": "query",
        "description": "JSON string format: {\"field1\":\"asc\", \"field2\":\"desc\"}",
        "required": false,
        "schema": {
          "description": "json string in format {'field_name':'asc', 'other_field_name':'desc', ...}",
          "type": "string",
          "examples": [
            "{\"country\":\"asc\",\"city\":\"asc\",\"population\":\"desc\"}"
          ]
        }
      }
    },
    "schemas": {
      "ApplicableCoupon": {
        "$ref": "./components/schemas/ApplicableCoupon.json"
      },
      "ApplicablePromotion": {
        "$ref": "./components/schemas/ApplicablePromotion.json"
      },
      "Cart": {
        "$ref": "./components/schemas/Cart.json"
      },
      "CartBasedServiceabilityCheck": {
        "$ref": "./components/schemas/CartBasedServiceabilityCheck.json"
      },
      "CollectInStore": {
        "$ref": "./components/schemas/CollectInStore.json"
      },
      "CollectInStoreFulfillment": {
        "$ref": "./components/schemas/CollectInStoreFulfillment.json"
      },
      "Coupon": {
        "$ref": "./components/schemas/Coupon.json"
      },
      "CustomerAddress": {
        "$ref": "./components/schemas/CustomerAddress.json"
      },
      "DeliveryFulfillment": {
        "$ref": "./components/schemas/DeliveryFulfillment.json"
      },
      "InapplicableCoupon": {
        "$ref": "./components/schemas/InapplicableCoupon.json"
      },
      "InapplicablePromotion": {
        "$ref": "./components/schemas/InapplicablePromotion.json"
      },
      "Item": {
        "$ref": "./components/schemas/Item.json"
      },
      "Order": {
        "$ref": "./components/schemas/Order.json"
      },
      "Pagination": {
        "$ref": "./components/schemas/Pagination.json"
      },
      "PartialCollectAndDelivery": {
        "$ref": "./components/schemas/PartialCollectAndDelivery.json"
      },
      "PayWithCard": {
        "$ref": "./components/schemas/PayWithCard.json"
      },
      "PayWithCash": {
        "$ref": "./components/schemas/PayWithCash.json"
      },
      "PayWithPaymentGateway": {
        "$ref": "./components/schemas/PayWithPaymentGateway.json"
      },
      "PayWithUpi": {
        "$ref": "./components/schemas/PayWithUpi.json"
      },
      "PincodeServiceability": {
        "$ref": "./components/schemas/PincodeServiceability.json"
      },
      "PosDevice": {
        "$ref": "./components/schemas/PosDevice.json"
      },
      "PosLocation": {
        "$ref": "./components/schemas/PosLocation.json"
      },
      "PosUpdateCustomerWithEmail": {
        "$ref": "./components/schemas/PosUpdateCustomerWithEmail.json"
      },
      "PosUpdateCustomerWithId": {
        "$ref": "./components/schemas/PosUpdateCustomerWithId.json"
      },
      "PosUpdateCustomerWithPhone": {
        "$ref": "./components/schemas/PosUpdateCustomerWithPhone.json"
      },
      "PosUser": {
        "$ref": "./components/schemas/PosUser.json"
      },
      "Product": {
        "$ref": "./components/schemas/Product.json"
      },
      "ProductCategory": {
        "$ref": "./components/schemas/ProductCategory.json"
      },
      "ProductDetail": {
        "$ref": "./components/schemas/ProductDetail.json"
      },
      "ProductReview": {
        "$ref": "./components/schemas/ProductReview.json"
      },
      "Promotion": {
        "$ref": "./components/schemas/Promotion.json"
      },
      "SearchProduct": {
        "$ref": "./components/schemas/SearchProduct.json"
      },
      "UpdateCartItem": {
        "$ref": "./components/schemas/UpdateCartItem.json"
      },
      "Variant": {
        "$ref": "./components/schemas/Variant.json"
      },
      "VariantDetail": {
        "$ref": "./components/schemas/VariantDetail.json"
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "x-speakeasy-error-message": true
                },
                "success": {
                  "type": "boolean"
                },
                "code": {
                  "type": "string"
                },
                "error": {
                  "type": "object"
                }
              },
              "required": [
                "message",
                "success",
                "code"
              ]
            }
          }
        }
      },
      "NotFound": {
        "description": "Requested resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "x-speakeasy-error-message": true
                },
                "success": {
                  "type": "boolean"
                },
                "code": {
                  "type": "string"
                }
              },
              "required": [
                "message",
                "success",
                "code"
              ]
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Not authorized for given operation on the Resource",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "examples": [
                    "Not authorized for given operation on the Resource."
                  ],
                  "x-speakeasy-error-message": true
                },
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "code": {
                  "type": "string",
                  "examples": [
                    "unauthorized"
                  ]
                }
              },
              "required": [
                "message",
                "success",
                "code"
              ]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "http",
        "description": "Access token",
        "scheme": "bearer"
      },
      "X-Api-Key": {
        "type": "apiKey",
        "description": "API key for your store",
        "name": "X-Api-Key",
        "in": "header"
      }
    }
  },
  "tags": [
    {
      "name": "POS",
      "description": "POS"
    }
  ],
  "externalDocs": {
    "url": "https://llm-docs.commercengine.io",
    "description": "Commerce Engine API Reference Documentation"
  }
}
